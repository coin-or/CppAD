[project_name]
data = 'CppAD'

[directory]
project_directory = '.'
rst_directory     = 'build/rst'
html_directory    = 'build/html'
tex_directory     = 'build/tex'

[root_file]
default = 'user_guide.xrst'
app     = 'appendix/appendix.xrst'
dev     = 'xrst/devel/devel.xrst'

[heading]
#   level         0,     1,     2,     3,     4,
character = [   '#',   '*',   '=',   '-',   '.',  ]
overline  = [ false, false, false, false, false,  ]

[include_all]
rst_epilog = ''
rst_prolog = '''
.. |space| unicode:: 0xA0
.. |tab| replace:: |space| |space| |space|
'''
latex_macro = [
   '\newcommand{\W}[1]{ \; #1 \; }',
   '\newcommand{\R}[1]{ {\rm #1} }',
   '\newcommand{\B}[1]{ {\bf #1} }',
   '\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }',
   '\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }',
   '\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }',
   '\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }',
]

# BEGIN_SORT_THIS_LINE_PLUS_3
[project_dictionary]
data = [ '''
   acos
   acosh
   addr
   adolc
   af
   afun
   alloc
   allocator
   arg
   asin
   asinh
   atan
   atanh
   azmul
   bool
   boolean
   cc
   ccc
   cd
   checkpointing
   chkpoint
   cmake
   col
   colpack
   compilers
   cond
   config
   const
   cos
   cpp
   cppad
   cppadcg
   ctor
   cygwin
   dd
   det
   determinant
   dir
   dvector
   dyn
   eigen
   endif
   enum
   eps
   eq
   eqnarray
   erf
   eval
   exp
   fabs
   factorization
   fadbad
   gcc
   gt
   hes
   hpp
   ident
   ifndef
   implementations
   ind
   int
   ipopt
   iterator
   itr
   jac
   jit
   json
   le
   lexer
   ll
   lt
   lu
   max
   microsoft
   min
   mm
   mul
   multi
   namespace
   nan
   nc
   nlp
   nowrap
   num
   obj
   ok
   omp
   op
   openmp
   operand
   optimizer
   os
   pc
   pkg
   preprocessor
   pthread
   ptr
   rc
   rcv
   rec
   recursion
   rel
   res
   resize
   retape
   runge
   sacado
   seq
   setvec
   sh
   sinh
   sizeof
   sparsity
   sqrt
   std
   subgraph
   taylor
   th
   unix
   val
   var
   vec
   vecad
''' ]
# END_SORT_THIS_LINE_MINUS_2
