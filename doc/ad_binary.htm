<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>AD Binary Arithmetic Operators</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="AD Binary Arithmetic Operators">
<meta name="keywords" id="keywords" content=" ad binary arithmetic operators syntax purpose op base x y z operation sequence example derivative addition subtraction multiplication division ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ad_binary_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="unary_minus.cpp.htm" target="_top">Prev</a>
</td><td><a href="add.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>AD</option>
<option>ADValued</option>
<option>Arithmetic</option>
<option>ad_binary</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_ad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_advalued_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_arithmetic_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_ad_binary_htm.js'></script>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>Op</option>
<option>Base</option>
<option>x</option>
<option>y</option>
<option>z</option>
<option>Operation Sequence</option>
<option>Example</option>
<option>Derivative</option>
<option>---..Addition</option>
<option>---..Subtraction</option>
<option>---..Multiplication</option>
<option>---..Division</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<b>This is cppad-20221105 documentation</b>. Here is a link to its
<a href="https://cppad.readthedocs.io" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>AD Binary Arithmetic Operators</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>z</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>Op</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>


<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
Performs arithmetic operations where either 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 or 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>

has type

<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>
 or
<a href="vecad.htm#VecAD&lt;Base&gt;::reference" target="_top"><span style='white-space: nowrap'>VecAD&lt;Base&gt;::reference</span></a>
.

<br>
<br>
<b><big><a name="Op" id="Op">Op</a></big></b>
<br>
The operator 
<code><i><font color="black"><span style='white-space: nowrap'>Op</span></font></i></code>
 is one of the following
<table><tr><td align='left'  valign='top'>

<b>Op</b>  </td><td align='left'  valign='top'>
 <b>Meaning</b> </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">+</font></code>   </td><td align='left'  valign='top'>
 
<code><i><font color="black"><span style='white-space: nowrap'>z</span></font></i></code>
 is 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 plus 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
 </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">-</font></code>   </td><td align='left'  valign='top'>
 
<code><i><font color="black"><span style='white-space: nowrap'>z</span></font></i></code>
 is 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 minus 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
 </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">*</font></code>   </td><td align='left'  valign='top'>
 
<code><i><font color="black"><span style='white-space: nowrap'>z</span></font></i></code>
 is 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 times 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
 </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">/</font></code>   </td><td align='left'  valign='top'>
 
<code><i><font color="black"><span style='white-space: nowrap'>z</span></font></i></code>
 is 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 divided by 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>

</td></tr>
</table>
<br>
<b><big><a name="Base" id="Base">Base</a></big></b>
<br>
The type 
<code><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i></code>
 is determined by the operand that
has type 
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>
 or 
<code><font color="blue"><span style='white-space: nowrap'>VecAD&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;::reference</span></font></code>
.

<br>
<br>
<b><big><a name="x" id="x">x</a></big></b>
<br>
The operand 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 has the following prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>Type</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&amp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
where 
<code><i><font color="black"><span style='white-space: nowrap'>Type</span></font></i></code>
 is

<code><font color="blue"><span style='white-space: nowrap'>VecAD&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;::reference</span></font></code>
,

<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>
,

<code><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i></code>
, or
<code><font color="blue">double</font></code>.

<br>
<br>
<b><big><a name="y" id="y">y</a></big></b>
<br>
The operand 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
 has the following prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>Type</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&amp;</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
where 
<code><i><font color="black"><span style='white-space: nowrap'>Type</span></font></i></code>
 is

<code><font color="blue"><span style='white-space: nowrap'>VecAD&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;::reference</span></font></code>
,

<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>
,

<code><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i></code>
, or
<code><font color="blue">double</font></code>.


<br>
<br>
<b><big><a name="z" id="z">z</a></big></b>
<br>
The result 
<code><i><font color="black"><span style='white-space: nowrap'>z</span></font></i></code>
 has the following prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>Type</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>z</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
where 
<code><i><font color="black"><span style='white-space: nowrap'>Type</span></font></i></code>
 is

<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>
.

<br>
<br>
<b><big><a name="Operation Sequence" id="Operation Sequence">Operation Sequence</a></big></b>
<br>
This is an <a href="glossary.htm#Operation.Atomic" target="_top"><span style='white-space: nowrap'>atomic_base</span></a>

<a href="glossary.htm#AD of Base" target="_top"><span style='white-space: nowrap'>AD&nbsp;of&nbsp;Base</span></a>
 operation
and hence it is part of the current
AD of 
<code><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i></code>

<a href="glossary.htm#Operation.Sequence" target="_top"><span style='white-space: nowrap'>operation&nbsp;sequence</span></a>
.



<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The following files contain examples and tests of these functions.
Each test returns true if it succeeds and false otherwise.
<table><tr><td align='left'  valign='top'>

<a href="add.cpp.htm" target="_top">add.cpp</a></td><td>
AD Binary Addition: Example and Test</td></tr>
<tr><td>

<a href="sub.cpp.htm" target="_top">sub.cpp</a></td><td>
AD Binary Subtraction: Example and Test</td></tr>
<tr><td>

<a href="mul.cpp.htm" target="_top">mul.cpp</a></td><td>
AD Binary Multiplication: Example and Test</td></tr>
<tr><td>

<a href="div.cpp.htm" target="_top">div.cpp</a></td><td>
AD Binary Division: Example and Test</td></tr>
<tr><td>

</td></tr>
</table>
<br>
<b><big><a name="Derivative" id="Derivative">Derivative</a></big></b>
<br>
If <small>@(@
f
@)@</small> and <small>@(@
g
@)@</small> are
<a href="glossary.htm#Base Function" target="_top"><span style='white-space: nowrap'>Base&nbsp;functions</span></a>


<br>
<br>
<big><a name="Derivative.Addition" id="Derivative.Addition">Addition</a></big>

<br>
<small>@[@

    \D{[ f(x) + g(x) ]}{x} = \D{f(x)}{x} + \D{g(x)}{x}

@]@</small><br>
<big><a name="Derivative.Subtraction" id="Derivative.Subtraction">Subtraction</a></big>

<br>
<small>@[@

    \D{[ f(x) - g(x) ]}{x} = \D{f(x)}{x} - \D{g(x)}{x}

@]@</small><br>
<big><a name="Derivative.Multiplication" id="Derivative.Multiplication">Multiplication</a></big>

<br>
<small>@[@

    \D{[ f(x) * g(x) ]}{x} = g(x) * \D{f(x)}{x} + f(x) * \D{g(x)}{x}

@]@</small><br>
<big><a name="Derivative.Division" id="Derivative.Division">Division</a></big>

<br>
<small>@[@

    \D{[ f(x) / g(x) ]}{x} =
        [1/g(x)] * \D{f(x)}{x} - [f(x)/g(x)^2] * \D{g(x)}{x}

@]@</small>
<hr>Input File: include/cppad/core/ad_binary.hpp

</body>
</html>
