<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Reverse Mode Second Partial Derivative Driver</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Reverse Mode Second Partial Derivative Driver">
<meta name="keywords" id="keywords" content=" reverse mode second partial derivative driver syntax purpose f x i j ddw basevector sizevector_t revtwo uses forward examples ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_revtwo_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="for_two.cpp.htm" target="_top">Prev</a>
</td><td><a href="rev_two.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>ADFun</option>
<option>drivers</option>
<option>RevTwo</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_adfun_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_drivers_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_revtwo_htm.js'></script>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>f</option>
<option>x</option>
<option>i</option>
<option>j</option>
<option>ddw</option>
<option>BaseVector</option>
<option>SizeVector_t</option>
<option>RevTwo Uses Forward</option>
<option>Examples</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<b>This is old CppAD documentation:</b> Here is a link to its
<a href="http://coin-or.github.io/CppAD" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Reverse Mode Second Partial Derivative Driver</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>ddw</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'>.RevTwo(</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>



<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
We use <small>@(@
F : \B{R}^n \rightarrow \B{R}^m
@)@</small> to denote the
<a href="glossary.htm#AD Function" target="_top"><span style='white-space: nowrap'>AD&nbsp;function</span></a>
 corresponding to 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
.
The syntax above sets
<small>@[@

    ddw [ k * p + \ell ]
    =
    \DD{ F_{i[ \ell ]} }{ x_{j[ \ell ]} }{ x_k } (x)

@]@</small>
for <small>@(@
k = 0 , \ldots , n-1
@)@</small>
and <small>@(@
\ell = 0 , \ldots , p
@)@</small>,
where <small>@(@
p
@)@</small> is the size of the vectors 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i></code>
 and 
<code><i><font color="black"><span style='white-space: nowrap'>j</span></font></i></code>
.

<br>
<br>
<b><big><a name="f" id="f">f</a></big></b>
<br>
The object 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;ADFun&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
Note that the <a href="adfun.htm" target="_top"><span style='white-space: nowrap'>ADFun</span></a>
 object 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
 is not <code><font color="blue">const</font></code>
(see <a href="revtwo.htm#RevTwo Uses Forward" target="_top"><span style='white-space: nowrap'>RevTwo&nbsp;Uses&nbsp;Forward</span></a>
 below).

<br>
<br>
<b><big><a name="x" id="x">x</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>BaseVector</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&amp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
(see <a href="revtwo.htm#BaseVector" target="_top"><span style='white-space: nowrap'>BaseVector</span></a>
 below)
and its size
must be equal to 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
, the dimension of the
<a href="fun_property.htm#Domain" target="_top"><span style='white-space: nowrap'>domain</span></a>
 space for 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
.
It specifies
that point at which to evaluate the partial derivatives listed above.

<br>
<br>
<b><big><a name="i" id="i">i</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>SizeVector_t</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&amp;</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
(see <a href="revtwo.htm#SizeVector_t" target="_top"><span style='white-space: nowrap'>SizeVector_t</span></a>
 below)
We use 
<code><i><font color="black"><span style='white-space: nowrap'>p</span></font></i></code>
 to denote the size of the vector 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i></code>
.
All of the indices in 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i></code>

must be less than 
<code><i><font color="black"><span style='white-space: nowrap'>m</span></font></i></code>
, the dimension of the
<a href="fun_property.htm#Range" target="_top"><span style='white-space: nowrap'>range</span></a>
 space for 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
; i.e.,
for <small>@(@
\ell = 0 , \ldots , p-1
@)@</small>, <small>@(@
i[ \ell ]  < m
@)@</small>.

<br>
<br>
<b><big><a name="j" id="j">j</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>j</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>SizeVector_t</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&amp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
(see <a href="revtwo.htm#SizeVector_t" target="_top"><span style='white-space: nowrap'>SizeVector_t</span></a>
 below)
and its size must be equal to 
<code><i><font color="black"><span style='white-space: nowrap'>p</span></font></i></code>
,
the size of the vector 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i></code>
.
All of the indices in 
<code><i><font color="black"><span style='white-space: nowrap'>j</span></font></i></code>

must be less than 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
; i.e.,
for <small>@(@
\ell = 0 , \ldots , p-1
@)@</small>, <small>@(@
j[ \ell ]  < n
@)@</small>.

<br>
<br>
<b><big><a name="ddw" id="ddw">ddw</a></big></b>
<br>
The result 
<code><i><font color="black"><span style='white-space: nowrap'>ddw</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>BaseVector</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>ddw</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
(see <a href="revtwo.htm#BaseVector" target="_top"><span style='white-space: nowrap'>BaseVector</span></a>
 below)
and its size is <small>@(@
n * p
@)@</small>.
It contains the requested partial derivatives; to be specific,
for <small>@(@
k = 0 , \ldots , n - 1
@)@</small>
and <small>@(@
\ell = 0 , \ldots , p - 1
@)@</small>
<small>@[@

    ddw [ k * p + \ell ]
    =
    \DD{ F_{i[ \ell ]} }{ x_{j[ \ell ]} }{ x_k } (x)

@]@</small>

<br>
<br>
<b><big><a name="BaseVector" id="BaseVector">BaseVector</a></big></b>
<br>
The type 
<code><i><font color="black"><span style='white-space: nowrap'>BaseVector</span></font></i></code>
 must be a <a href="simplevector.htm" target="_top"><span style='white-space: nowrap'>SimpleVector</span></a>
 class with
<a href="simplevector.htm#Elements of Specified Type" target="_top"><span style='white-space: nowrap'>elements&nbsp;of&nbsp;type&nbsp;Base</span></a>
.
The routine <a href="checksimplevector.htm" target="_top"><span style='white-space: nowrap'>CheckSimpleVector</span></a>
 will generate an error message
if this is not the case.

<br>
<br>
<b><big><a name="SizeVector_t" id="SizeVector_t">SizeVector_t</a></big></b>
<br>
The type 
<code><i><font color="black"><span style='white-space: nowrap'>SizeVector_t</span></font></i></code>
 must be a <a href="simplevector.htm" target="_top"><span style='white-space: nowrap'>SimpleVector</span></a>
 class with
<a href="simplevector.htm#Elements of Specified Type" target="_top"><span style='white-space: nowrap'>elements&nbsp;of&nbsp;type&nbsp;size_t</span></a>
.
The routine <a href="checksimplevector.htm" target="_top"><span style='white-space: nowrap'>CheckSimpleVector</span></a>
 will generate an error message
if this is not the case.

<br>
<br>
<b><big><a name="RevTwo Uses Forward" id="RevTwo Uses Forward">RevTwo Uses Forward</a></big></b>
<br>
After each call to <a href="forward.htm" target="_top"><span style='white-space: nowrap'>Forward</span></a>
,
the object 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
 contains the corresponding
<a href="glossary.htm#Taylor Coefficient" target="_top"><span style='white-space: nowrap'>Taylor&nbsp;coefficients</span></a>
.
After a call to <code><font color="blue">RevTwo</font></code>,
the zero order Taylor coefficients correspond to

<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'>.Forward(0,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>

and the other coefficients are unspecified.

<br>
<br>
<b><big><a name="Examples" id="Examples">Examples</a></big></b>

<br>
The routine
<a href="rev_two.cpp.htm" target="_top"><span style='white-space: nowrap'>RevTwo</span></a>
 is both an example and test.
It returns <code><font color="blue">true</font></code>, if it succeeds and <code><font color="blue">false</font></code> otherwise.


<hr>Input File: include/cppad/core/rev_two.hpp

</body>
</html>
