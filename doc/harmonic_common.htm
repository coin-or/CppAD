<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Common Variables Used by Multi-threading Sum of 1/i</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Common Variables Used by Multi-threading Sum of 1/i">
<meta name="keywords" id="keywords" content=" common variables used multi-threading sum 1/i purpose source ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_harmonic_common_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="harmonic.cpp.htm" target="_top">Prev</a>
</td><td><a href="harmonic_setup.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>multi_thread</option>
<option>thread_test.cpp</option>
<option>harmonic.cpp</option>
<option>harmonic_common</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_multi_thread_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_thread_test.cpp_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_harmonic.cpp_htm.js'></script>
</td>
<td>harmonic_common</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Purpose</option>
<option>Source</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<b>This is cppad-20221105 documentation</b>. Here is a link to its
<a href="https://cppad.readthedocs.io/en/latest/user_guide.html" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Common Variables Used by Multi-threading Sum of 1/i</big></big></b></center>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
This source code defines the common
include files, defines, and variables that are used by
the summation that defines the harmonic series
<small>@[@

    1 + 1/2 + 1/3 + ... + 1/n

@]@</small>

<br>
<br>
<b><big><a name="Source" id="Source">Source</a></big></b>

<pre><tt>


<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/cppad.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">"harmonic.hpp"</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">"team_thread.hpp"</font>
<b><font color="#000080"># define</font></b> MAX_NUMBER_THREADS <font color="#993399">48</font>

<b><font color="#0000FF">namespace</font></b> <font color="#FF0000">{</font>
    <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>thread_alloc<font color="#990000">;</font> <i><font color="#9A1900">// fast multi-threadeding memory allocator</font></i>

    <i><font color="#9A1900">// Number of threads, set by previous call to harmonic_time</font></i>
    <i><font color="#9A1900">// (zero means one thread with no multi-threading setup)</font></i>
    <font color="#008080">size_t</font> num_threads_ <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>

    <i><font color="#9A1900">// value of mega_sum, set by previous call to harmonic_time.</font></i>
    <font color="#008080">size_t</font> mega_sum_<font color="#990000">;</font>

    <i><font color="#9A1900">// structure with information for one thread</font></i>
    <b><font color="#0000FF">typedef</font></b> <b><font color="#0000FF">struct</font></b> <font color="#FF0000">{</font>
        <i><font color="#9A1900">// index to start summation at (worker input)</font></i>
        <i><font color="#9A1900">// set by previous call to harmonic_setup</font></i>
        <font color="#008080">size_t</font> start<font color="#990000">;</font>
        <i><font color="#9A1900">// index to end summation at (worker input)</font></i>
        <i><font color="#9A1900">// set by previous call to harmonic_setup</font></i>
        <font color="#008080">size_t</font> stop<font color="#990000">;</font>
        <i><font color="#9A1900">// summation for this thread</font></i>
        <i><font color="#9A1900">// set by worker</font></i>
        <font color="#009900">double</font> sum<font color="#990000">;</font>
        <i><font color="#9A1900">// false if an error occurs, true otherwise</font></i>
        <i><font color="#9A1900">// set by worker</font></i>
        <font color="#009900">bool</font>   ok<font color="#990000">;</font>
    <font color="#FF0000">}</font> work_one_t<font color="#990000">;</font>

    <i><font color="#9A1900">// vector with information for all threads</font></i>
    <i><font color="#9A1900">// (use pointers instead of values to avoid false sharing)</font></i>
    work_one_t<font color="#990000">*</font> work_all_<font color="#990000">[</font>MAX_NUMBER_THREADS<font color="#990000">];</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: example/multi_thread/harmonic.cpp

</body>
</html>
