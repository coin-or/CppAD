<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>sparse_rcv: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="sparse_rcv: Example and Test">
<meta name="keywords" id="keywords" content=" sparse_rcv: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_sparse_rcv.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="sparse_rcv.htm" target="_top">Prev</a>
</td><td><a href="speed_test.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>sparse_rcv</option>
<option>sparse_rcv.cpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_utility_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_sparse_rcv_htm.js'></script>
</td>
<td>sparse_rcv.cpp</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@


<center><b><big><big>sparse_rcv: Example and Test</big></big></b></center>
<pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/utility/sparse_rcv.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;vector&gt;</font>

<font color="#009900">bool</font> <b><font color="#000000">sparse_rcv</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>   <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
    <b><font color="#0000FF">typedef</font></b> std<font color="#990000">::</font><font color="#008080">vector&lt;size_t&gt;</font> SizeVector<font color="#990000">;</font>
    <b><font color="#0000FF">typedef</font></b> std<font color="#990000">::</font><font color="#008080">vector&lt;double&gt;</font> ValueVector<font color="#990000">;</font>

    <i><font color="#9A1900">// sparsity pattern for a 5 by 5 diagonal matrix</font></i>
    <font color="#008080">size_t</font> nr  <font color="#990000">=</font> <font color="#993399">5</font><font color="#990000">;</font>
    <font color="#008080">size_t</font> nc  <font color="#990000">=</font> <font color="#993399">5</font><font color="#990000">;</font>
    <font color="#008080">size_t</font> nnz <font color="#990000">=</font> <font color="#993399">5</font><font color="#990000">;</font>
    CppAD<font color="#990000">::</font><font color="#008080">sparse_rc&lt;SizeVector&gt;</font> <b><font color="#000000">pattern</font></b><font color="#990000">(</font>nr<font color="#990000">,</font> nc<font color="#990000">,</font> nnz<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> nnz<font color="#990000">;</font> k<font color="#990000">++)</font>
    <font color="#FF0000">{</font>   <font color="#008080">size_t</font> r <font color="#990000">=</font> nnz <font color="#990000">-</font> k <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">;</font> <i><font color="#9A1900">// reverse or column-major order</font></i>
        <font color="#008080">size_t</font> c <font color="#990000">=</font> nnz <font color="#990000">-</font> k <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">;</font>
        pattern<font color="#990000">.</font><b><font color="#000000">set</font></b><font color="#990000">(</font>k<font color="#990000">,</font> r<font color="#990000">,</font> c<font color="#990000">);</font>
    <font color="#FF0000">}</font>

    <i><font color="#9A1900">// sparse matrix</font></i>
    CppAD<font color="#990000">::</font><font color="#008080">sparse_rcv&lt;SizeVector, ValueVector&gt;</font> <b><font color="#000000">matrix</font></b><font color="#990000">(</font>pattern<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> nnz<font color="#990000">;</font> k<font color="#990000">++)</font>
    <font color="#FF0000">{</font>   <font color="#009900">double</font> v <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font>k<font color="#990000">);</font>
        matrix<font color="#990000">.</font><b><font color="#000000">set</font></b><font color="#990000">(</font>nnz <font color="#990000">-</font> k <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">,</font> v<font color="#990000">);</font>
    <font color="#FF0000">}</font>

    <i><font color="#9A1900">// row, column, and value vectors</font></i>
    <b><font color="#0000FF">const</font></b> SizeVector<font color="#990000">&amp;</font>  <b><font color="#000000">row</font></b><font color="#990000">(</font> matrix<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()</font> <font color="#990000">);</font>
    <b><font color="#0000FF">const</font></b> SizeVector<font color="#990000">&amp;</font>  <b><font color="#000000">col</font></b><font color="#990000">(</font> matrix<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()</font> <font color="#990000">);</font>
    <b><font color="#0000FF">const</font></b> ValueVector<font color="#990000">&amp;</font> <b><font color="#000000">val</font></b><font color="#990000">(</font> matrix<font color="#990000">.</font><b><font color="#000000">val</font></b><font color="#990000">()</font> <font color="#990000">);</font>
    <font color="#008080">SizeVector</font> col_major <font color="#990000">=</font> matrix<font color="#990000">.</font><b><font color="#000000">col_major</font></b><font color="#990000">();</font>

    <i><font color="#9A1900">// check row,  column, and value</font></i>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> nnz<font color="#990000">;</font> k<font color="#990000">++)</font>
    <font color="#FF0000">{</font>   ok <font color="#990000">&amp;=</font> row<font color="#990000">[</font> col_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> k<font color="#990000">;</font>
        ok <font color="#990000">&amp;=</font> col<font color="#990000">[</font> col_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> k<font color="#990000">;</font>
        ok <font color="#990000">&amp;=</font> val<font color="#990000">[</font> col_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#009900">double</font><font color="#990000">(</font>k<font color="#990000">);</font>
    <font color="#FF0000">}</font>

    <i><font color="#9A1900">// pat</font></i>
    <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font><font color="#008080">sparse_rc&lt;SizeVector&gt;</font> <b><font color="#000000">pat</font></b><font color="#990000">(</font> matrix<font color="#990000">.</font><b><font color="#000000">pat</font></b><font color="#990000">()</font> <font color="#990000">);</font>
    ok <font color="#990000">&amp;=</font> nnz <font color="#990000">==</font> pat<font color="#990000">.</font><b><font color="#000000">nnz</font></b><font color="#990000">();</font>
    ok <font color="#990000">&amp;=</font> nr  <font color="#990000">==</font> pat<font color="#990000">.</font><b><font color="#000000">nr</font></b><font color="#990000">();</font>
    ok <font color="#990000">&amp;=</font> nc  <font color="#990000">==</font> pat<font color="#990000">.</font><b><font color="#000000">nc</font></b><font color="#990000">();</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> nnz<font color="#990000">;</font> k<font color="#990000">++)</font>
    <font color="#FF0000">{</font>   ok <font color="#990000">&amp;=</font> row<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">==</font> pat<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()[</font>k<font color="#990000">];</font>
        ok <font color="#990000">&amp;=</font> col<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">==</font> pat<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">()[</font>k<font color="#990000">];</font>
    <font color="#FF0000">}</font>

    <i><font color="#9A1900">// create an empty matrix</font></i>
    CppAD<font color="#990000">::</font><font color="#008080">sparse_rcv&lt;SizeVector, ValueVector&gt;</font> other<font color="#990000">;</font>
    ok <font color="#990000">&amp;=</font> other<font color="#990000">.</font><b><font color="#000000">nnz</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">;</font>
    ok <font color="#990000">&amp;=</font> other<font color="#990000">.</font><b><font color="#000000">nr</font></b><font color="#990000">()</font>  <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">;</font>
    ok <font color="#990000">&amp;=</font> other<font color="#990000">.</font><b><font color="#000000">nc</font></b><font color="#990000">()</font>  <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">;</font>

    <i><font color="#9A1900">// now swap other with matrix</font></i>
    matrix<font color="#990000">.</font><b><font color="#000000">swap</font></b><font color="#990000">(</font>other<font color="#990000">);</font>
    ok <font color="#990000">&amp;=</font> matrix<font color="#990000">.</font><b><font color="#000000">nnz</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">;</font>
    ok <font color="#990000">&amp;=</font> matrix<font color="#990000">.</font><b><font color="#000000">nr</font></b><font color="#990000">()</font>  <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">;</font>
    ok <font color="#990000">&amp;=</font> matrix<font color="#990000">.</font><b><font color="#000000">nc</font></b><font color="#990000">()</font>  <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">;</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> nnz<font color="#990000">;</font> k<font color="#990000">++)</font>
    <font color="#FF0000">{</font>   ok <font color="#990000">&amp;=</font> other<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()[</font> col_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> k<font color="#990000">;</font>
        ok <font color="#990000">&amp;=</font> other<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">()[</font> col_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> k<font color="#990000">;</font>
        ok <font color="#990000">&amp;=</font> other<font color="#990000">.</font><b><font color="#000000">val</font></b><font color="#990000">()[</font> col_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#009900">double</font><font color="#990000">(</font>k<font color="#990000">);</font>
    <font color="#FF0000">}</font>

    <i><font color="#9A1900">// now use the assignment statement</font></i>
    matrix <font color="#990000">=</font> other<font color="#990000">;</font>
    ok    <font color="#990000">&amp;=</font> other<font color="#990000">.</font><b><font color="#000000">nr</font></b><font color="#990000">()</font>  <font color="#990000">==</font> matrix<font color="#990000">.</font><b><font color="#000000">nr</font></b><font color="#990000">();</font>
    ok    <font color="#990000">&amp;=</font> other<font color="#990000">.</font><b><font color="#000000">nc</font></b><font color="#990000">()</font>  <font color="#990000">==</font> matrix<font color="#990000">.</font><b><font color="#000000">nc</font></b><font color="#990000">();</font>
    ok    <font color="#990000">&amp;=</font> other<font color="#990000">.</font><b><font color="#000000">nnz</font></b><font color="#990000">()</font> <font color="#990000">==</font> matrix<font color="#990000">.</font><b><font color="#000000">nnz</font></b><font color="#990000">();</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> nnz<font color="#990000">;</font> k<font color="#990000">++)</font>
    <font color="#FF0000">{</font>   ok <font color="#990000">&amp;=</font> matrix<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()[</font>k<font color="#990000">]</font> <font color="#990000">==</font> other<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()[</font>k<font color="#990000">];</font>
        ok <font color="#990000">&amp;=</font> matrix<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">()[</font>k<font color="#990000">]</font> <font color="#990000">==</font> other<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">()[</font>k<font color="#990000">];</font>
        ok <font color="#990000">&amp;=</font> matrix<font color="#990000">.</font><b><font color="#000000">val</font></b><font color="#990000">()[</font>k<font color="#990000">]</font> <font color="#990000">==</font> other<font color="#990000">.</font><b><font color="#000000">val</font></b><font color="#990000">()[</font>k<font color="#990000">];</font>
    <font color="#FF0000">}</font>

    <i><font color="#9A1900">// now use the copy constructor</font></i>
    CppAD<font color="#990000">::</font><font color="#008080">sparse_rcv&lt;SizeVector, ValueVector&gt;</font> <b><font color="#000000">copy</font></b><font color="#990000">(</font>matrix<font color="#990000">);</font>
    ok    <font color="#990000">&amp;=</font> copy<font color="#990000">.</font><b><font color="#000000">nr</font></b><font color="#990000">()</font>  <font color="#990000">==</font> matrix<font color="#990000">.</font><b><font color="#000000">nr</font></b><font color="#990000">();</font>
    ok    <font color="#990000">&amp;=</font> copy<font color="#990000">.</font><b><font color="#000000">nc</font></b><font color="#990000">()</font>  <font color="#990000">==</font> matrix<font color="#990000">.</font><b><font color="#000000">nc</font></b><font color="#990000">();</font>
    ok    <font color="#990000">&amp;=</font> copy<font color="#990000">.</font><b><font color="#000000">nnz</font></b><font color="#990000">()</font> <font color="#990000">==</font> matrix<font color="#990000">.</font><b><font color="#000000">nnz</font></b><font color="#990000">();</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> nnz<font color="#990000">;</font> k<font color="#990000">++)</font>
    <font color="#FF0000">{</font>   ok <font color="#990000">&amp;=</font> matrix<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()[</font>k<font color="#990000">]</font> <font color="#990000">==</font> copy<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()[</font>k<font color="#990000">];</font>
        ok <font color="#990000">&amp;=</font> matrix<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">()[</font>k<font color="#990000">]</font> <font color="#990000">==</font> copy<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">()[</font>k<font color="#990000">];</font>
        ok <font color="#990000">&amp;=</font> matrix<font color="#990000">.</font><b><font color="#000000">val</font></b><font color="#990000">()[</font>k<font color="#990000">]</font> <font color="#990000">==</font> copy<font color="#990000">.</font><b><font color="#000000">val</font></b><font color="#990000">()[</font>k<font color="#990000">];</font>
    <font color="#FF0000">}</font>
    <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font>
</tt></pre>

<hr>Input File: example/utility/sparse_rcv.cpp

</body>
</html>
