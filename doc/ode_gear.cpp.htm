<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>OdeGear: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="OdeGear: Example and Test">
<meta name="keywords" id="keywords" content=" odegear: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ode_gear.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="odegear.htm" target="_top">Prev</a>
</td><td><a href="odegearcontrol.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>OdeGear</option>
<option>ode_gear.cpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_utility_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_odegear_htm.js'></script>
</td>
<td>ode_gear.cpp</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@



<b>This is cppad-20221105 documentation</b>. Here is a link to its
<a href="https://cppad.readthedocs.io/en/latest/user_guide.html" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>OdeGear: Example and Test</big></big></b></center>
Define
<small>@(@
x : \B{R} \rightarrow \B{R}^n
@)@</small> by
<small>@[@

    x_i (t) =  t^{i+1}

@]@</small>
for <small>@(@
i = 1 , \ldots , n-1
@)@</small>.
It follows that
<small>@[@

\begin{array}{rclr}
x_i(0)     & = & 0                             & {\rm for \; all \;} i \\
x_i ' (t)  & = & 1                             & {\rm if \;} i = 0      \\
x_i '(t)   & = & (i+1) t^i = (i+1) x_{i-1} (t) & {\rm if \;} i > 0
\end{array}

@]@</small>
The example tests OdeGear using the relations above:

<pre><tt>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/utility/ode_gear.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/cppad.hpp&gt;</font>        <i><font color="#9A1900">// For automatic differentiation</font></i>

<b><font color="#0000FF">namespace</font></b> <font color="#FF0000">{</font>
    <b><font color="#0000FF">class</font></b> <font color="#008080">Fun</font> <font color="#FF0000">{</font>
    <b><font color="#0000FF">public</font></b><font color="#990000">:</font>
        <i><font color="#9A1900">// constructor</font></i>
        <b><font color="#000000">Fun</font></b><font color="#990000">(</font><font color="#009900">bool</font> use_x_<font color="#990000">)</font> <font color="#990000">:</font> <b><font color="#000000">use_x</font></b><font color="#990000">(</font>use_x_<font color="#990000">)</font>
        <font color="#FF0000">{</font> <font color="#FF0000">}</font>

        <i><font color="#9A1900">// compute f(t, x) both for double and AD&lt;double&gt;</font></i>
        <b><font color="#0000FF">template</font></b> <font color="#990000">&lt;</font><b><font color="#0000FF">class</font></b> <font color="#008080">Scalar</font><font color="#990000">&gt;</font>
        <font color="#009900">void</font> <b><font color="#000000">Ode</font></b><font color="#990000">(</font>
            <b><font color="#0000FF">const</font></b> <font color="#008080">Scalar</font>                    <font color="#990000">&amp;</font>t<font color="#990000">,</font>
            <b><font color="#0000FF">const</font></b> <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>Scalar<font color="#990000">)</font> <font color="#990000">&amp;</font>x<font color="#990000">,</font>
            <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>Scalar<font color="#990000">)</font>       <font color="#990000">&amp;</font>f<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <font color="#008080">size_t</font> n  <font color="#990000">=</font> x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font>
            <font color="#008080">Scalar</font> <b><font color="#000000">ti</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
            f<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font>   <font color="#990000">=</font> <b><font color="#000000">Scalar</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
            <font color="#008080">size_t</font> i<font color="#990000">;</font>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n<font color="#990000">;</font> i<font color="#990000">++)</font>
            <font color="#FF0000">{</font>   ti <font color="#990000">*=</font> t<font color="#990000">;</font>
                <i><font color="#9A1900">// convert int(size_t) to avoid warning</font></i>
                <i><font color="#9A1900">// on _MSC_VER systems</font></i>
                <b><font color="#0000FF">if</font></b><font color="#990000">(</font> use_x <font color="#990000">)</font>
                    f<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font>i<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">*</font> x<font color="#990000">[</font>i<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">];</font>
                <b><font color="#0000FF">else</font></b>
                    f<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font>i<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">*</font> ti<font color="#990000">;</font>
            <font color="#FF0000">}</font>
        <font color="#FF0000">}</font>

        <font color="#009900">void</font> <b><font color="#000000">Ode_dep</font></b><font color="#990000">(</font>
            <b><font color="#0000FF">const</font></b> <font color="#009900">double</font>                    <font color="#990000">&amp;</font>t<font color="#990000">,</font>
            <b><font color="#0000FF">const</font></b> <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <font color="#990000">&amp;</font>x<font color="#990000">,</font>
            <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font>       <font color="#990000">&amp;</font>f_x<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <b><font color="#0000FF">using</font></b> <b><font color="#0000FF">namespace</font></b> CppAD<font color="#990000">;</font>

            <font color="#008080">size_t</font> n  <font color="#990000">=</font> x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font>
            <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;)</font> <b><font color="#000000">T</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
            <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;)</font> <b><font color="#000000">X</font></b><font color="#990000">(</font>n<font color="#990000">);</font>
            <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;)</font> <b><font color="#000000">F</font></b><font color="#990000">(</font>n<font color="#990000">);</font>

            <i><font color="#9A1900">// set argument values</font></i>
            T<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> t<font color="#990000">;</font>
            <font color="#008080">size_t</font> i<font color="#990000">,</font> j<font color="#990000">;</font>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n<font color="#990000">;</font> i<font color="#990000">++)</font>
                X<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> x<font color="#990000">[</font>i<font color="#990000">];</font>

            <i><font color="#9A1900">// declare independent variables</font></i>
            <b><font color="#000000">Independent</font></b><font color="#990000">(</font>X<font color="#990000">);</font>

            <i><font color="#9A1900">// compute f(t, x)</font></i>
            <b><font color="#0000FF">this</font></b><font color="#990000">-&gt;</font><b><font color="#000000">Ode</font></b><font color="#990000">(</font>T<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">],</font> X<font color="#990000">,</font> F<font color="#990000">);</font>

            <i><font color="#9A1900">// define AD function object</font></i>
            <font color="#008080">ADFun&lt;double&gt;</font> <b><font color="#000000">fun</font></b><font color="#990000">(</font>X<font color="#990000">,</font> F<font color="#990000">);</font>

            <i><font color="#9A1900">// compute partial of f w.r.t x</font></i>
            <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">dx</font></b><font color="#990000">(</font>n<font color="#990000">);</font>
            <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">df</font></b><font color="#990000">(</font>n<font color="#990000">);</font>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n<font color="#990000">;</font> j<font color="#990000">++)</font>
                dx<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">.;</font>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n<font color="#990000">;</font> j<font color="#990000">++)</font>
            <font color="#FF0000">{</font>   dx<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">.;</font>
                df <font color="#990000">=</font> fun<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font> dx<font color="#990000">);</font>
                <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n<font color="#990000">;</font> i<font color="#990000">++)</font>
                    f_x <font color="#990000">[</font>i <font color="#990000">*</font> n <font color="#990000">+</font> j<font color="#990000">]</font> <font color="#990000">=</font> df<font color="#990000">[</font>i<font color="#990000">];</font>
                dx<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">.;</font>
            <font color="#FF0000">}</font>
        <font color="#FF0000">}</font>

    <b><font color="#0000FF">private</font></b><font color="#990000">:</font>
        <b><font color="#0000FF">const</font></b> <font color="#009900">bool</font> use_x<font color="#990000">;</font>

    <font color="#FF0000">}</font><font color="#990000">;</font>
<font color="#FF0000">}</font>

<font color="#009900">bool</font> <b><font color="#000000">OdeGear</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>   <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font> <i><font color="#9A1900">// initial return value</font></i>
    <font color="#008080">size_t</font> i<font color="#990000">,</font> j<font color="#990000">;</font>    <i><font color="#9A1900">// temporary indices</font></i>
    <font color="#009900">double</font> eps99 <font color="#990000">=</font> <font color="#993399">99.0</font> <font color="#990000">*</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">epsilon</font></b><font color="#990000">();</font>

    <font color="#008080">size_t</font>  m <font color="#990000">=</font> <font color="#993399">4</font><font color="#990000">;</font>  <i><font color="#9A1900">// index of next value in X</font></i>
    <font color="#008080">size_t</font>  n <font color="#990000">=</font> m<font color="#990000">;</font>  <i><font color="#9A1900">// number of components in x(t)</font></i>

    <i><font color="#9A1900">// vector of times</font></i>
    <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">T</font></b><font color="#990000">(</font>m<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">);</font>
    <font color="#009900">double</font> step <font color="#990000">=</font> <font color="#990000">.</font><font color="#993399">1</font><font color="#990000">;</font>
    T<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font>        <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">.;</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font> j <font color="#990000">&lt;=</font> m<font color="#990000">;</font> j<font color="#990000">++)</font>
    <font color="#FF0000">{</font>   T<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> T<font color="#990000">[</font>j<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">+</font> step<font color="#990000">;</font>
        step <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">.</font> <font color="#990000">*</font> step<font color="#990000">;</font>
    <font color="#FF0000">}</font>

    <i><font color="#9A1900">// initial values for x( T[m-j] )</font></i>
    <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">X</font></b><font color="#990000">((</font>m<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">*</font> n<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> m<font color="#990000">;</font> j<font color="#990000">++)</font>
    <font color="#FF0000">{</font>   <font color="#009900">double</font> ti <font color="#990000">=</font> T<font color="#990000">[</font>j<font color="#990000">];</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n<font color="#990000">;</font> i<font color="#990000">++)</font>
        <font color="#FF0000">{</font>   X<font color="#990000">[</font> j <font color="#990000">*</font> n <font color="#990000">+</font> i <font color="#990000">]</font> <font color="#990000">=</font> ti<font color="#990000">;</font>
            ti <font color="#990000">*=</font> T<font color="#990000">[</font>j<font color="#990000">];</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>

    <i><font color="#9A1900">// error bound</font></i>
    <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font><font color="#009900">double</font><font color="#990000">)</font> <b><font color="#000000">e</font></b><font color="#990000">(</font>n<font color="#990000">);</font>

    <font color="#008080">size_t</font> use_x<font color="#990000">;</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font> use_x <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> use_x <font color="#990000">&lt;</font> <font color="#993399">2</font><font color="#990000">;</font> use_x<font color="#990000">++)</font>
    <font color="#FF0000">{</font>   <i><font color="#9A1900">// function object depends on value of use_x</font></i>
        <font color="#008080">Fun</font> <b><font color="#000000">F</font></b><font color="#990000">(</font>use_x <font color="#990000">&gt;</font> <font color="#993399">0</font><font color="#990000">);</font>

        <i><font color="#9A1900">// compute OdeGear approximation for x( T[m] )</font></i>
        CppAD<font color="#990000">::</font><b><font color="#000000">OdeGear</font></b><font color="#990000">(</font>F<font color="#990000">,</font> m<font color="#990000">,</font> n<font color="#990000">,</font> T<font color="#990000">,</font> X<font color="#990000">,</font> e<font color="#990000">);</font>

        <font color="#009900">double</font> check <font color="#990000">=</font> T<font color="#990000">[</font>m<font color="#990000">];</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n<font color="#990000">;</font> i<font color="#990000">++)</font>
        <font color="#FF0000">{</font>   <i><font color="#9A1900">// method is exact up to order m and x[i] = t^{i+1}</font></i>
            <b><font color="#0000FF">if</font></b><font color="#990000">(</font> i <font color="#990000">+</font> <font color="#993399">1</font> <font color="#990000">&lt;=</font> m <font color="#990000">)</font> ok <font color="#990000">&amp;=</font> CppAD<font color="#990000">::</font><b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>
                X<font color="#990000">[</font>m <font color="#990000">*</font> n <font color="#990000">+</font> i<font color="#990000">],</font> check<font color="#990000">,</font> eps99<font color="#990000">,</font> eps99
            <font color="#990000">);</font>
            <i><font color="#9A1900">// error bound should be zero up to order m-1</font></i>
            <b><font color="#0000FF">if</font></b><font color="#990000">(</font> i <font color="#990000">+</font> <font color="#993399">1</font> <font color="#990000">&lt;</font> m <font color="#990000">)</font> ok <font color="#990000">&amp;=</font> CppAD<font color="#990000">::</font><b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>
                e<font color="#990000">[</font>i<font color="#990000">],</font> <font color="#993399">0</font><font color="#990000">.,</font> eps99<font color="#990000">,</font> eps99
            <font color="#990000">);</font>
            <i><font color="#9A1900">// check value for next i</font></i>
            check <font color="#990000">*=</font> T<font color="#990000">[</font>m<font color="#990000">];</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font>
</tt></pre>

<hr>Input File: example/utility/ode_gear.cpp

</body>
</html>
