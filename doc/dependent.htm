<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Stop Recording and Store Operation Sequence</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Stop Recording and Store Operation Sequence">
<meta name="keywords" id="keywords" content=" stop recording store operation sequence syntax purpose f x y advector taping forward parallel mode example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_dependent_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="fun_assign.cpp.htm" target="_top">Prev</a>
</td><td><a href="abort_recording.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>ADFun</option>
<option>record_adfun</option>
<option>Dependent</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_adfun_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_record_adfun_htm.js'></script>
</td>
<td>Dependent</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>f</option>
<option>x</option>
<option>y</option>
<option>ADvector</option>
<option>Taping</option>
<option>Forward</option>
<option>Parallel Mode</option>
<option>Example</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<b>This is cppad-20221105 documentation</b>. Here is a link to its
<a href="https://cppad.readthedocs.io" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Stop Recording and Store Operation Sequence</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'>.Dependent(</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
Stop recording and the AD of 
<code><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i></code>

<a href="glossary.htm#Operation.Sequence" target="_top"><span style='white-space: nowrap'>operation&nbsp;sequence</span></a>

that started with the call

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;Independent(</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
and store the operation sequence in 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
.
The operation sequence defines an
<a href="glossary.htm#AD Function" target="_top"><span style='white-space: nowrap'>AD&nbsp;function</span></a>

<small>@[@

    F : \B{R}^n \rightarrow \B{R}^m

@]@</small>
where <small>@(@
B
@)@</small> is the space corresponding to objects of type 
<code><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i></code>
.
The value <small>@(@
n
@)@</small> is the dimension of the
<a href="fun_property.htm#Domain" target="_top"><span style='white-space: nowrap'>domain</span></a>
 space for the operation sequence.
The value <small>@(@
m
@)@</small> is the dimension of the
<a href="fun_property.htm#Range" target="_top"><span style='white-space: nowrap'>range</span></a>
 space for the operation sequence
(which is determined by the size of 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
).

<br>
<br>
<b><big><a name="f" id="f">f</a></big></b>
<br>
The object 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;ADFun&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
The AD of 
<code><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i></code>
 operation sequence is stored in 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
; i.e.,
it becomes the operation sequence corresponding to 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
.
If a previous operation sequence was stored in 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
,
it is deleted.

<br>
<br>
<b><big><a name="x" id="x">x</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>

must be the vector argument in a previous call to
<a href="independent.htm" target="_top"><span style='white-space: nowrap'>Independent</span></a>
.
Neither its size, or any of its values, are allowed to change
between calling

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;Independent(</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
and

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'>.Dependent(</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
.

<br>
<br>
<b><big><a name="y" id="y">y</a></big></b>
<br>
The vector 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>ADvector</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&amp;</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
(see <a href="funconstruct.htm" target="_top"><span style='white-space: nowrap'>ADvector</span></a>
 below).
The length of 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
 must be greater than zero
and is the dimension of the range space for 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
.

<br>
<br>
<b><big><a name="ADvector" id="ADvector">ADvector</a></big></b>
<br>
The type 
<code><i><font color="black"><span style='white-space: nowrap'>ADvector</span></font></i></code>
 must be a <a href="simplevector.htm" target="_top"><span style='white-space: nowrap'>SimpleVector</span></a>
 class with
<a href="simplevector.htm#Elements of Specified Type" target="_top"><span style='white-space: nowrap'>elements&nbsp;of&nbsp;type</span></a>


<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>
.
The routine <a href="checksimplevector.htm" target="_top"><span style='white-space: nowrap'>CheckSimpleVector</span></a>
 will generate an error message
if this is not the case.

<br>
<br>
<b><big><a name="Taping" id="Taping">Taping</a></big></b>
<br>
The tape,
that was created when 
<code><font color="blue"><span style='white-space: nowrap'>Independent(</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>
 was called,
will stop recording.
The AD operation sequence will be transferred from
the tape to the object 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
 and the tape will then be deleted.

<br>
<br>
<b><big><a name="Forward" id="Forward">Forward</a></big></b>
<br>
No <a href="forward.htm" target="_top"><span style='white-space: nowrap'>Forward</span></a>
 calculation is preformed during this operation.
Thus, directly after this operation,

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'>.size_order()<br>
</span></font></code>
is zero (see <a href="size_order.htm" target="_top"><span style='white-space: nowrap'>size_order</span></a>
).

<br>
<br>
<b><big><a name="Parallel Mode" id="Parallel Mode">Parallel Mode</a></big></b>
<br>
The call to <code><font color="blue">Independent</font></code>,
and the corresponding call to

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;ADFun&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'>(&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
or

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'>.Dependent(&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
or <a href="abort_recording.htm" target="_top"><span style='white-space: nowrap'>abort_recording</span></a>
,
must be preformed by the same thread; i.e.,
<a href="ta_thread_num.htm" target="_top"><span style='white-space: nowrap'>thread_alloc::thread_num</span></a>
 must be the same.

<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file
<a href="fun_check.cpp.htm" target="_top"><span style='white-space: nowrap'>fun_check.cpp</span></a>

contains an example and test of this operation.


<hr>Input File: include/cppad/core/dependent.hpp

</body>
</html>
