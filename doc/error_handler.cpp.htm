<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Replacing The CppAD Error Handler: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Replacing The CppAD Error Handler: Example and Test">
<meta name="keywords" id="keywords" content=" replacing the cppad error handler: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_error_handler.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="errorhandler.htm" target="_top">Prev</a>
</td><td><a href="cppad_assert.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>ErrorHandler</option>
<option>error_handler.cpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_utility_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_errorhandler_htm.js'></script>
</td>
<td>error_handler.cpp</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@



<b>This is old CppAD documentation:</b> Here is a link to its
<a href="http://coin-or.github.io/CppAD" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Replacing The CppAD Error Handler: Example and Test</big></big></b></center>
<pre><tt>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/utility/error_handler.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cstring&gt;</font>

<b><font color="#0000FF">namespace</font></b> <font color="#FF0000">{</font>
    <font color="#009900">void</font> <b><font color="#000000">myhandler</font></b><font color="#990000">(</font>
        <font color="#009900">bool</font> known       <font color="#990000">,</font>
        <font color="#009900">int</font>  line        <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> <font color="#009900">char</font> <font color="#990000">*</font>file <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> <font color="#009900">char</font> <font color="#990000">*</font>exp  <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> <font color="#009900">char</font> <font color="#990000">*</font>msg  <font color="#990000">)</font>
    <font color="#FF0000">{</font>   <i><font color="#9A1900">// error handler must not return, so throw an exception</font></i>
        <b><font color="#0000FF">throw</font></b> line<font color="#990000">;</font>
    <font color="#FF0000">}</font>
<font color="#FF0000">}</font>


<font color="#009900">bool</font> <b><font color="#000000">ErrorHandler</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>   <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>ErrorHandler<font color="#990000">;</font>

    <font color="#009900">int</font> lineMinusFive <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>

    <i><font color="#9A1900">// replace the default CppAD error handler</font></i>
    <font color="#008080">ErrorHandler</font> <b><font color="#000000">info</font></b><font color="#990000">(</font>myhandler<font color="#990000">);</font>

    <i><font color="#9A1900">// set ok to false unless catch block is executed</font></i>
    <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>

    <i><font color="#9A1900">// use try / catch because handler throws an exception</font></i>
    <b><font color="#0000FF">try</font></b> <font color="#FF0000">{</font>
        <i><font color="#9A1900">// set the static variable Line to next source code line</font></i>
        lineMinusFive <font color="#990000">=</font> __LINE__<font color="#990000">;</font>

        <i><font color="#9A1900">// can call myhandler anywhere that ErrorHandler is defined</font></i>
        ErrorHandler<font color="#990000">::</font><b><font color="#000000">Call</font></b><font color="#990000">(</font>
            <b><font color="#0000FF">true</font></b>     <font color="#990000">,</font> <i><font color="#9A1900">// reason for the error is known</font></i>
            __LINE__ <font color="#990000">,</font> <i><font color="#9A1900">// current source code line number</font></i>
            __FILE__ <font color="#990000">,</font> <i><font color="#9A1900">// current source code file name</font></i>
            <font color="#FF0000">"1 &gt; 0"</font>  <font color="#990000">,</font> <i><font color="#9A1900">// an intentional error condition</font></i>
            <font color="#FF0000">"Testing ErrorHandler"</font>     <i><font color="#9A1900">// reason for error</font></i>
        <font color="#990000">);</font>
    <font color="#FF0000">}</font>
    <b><font color="#0000FF">catch</font></b> <font color="#990000">(</font> <font color="#009900">int</font> line <font color="#990000">)</font>
    <font color="#FF0000">{</font>   <i><font color="#9A1900">// check value of the line number that was passed to handler</font></i>
        ok <font color="#990000">=</font> <font color="#990000">(</font>line <font color="#990000">==</font> lineMinusFive <font color="#990000">+</font> <font color="#993399">5</font><font color="#990000">);</font>
    <font color="#FF0000">}</font>

    <i><font color="#9A1900">// info drops out of scope and the default CppAD error handler</font></i>
    <i><font color="#9A1900">// is restored when this routine returns.</font></i>
    <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font>
</tt></pre>

<hr>Input File: example/utility/error_handler.cpp

</body>
</html>
