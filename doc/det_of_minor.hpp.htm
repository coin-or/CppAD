<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Source: det_of_minor</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Source: det_of_minor">
<meta name="keywords" id="keywords" content=" source: det_of_minor ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_det_of_minor.hpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="det_of_minor.cpp.htm" target="_top">Prev</a>
</td><td><a href="det_by_minor.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>speed</option>
<option>speed_utility</option>
<option>det_of_minor</option>
<option>det_of_minor.hpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_speed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_speed_utility_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_det_of_minor_htm.js'></script>
</td>
<td>det_of_minor.hpp</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<b>This is old CppAD documentation:</b> Here is a link to its
<a href="http://coin-or.github.io/CppAD" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Source: det_of_minor</big></big></b></center>
<code><font color="blue"># ifndef CPPAD_DET_OF_MINOR_HPP
<code><span style='white-space: nowrap'><br>
</span></code># define CPPAD_DET_OF_MINOR_HPP

<pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;vector&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cstddef&gt;</font>

<b><font color="#0000FF">namespace</font></b> CppAD <font color="#FF0000">{</font> <i><font color="#9A1900">// BEGIN CppAD namespace</font></i>
<b><font color="#0000FF">template</font></b> <font color="#990000">&lt;</font><b><font color="#0000FF">class</font></b> <font color="#008080">Scalar</font><font color="#990000">&gt;</font>
<font color="#008080">Scalar</font> <b><font color="#000000">det_of_minor</font></b><font color="#990000">(</font>
    <b><font color="#0000FF">const</font></b> std<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Scalar<font color="#990000">&gt;&amp;</font> a  <font color="#990000">,</font>
    <font color="#008080">size_t</font>                     m  <font color="#990000">,</font>
    <font color="#008080">size_t</font>                     n  <font color="#990000">,</font>
    std<font color="#990000">::</font>vector<font color="#990000">&lt;</font>size_t<font color="#990000">&gt;&amp;</font>       r  <font color="#990000">,</font>
    std<font color="#990000">::</font>vector<font color="#990000">&lt;</font>size_t<font color="#990000">&gt;&amp;</font>       c  <font color="#990000">)</font>
<font color="#FF0000">{</font>
    <b><font color="#0000FF">const</font></b> <font color="#008080">size_t</font> R0 <font color="#990000">=</font> r<font color="#990000">[</font>m<font color="#990000">];</font> <i><font color="#9A1900">// R(0)</font></i>
    <font color="#008080">size_t</font>       Cj <font color="#990000">=</font> c<font color="#990000">[</font>m<font color="#990000">];</font> <i><font color="#9A1900">// C(j)    (case j = 0)</font></i>
    <font color="#008080">size_t</font>       Cj1 <font color="#990000">=</font> m<font color="#990000">;</font>   <i><font color="#9A1900">// C(j-1)  (case j = 0)</font></i>

    <i><font color="#9A1900">// check for 1 by 1 case</font></i>
    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> n <font color="#990000">==</font> <font color="#993399">1</font> <font color="#990000">)</font> <b><font color="#0000FF">return</font></b> a<font color="#990000">[</font> R0 <font color="#990000">*</font> m <font color="#990000">+</font> Cj <font color="#990000">];</font>

    <i><font color="#9A1900">// initialize determinant of the minor M</font></i>
    <font color="#008080">Scalar</font> detM <font color="#990000">=</font> <b><font color="#000000">Scalar</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>

    <i><font color="#9A1900">// initialize sign of factor for next sub-minor</font></i>
    <font color="#009900">int</font> s <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>

    <i><font color="#9A1900">// remove row with index 0 in M from all the sub-minors of M</font></i>
    r<font color="#990000">[</font>m<font color="#990000">]</font> <font color="#990000">=</font> r<font color="#990000">[</font>R0<font color="#990000">];</font>

    <i><font color="#9A1900">// for each column of M</font></i>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n<font color="#990000">;</font> j<font color="#990000">++)</font>
    <font color="#FF0000">{</font>   <i><font color="#9A1900">// element with index (0,j) in the minor M</font></i>
        <font color="#008080">Scalar</font> M0j <font color="#990000">=</font> a<font color="#990000">[</font> R0 <font color="#990000">*</font> m <font color="#990000">+</font> Cj <font color="#990000">];</font>

        <i><font color="#9A1900">// remove column with index j in M to form next sub-minor S of M</font></i>
        c<font color="#990000">[</font>Cj1<font color="#990000">]</font> <font color="#990000">=</font> c<font color="#990000">[</font>Cj<font color="#990000">];</font>

        <i><font color="#9A1900">// compute determinant of the current sub-minor S</font></i>
        <font color="#008080">Scalar</font> detS <font color="#990000">=</font> <b><font color="#000000">det_of_minor</font></b><font color="#990000">(</font>a<font color="#990000">,</font> m<font color="#990000">,</font> n <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">,</font> r<font color="#990000">,</font> c<font color="#990000">);</font>

        <i><font color="#9A1900">// restore column Cj to represenation of M as a minor of A</font></i>
        c<font color="#990000">[</font>Cj1<font color="#990000">]</font> <font color="#990000">=</font> Cj<font color="#990000">;</font>

        <i><font color="#9A1900">// include this sub-minor term in the summation</font></i>
        <b><font color="#0000FF">if</font></b><font color="#990000">(</font> s <font color="#990000">&gt;</font> <font color="#993399">0</font> <font color="#990000">)</font>
            detM <font color="#990000">=</font> detM <font color="#990000">+</font> M0j <font color="#990000">*</font> detS<font color="#990000">;</font>
        <b><font color="#0000FF">else</font></b>
            detM <font color="#990000">=</font> detM <font color="#990000">-</font> M0j <font color="#990000">*</font> detS<font color="#990000">;</font>

        <i><font color="#9A1900">// advance to next column of M</font></i>
        Cj1 <font color="#990000">=</font> Cj<font color="#990000">;</font>
        Cj  <font color="#990000">=</font> c<font color="#990000">[</font>Cj<font color="#990000">];</font>
        s   <font color="#990000">=</font> <font color="#990000">-</font> s<font color="#990000">;</font>
    <font color="#FF0000">}</font>

    <i><font color="#9A1900">// restore row zero to the minor representation for M</font></i>
    r<font color="#990000">[</font>m<font color="#990000">]</font> <font color="#990000">=</font> R0<font color="#990000">;</font>

    <i><font color="#9A1900">// return the determinant of the minor M</font></i>
    <b><font color="#0000FF">return</font></b> detM<font color="#990000">;</font>
<font color="#FF0000">}</font>
<font color="#FF0000">}</font> <i><font color="#9A1900">// END CppAD namespace</font></i></tt></pre>
# endif
</font></code>


<hr>Input File: omh/det_of_minor_hpp.omh

</body>
</html>
