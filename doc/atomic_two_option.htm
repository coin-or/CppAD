<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Set Atomic Function Options</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Set Atomic Function Options">
<meta name="keywords" id="keywords" content=" set atomic function options syntax scope atomic_sparsity pack_sparsity_enum bool_sparsity_enum set_sparsity_enum ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_atomic_two_option_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="atomic_two_ctor.htm" target="_top">Prev</a>
</td><td><a href="atomic_two_afun.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Appendix</option>
<option>deprecated</option>
<option>atomic_two</option>
<option>atomic_two_option</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_appendix_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_deprecated_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_two_htm.js'></script>
</td>
<td>atomic_two_option</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Scope</option>
<option>atomic_sparsity</option>
<option>---..pack_sparsity_enum</option>
<option>---..bool_sparsity_enum</option>
<option>---..set_sparsity_enum</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@



<b>This is cppad-20221105 documentation</b>. Here is a link to its
<a href="https://cppad.readthedocs.io/en/latest/user_guide.html" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Set Atomic Function Options</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>afun</span></font></i><font color="blue"><span style='white-space: nowrap'>.option(</span></font><i><font color="black"><span style='white-space: nowrap'>option_value</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Scope" id="Scope">Scope</a></big></b>
<br>
These settings do not apply to individual 
<code><i><font color="black"><span style='white-space: nowrap'>afun</span></font></i></code>
 calls,
but rather all subsequent uses of the corresponding atomic operation
in an <a href="adfun.htm" target="_top"><span style='white-space: nowrap'>ADFun</span></a>
 object.

<br>
<br>
<b><big><a name="atomic_sparsity" id="atomic_sparsity">atomic_sparsity</a></big></b>
<br>
Note that, if you use <a href="optimize.htm" target="_top"><span style='white-space: nowrap'>optimize</span></a>
, these sparsity patterns are used
to determine the <a href="dependency.cpp.htm" target="_top"><span style='white-space: nowrap'>dependency</span></a>
 relationship between
argument and result variables.

<br>
<br>
<big><a name="atomic_sparsity.pack_sparsity_enum" id="atomic_sparsity.pack_sparsity_enum">pack_sparsity_enum</a></big>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>option_value</span></font></i></code>
 is 
<code><font color="blue"><span style='white-space: nowrap'>atomic_base&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;::pack_sparsity_enum</span></font></code>
,
then the type used by 
<code><i><font color="black"><span style='white-space: nowrap'>afun</span></font></i></code>
 for
<a href="glossary.htm#Sparsity Pattern" target="_top"><span style='white-space: nowrap'>sparsity&nbsp;patterns</span></a>
,
(after the option is set) will be

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;typedef&nbsp;CppAD::vectorBool&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>atomic_sparsity</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
If 
<code><i><font color="black"><span style='white-space: nowrap'>r</span></font></i></code>
 is a sparsity pattern
for a matrix <small>@(@
R \in \B{R}^{p \times q}
@)@</small>:

<code><i><font color="black"><span style='white-space: nowrap'>r</span></font></i><font color="blue"><span style='white-space: nowrap'>.size()&nbsp;==&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>p</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;*&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i></code>
.

<br>
<br>
<big><a name="atomic_sparsity.bool_sparsity_enum" id="atomic_sparsity.bool_sparsity_enum">bool_sparsity_enum</a></big>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>option_value</span></font></i></code>
 is 
<code><font color="blue"><span style='white-space: nowrap'>atomic_base&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;::bool_sparsity_enum</span></font></code>
,
then the type used by 
<code><i><font color="black"><span style='white-space: nowrap'>afun</span></font></i></code>
 for
<a href="glossary.htm#Sparsity Pattern" target="_top"><span style='white-space: nowrap'>sparsity&nbsp;patterns</span></a>
,
(after the option is set) will be

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;typedef&nbsp;CppAD::vector&lt;bool&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>atomic_sparsity</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
If 
<code><i><font color="black"><span style='white-space: nowrap'>r</span></font></i></code>
 is a sparsity pattern
for a matrix <small>@(@
R \in \B{R}^{p \times q}
@)@</small>:

<code><i><font color="black"><span style='white-space: nowrap'>r</span></font></i><font color="blue"><span style='white-space: nowrap'>.size()&nbsp;==&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>p</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;*&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>q</span></font></i></code>
.

<br>
<br>
<big><a name="atomic_sparsity.set_sparsity_enum" id="atomic_sparsity.set_sparsity_enum">set_sparsity_enum</a></big>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>option_value</span></font></i></code>
 is 
<code><i><font color="black"><span style='white-space: nowrap'>atomic_base&lt;</span></font></i><font color="blue"><span style='white-space: nowrap'>Base</span></font><i><font color="black"><span style='white-space: nowrap'>&gt;::set_sparsity_enum</span></font></i></code>
,
then the type used by 
<code><i><font color="black"><span style='white-space: nowrap'>afun</span></font></i></code>
 for
<a href="glossary.htm#Sparsity Pattern" target="_top"><span style='white-space: nowrap'>sparsity&nbsp;patterns</span></a>
,
(after the option is set) will be

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;typedef&nbsp;CppAD::vector&lt;&nbsp;std::set&lt;size_t&gt;&nbsp;&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>atomic_sparsity</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
If 
<code><i><font color="black"><span style='white-space: nowrap'>r</span></font></i></code>
 is a sparsity pattern
for a matrix <small>@(@
R \in \B{R}^{p \times q}
@)@</small>:

<code><i><font color="black"><span style='white-space: nowrap'>r</span></font></i><font color="blue"><span style='white-space: nowrap'>.size()&nbsp;==&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>p</span></font></i></code>
, and for <small>@(@
i = 0 , \ldots , p-1
@)@</small>,
the elements of 
<code><i><font color="black"><span style='white-space: nowrap'>r</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
 are between zero and <small>@(@
q-1
@)@</small> inclusive.


<hr>Input File: include/cppad/core/atomic/two/option.hpp

</body>
</html>
