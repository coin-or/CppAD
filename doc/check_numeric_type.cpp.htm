<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>The CheckNumericType Function: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="The CheckNumericType Function: Example and Test">
<meta name="keywords" id="keywords" content=" the checknumerictype function: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_check_numeric_type.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="checknumerictype.htm" target="_top">Prev</a>
</td><td><a href="checksimplevector.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>CheckNumericType</option>
<option>check_numeric_type.cpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_utility_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_checknumerictype_htm.js'></script>
</td>
<td>check_numeric_type.cpp</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@


<b>This is old CppAD documentation:</b> Here is a link to its
<a href="http://coin-or.github.io/CppAD" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>The CheckNumericType Function: Example and Test</big></big></b></center>
<pre><tt>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/utility/check_numeric_type.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/utility/near_equal.hpp&gt;</font>


<i><font color="#9A1900">// Chosing a value between 1 and 10 selects a numeric class properity to be</font></i>
<i><font color="#9A1900">// omitted and result in an error message being generated</font></i>
<b><font color="#000080"># define</font></b> CppADMyTypeOmit <font color="#993399">0</font>

<b><font color="#0000FF">namespace</font></b> <font color="#FF0000">{</font> <i><font color="#9A1900">// Empty namespace</font></i>

    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <b><font color="#0000FF">class</font></b> <font color="#008080">MyType</font> <font color="#FF0000">{</font>
    <b><font color="#0000FF">private</font></b><font color="#990000">:</font>
        <font color="#009900">double</font> d<font color="#990000">;</font>
    <b><font color="#0000FF">public</font></b><font color="#990000">:</font>
        <i><font color="#9A1900">// constructor from void</font></i>
        <b><font color="#000000">MyType</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font> <font color="#990000">:</font> <b><font color="#000000">d</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">.)</font>
        <font color="#FF0000">{</font> <font color="#FF0000">}</font>
        <i><font color="#9A1900">// constructor from an int</font></i>
        <b><font color="#000000">MyType</font></b><font color="#990000">(</font><font color="#009900">int</font> d_<font color="#990000">)</font> <font color="#990000">:</font> <b><font color="#000000">d</font></b><font color="#990000">(</font>d_<font color="#990000">)</font>
        <font color="#FF0000">{</font> <font color="#FF0000">}</font>
        <i><font color="#9A1900">// copy constuctor</font></i>
        <b><font color="#000000">MyType</font></b><font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font>
        <font color="#FF0000">{</font>   d <font color="#990000">=</font> x<font color="#990000">.</font>d<font color="#990000">;</font> <font color="#FF0000">}</font>
        <i><font color="#9A1900">// assignment operator</font></i>
        <font color="#009900">void</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">=</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font>
        <font color="#FF0000">{</font>   d <font color="#990000">=</font> x<font color="#990000">.</font>d<font color="#990000">;</font> <font color="#FF0000">}</font>
        <i><font color="#9A1900">// member function that converts to double</font></i>
        <font color="#009900">double</font> <b><font color="#000000">Double</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font> <b><font color="#0000FF">const</font></b>
        <font color="#FF0000">{</font>   <b><font color="#0000FF">return</font></b> d<font color="#990000">;</font> <font color="#FF0000">}</font>
<b><font color="#000080"># if</font></b> CppADMyTypeOmit <font color="#990000">!=</font> <font color="#993399">1</font>
        <i><font color="#9A1900">// unary plus</font></i>
        <font color="#008080">MyType</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">+</font> <font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font> <b><font color="#0000FF">const</font></b>
        <font color="#FF0000">{</font>   <font color="#008080">MyType</font> x<font color="#990000">;</font>
            x<font color="#990000">.</font>d <font color="#990000">=</font>  d<font color="#990000">;</font>
            <b><font color="#0000FF">return</font></b> x<font color="#990000">;</font>
        <font color="#FF0000">}</font>
<b><font color="#000080"># endif</font></b>
<b><font color="#000080"># if</font></b> CppADMyTypeOmit <font color="#990000">!=</font> <font color="#993399">2</font>
        <i><font color="#9A1900">// unary plus</font></i>
        <font color="#008080">MyType</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">-</font> <font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font> <b><font color="#0000FF">const</font></b>
        <font color="#FF0000">{</font>   <font color="#008080">MyType</font> x<font color="#990000">;</font>
            x<font color="#990000">.</font>d <font color="#990000">=</font> <font color="#990000">-</font> d<font color="#990000">;</font>
            <b><font color="#0000FF">return</font></b> x<font color="#990000">;</font>
        <font color="#FF0000">}</font>
<b><font color="#000080"># endif</font></b>
<b><font color="#000080"># if</font></b> CppADMyTypeOmit <font color="#990000">!=</font> <font color="#993399">3</font>
        <i><font color="#9A1900">// binary addition</font></i>
        <font color="#008080">MyType</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">+</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font> <b><font color="#0000FF">const</font></b>
        <font color="#FF0000">{</font>   <font color="#008080">MyType</font> y<font color="#990000">;</font>
            y<font color="#990000">.</font>d <font color="#990000">=</font> d <font color="#990000">+</font> x<font color="#990000">.</font>d <font color="#990000">;</font>
            <b><font color="#0000FF">return</font></b> y<font color="#990000">;</font>
        <font color="#FF0000">}</font>
<b><font color="#000080"># endif</font></b>
<b><font color="#000080"># if</font></b> CppADMyTypeOmit <font color="#990000">!=</font> <font color="#993399">4</font>
        <i><font color="#9A1900">// binary subtraction</font></i>
        <font color="#008080">MyType</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">-</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font> <b><font color="#0000FF">const</font></b>
        <font color="#FF0000">{</font>   <font color="#008080">MyType</font> y<font color="#990000">;</font>
            y<font color="#990000">.</font>d <font color="#990000">=</font> d <font color="#990000">-</font> x<font color="#990000">.</font>d <font color="#990000">;</font>
            <b><font color="#0000FF">return</font></b> y<font color="#990000">;</font>
        <font color="#FF0000">}</font>
<b><font color="#000080"># endif</font></b>
<b><font color="#000080"># if</font></b> CppADMyTypeOmit <font color="#990000">!=</font> <font color="#993399">5</font>
        <i><font color="#9A1900">// binary multiplication</font></i>
        <font color="#008080">MyType</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">*</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font> <b><font color="#0000FF">const</font></b>
        <font color="#FF0000">{</font>   <font color="#008080">MyType</font> y<font color="#990000">;</font>
            y<font color="#990000">.</font>d <font color="#990000">=</font> d <font color="#990000">*</font> x<font color="#990000">.</font>d <font color="#990000">;</font>
            <b><font color="#0000FF">return</font></b> y<font color="#990000">;</font>
        <font color="#FF0000">}</font>
<b><font color="#000080"># endif</font></b>
<b><font color="#000080"># if</font></b> CppADMyTypeOmit <font color="#990000">!=</font> <font color="#993399">6</font>
        <i><font color="#9A1900">// binary division</font></i>
        <font color="#008080">MyType</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">/</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font> <b><font color="#0000FF">const</font></b>
        <font color="#FF0000">{</font>   <font color="#008080">MyType</font> y<font color="#990000">;</font>
            y<font color="#990000">.</font>d <font color="#990000">=</font> d <font color="#990000">/</font> x<font color="#990000">.</font>d <font color="#990000">;</font>
            <b><font color="#0000FF">return</font></b> y<font color="#990000">;</font>
        <font color="#FF0000">}</font>
<b><font color="#000080"># endif</font></b>
<b><font color="#000080"># if</font></b> CppADMyTypeOmit <font color="#990000">!=</font> <font color="#993399">7</font>
        <i><font color="#9A1900">// compound assignment addition</font></i>
        <font color="#009900">void</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">+=</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font>
        <font color="#FF0000">{</font>   d <font color="#990000">+=</font> x<font color="#990000">.</font>d<font color="#990000">;</font> <font color="#FF0000">}</font>
<b><font color="#000080"># endif</font></b>
<b><font color="#000080"># if</font></b> CppADMyTypeOmit <font color="#990000">!=</font> <font color="#993399">8</font>
        <i><font color="#9A1900">// compound assignment subtraction</font></i>
        <font color="#009900">void</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">-=</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font>
        <font color="#FF0000">{</font>   d <font color="#990000">-=</font> x<font color="#990000">.</font>d<font color="#990000">;</font> <font color="#FF0000">}</font>
<b><font color="#000080"># endif</font></b>
<b><font color="#000080"># if</font></b> CppADMyTypeOmit <font color="#990000">!=</font> <font color="#993399">9</font>
        <i><font color="#9A1900">// compound assignment multiplication</font></i>
        <font color="#009900">void</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">*=</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font>
        <font color="#FF0000">{</font>   d <font color="#990000">*=</font> x<font color="#990000">.</font>d<font color="#990000">;</font> <font color="#FF0000">}</font>
<b><font color="#000080"># endif</font></b>
<b><font color="#000080"># if</font></b> CppADMyTypeOmit <font color="#990000">!=</font> <font color="#993399">10</font>
        <i><font color="#9A1900">// compound assignment division</font></i>
        <font color="#009900">void</font> <b><font color="#0000FF">operator</font></b> <font color="#990000">/=</font> <font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">MyType</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font>
        <font color="#FF0000">{</font>   d <font color="#990000">/=</font> x<font color="#990000">.</font>d<font color="#990000">;</font> <font color="#FF0000">}</font>
<b><font color="#000080"># endif</font></b>
    <font color="#FF0000">}</font><font color="#990000">;</font>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">/*</font></i>
<i><font color="#9A1900">    Solve: A[0] * x[0] + A[1] * x[1] = b[0]</font></i>
<i><font color="#9A1900">           A[2] * x[0] + A[3] * x[1] = b[1]</font></i>
<i><font color="#9A1900">    */</font></i>
    <b><font color="#0000FF">template</font></b> <font color="#990000">&lt;</font><b><font color="#0000FF">class</font></b> <font color="#008080">NumericType</font><font color="#990000">&gt;</font>
    <font color="#009900">void</font> <b><font color="#000000">Solve</font></b><font color="#990000">(</font><font color="#008080">NumericType</font> <font color="#990000">*</font>A<font color="#990000">,</font> <font color="#008080">NumericType</font> <font color="#990000">*</font>x<font color="#990000">,</font> <font color="#008080">NumericType</font> <font color="#990000">*</font>b<font color="#990000">)</font>
    <font color="#FF0000">{</font>
        <i><font color="#9A1900">// make sure NumericType satisfies its conditions</font></i>
        CppAD<font color="#990000">::</font>CheckNumericType<font color="#990000">&lt;</font>NumericType<font color="#990000">&gt;();</font>

        <i><font color="#9A1900">// copy b to x</font></i>
        x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> b<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">];</font>
        x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> b<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">];</font>

        <i><font color="#9A1900">// copy A to work space</font></i>
        <font color="#008080">NumericType</font> W<font color="#990000">[</font><font color="#993399">4</font><font color="#990000">];</font>
        W<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> A<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">];</font>
        W<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> A<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">];</font>
        W<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">=</font> A<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">];</font>
        W<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">=</font> A<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">];</font>

        <i><font color="#9A1900">// divide first row by W(1,1)</font></i>
        W<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">/=</font> W<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">];</font>
        x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">/=</font> W<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">];</font>
        W<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">NumericType</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>

        <i><font color="#9A1900">// subtract W(2,1) times first row from second row</font></i>
        W<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">-=</font> W<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">*</font> W<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">];</font>
        x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">-=</font> W<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">];</font>
        W<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">NumericType</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>

        <i><font color="#9A1900">// divide second row by W(2, 2)</font></i>
        x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">/=</font> W<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">];</font>
        W<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font>  <font color="#990000">=</font> <b><font color="#000000">NumericType</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>

        <i><font color="#9A1900">// use first row to solve for x[0]</font></i>
        x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">-=</font> W<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">];</font>
    <font color="#FF0000">}</font>
<font color="#FF0000">}</font> <i><font color="#9A1900">// End Empty namespace</font></i>

<font color="#009900">bool</font> <b><font color="#000000">CheckNumericType</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>   <font color="#009900">bool</font> ok  <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
    <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>NearEqual<font color="#990000">;</font>
    <font color="#009900">double</font> eps99 <font color="#990000">=</font> <font color="#993399">99.0</font> <font color="#990000">*</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">epsilon</font></b><font color="#990000">();</font>

    <font color="#008080">MyType</font> A<font color="#990000">[</font><font color="#993399">4</font><font color="#990000">];</font>
    A<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">MyType</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font> A<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">MyType</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">);</font>
    A<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">MyType</font></b><font color="#990000">(</font><font color="#993399">3</font><font color="#990000">);</font> A<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">MyType</font></b><font color="#990000">(</font><font color="#993399">4</font><font color="#990000">);</font>

    <font color="#008080">MyType</font> b<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">];</font>
    b<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">MyType</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
    b<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">MyType</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">);</font>

    <font color="#008080">MyType</font> x<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">];</font>
    <b><font color="#000000">Solve</font></b><font color="#990000">(</font>A<font color="#990000">,</font> x<font color="#990000">,</font> b<font color="#990000">);</font>

    <font color="#008080">MyType</font> sum<font color="#990000">;</font>
    sum <font color="#990000">=</font> A<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">+</font> A<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">];</font>
    ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>sum<font color="#990000">.</font><b><font color="#000000">Double</font></b><font color="#990000">(),</font> b<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font><b><font color="#000000">Double</font></b><font color="#990000">(),</font> eps99<font color="#990000">,</font> eps99<font color="#990000">);</font>

    sum <font color="#990000">=</font> A<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">+</font> A<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">];</font>
    ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>sum<font color="#990000">.</font><b><font color="#000000">Double</font></b><font color="#990000">(),</font> b<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">].</font><b><font color="#000000">Double</font></b><font color="#990000">(),</font> eps99<font color="#990000">,</font> eps99<font color="#990000">);</font>

    <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font>
</tt></pre>

<hr>Input File: example/utility/check_numeric_type.cpp

</body>
</html>
