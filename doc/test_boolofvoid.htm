<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Object that Runs a Group of Tests</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Object that Runs a Group of Tests">
<meta name="keywords" id="keywords" content=" object that runs group tests syntax purpose width test name memory_ok ok example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_test_boolofvoid_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="speed_program.cpp.htm" target="_top">Prev</a>
</td><td><a href="time_test.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>test_boolofvoid</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_utility_htm.js'></script>
</td>
<td>test_boolofvoid</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>group</option>
<option>width</option>
<option>test</option>
<option>name</option>
<option>memory_ok</option>
<option>ok</option>
<option>Example</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<center><b><big><big>Object that Runs a Group of Tests</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>#&nbsp;include&nbsp;&lt;cppad/utility/test_boolofvoid.hpp&gt;<br>
</span></font></code>

<code><font color="blue"><span style='white-space: nowrap'>test_boolofvoid&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>Run</span></font></i><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>group</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>width</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>Run</span></font></i><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>test</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>name</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>ok</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>Run</span></font></i><font color="blue"><span style='white-space: nowrap'>.summary(</span></font><i><font color="black"><span style='white-space: nowrap'>memory_ok</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
The object 
<code><i><font color="black"><span style='white-space: nowrap'>Run</span></font></i></code>
 is used to run a group of tests functions
and report the results on standard output.

<br>
<br>
<b><big><a name="group" id="group">group</a></big></b>
<br>
The argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;std::string&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>group</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It is the name for this group of tests.

<br>
<br>
<b><big><a name="width" id="width">width</a></big></b>
<br>
The argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>width</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It is the number of columns used to display the name of each test.
It must be greater than the maximum number of characters in a test name.

<br>
<br>
<b><big><a name="test" id="test">test</a></big></b>
<br>
The argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>test</span></font></i><font color="blue"><span style='white-space: nowrap'>(void)<br>
</span></font></code>
It is a function that returns true (when the test passes) and false
otherwise.

<br>
<br>
<b><big><a name="name" id="name">name</a></big></b>
<br>
The argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;std::string&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>name</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It is the name for the corresponding 
<code><i><font color="black"><span style='white-space: nowrap'>test</span></font></i></code>
.

<br>
<br>
<b><big><a name="memory_ok" id="memory_ok">memory_ok</a></big></b>
<br>
The argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>memory_ok</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It is false if a memory leak is detected (and true otherwise).

<br>
<br>
<b><big><a name="ok" id="ok">ok</a></big></b>
<br>
This is true if all of the tests pass (including the memory leak test),
otherwise it is false.

<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
See any of the main programs in the example directory; e.g.,
<code><font color="blue">example/ipopt_solve.cpp</font></code>.


<hr>Input File: include/cppad/utility/test_boolofvoid.hpp

</body>
</html>
