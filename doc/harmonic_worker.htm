<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Do One Thread's Work for Sum of 1/i</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Do One Thread's Work for Sum of 1/i">
<meta name="keywords" id="keywords" content=" do one thread's work sum 1/i syntax purpose start end thread_num source ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_harmonic_worker_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="harmonic_setup.htm" target="_top">Prev</a>
</td><td><a href="harmonic_takedown.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>multi_thread</option>
<option>thread_test.cpp</option>
<option>harmonic.cpp</option>
<option>harmonic_worker</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_multi_thread_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_thread_test.cpp_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_harmonic.cpp_htm.js'></script>
</td>
<td>harmonic_worker</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>start</option>
<option>end</option>
<option>thread_num</option>
<option>Source</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<b>This is old CppAD documentation:</b> Here is a link to its
<a href="http://coin-or.github.io/CppAD" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Do One Thread's Work for Sum of 1/i</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>harmonic_worker()<br>
</span></font></code>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
This routines computes the sum
the summation that defines the harmonic series

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;1/</span></font><i><font color="black"><span style='white-space: nowrap'>start</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;+&nbsp;1/(</span></font><i><font color="black"><span style='white-space: nowrap'>start</span></font></i><font color="blue"><span style='white-space: nowrap'>+1)&nbsp;+&nbsp;...&nbsp;+&nbsp;1/(</span></font><i><font color="black"><span style='white-space: nowrap'>end</span></font></i><font color="blue"><span style='white-space: nowrap'>-1)<br>
</span></font></code>
<br>
<b><big><a name="start" id="start">start</a></big></b>
<br>
This is the value of the <a href="harmonic_common.htm" target="_top"><span style='white-space: nowrap'>harmonic_common</span></a>
 information

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>start</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;work_all_[</span></font><i><font color="black"><span style='white-space: nowrap'>thread_num</span></font></i><font color="blue"><span style='white-space: nowrap'>]-&gt;start<br>
</span></font></code>
<br>
<b><big><a name="end" id="end">end</a></big></b>
<br>
This is the value of the <a href="harmonic_common.htm" target="_top"><span style='white-space: nowrap'>harmonic_common</span></a>
 information

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>end</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;work_all_[</span></font><i><font color="black"><span style='white-space: nowrap'>thread_num</span></font></i><font color="blue"><span style='white-space: nowrap'>]-&gt;end<br>
</span></font></code>
<br>
<b><big><a name="thread_num" id="thread_num">thread_num</a></big></b>
<br>
This is the number for the current thread; see
<a href="ta_thread_num.htm" target="_top"><span style='white-space: nowrap'>thread_num</span></a>
.

<br>
<br>
<b><big><a name="Source" id="Source">Source</a></big></b>

<pre><tt>
<b><font color="#0000FF">namespace</font></b> <font color="#FF0000">{</font>
<font color="#009900">void</font> <b><font color="#000000">harmonic_worker</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>   <i><font color="#9A1900">// sum =  1/(stop-1) + 1/(stop-2) + ... + 1/start</font></i>
    <font color="#008080">size_t</font> thread_num  <font color="#990000">=</font> thread_alloc<font color="#990000">::</font><b><font color="#000000">thread_num</font></b><font color="#990000">();</font>
    <font color="#008080">size_t</font> num_threads <font color="#990000">=</font> std<font color="#990000">::</font><b><font color="#000000">max</font></b><font color="#990000">(</font>num_threads_<font color="#990000">,</font> <b><font color="#000000">size_t</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">));</font>
    <font color="#009900">bool</font>   ok          <font color="#990000">=</font> thread_num <font color="#990000">&lt;</font> num_threads<font color="#990000">;</font>
    <font color="#008080">size_t</font> start       <font color="#990000">=</font> work_all_<font color="#990000">[</font>thread_num<font color="#990000">]-&gt;</font>start<font color="#990000">;</font>
    <font color="#008080">size_t</font> stop        <font color="#990000">=</font> work_all_<font color="#990000">[</font>thread_num<font color="#990000">]-&gt;</font>stop<font color="#990000">;</font>
    <font color="#009900">double</font> sum         <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">.;</font>

    ok <font color="#990000">&amp;=</font> stop <font color="#990000">&gt;</font> start<font color="#990000">;</font>
    <font color="#008080">size_t</font> i <font color="#990000">=</font> stop<font color="#990000">;</font>
    <b><font color="#0000FF">while</font></b><font color="#990000">(</font> i <font color="#990000">&gt;</font> start <font color="#990000">)</font>
    <font color="#FF0000">{</font>   i<font color="#990000">--;</font>
        sum <font color="#990000">+=</font> <font color="#993399">1</font><font color="#990000">.</font> <font color="#990000">/</font> <font color="#009900">double</font><font color="#990000">(</font>i<font color="#990000">);</font>
    <font color="#FF0000">}</font>

    work_all_<font color="#990000">[</font>thread_num<font color="#990000">]-&gt;</font>sum <font color="#990000">=</font> sum<font color="#990000">;</font>
    work_all_<font color="#990000">[</font>thread_num<font color="#990000">]-&gt;</font>ok  <font color="#990000">=</font> ok<font color="#990000">;</font>
<font color="#FF0000">}</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: example/multi_thread/harmonic.cpp

</body>
</html>
