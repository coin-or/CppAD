<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Create an AD&lt;Base&gt; Function From a Base Function</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Create an AD&lt;Base&gt; Function From a Base Function">
<meta name="keywords" id="keywords" content=" create ad&lt;base&gt; function from base syntax see also f af example vecad ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_base2ad_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="other_adfun.htm" target="_top">Prev</a>
</td><td><a href="base2ad.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>ADFun</option>
<option>other_adfun</option>
<option>base2ad</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_adfun_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_other_adfun_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_base2ad_htm.js'></script>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>See Also</option>
<option>Base</option>
<option>f</option>
<option>af</option>
<option>Example</option>
<option>VecAD</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<b>This is old CppAD documentation:</b> Here is a link to its
<a href="http://coin-or.github.io/CppAD" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Create an AD&lt;Base&gt; Function From a Base Function</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>af</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'>.base2ad()</span></font></code>


<br>
<br>
<b><big><a name="See Also" id="See Also">See Also</a></big></b>

<br>
<a href="mul_level.htm" target="_top"><span style='white-space: nowrap'>mul_level</span></a>


<br>
<br>
<b><big><a name="Base" id="Base">Base</a></big></b>
<br>
This is the base type used to recorded the operation sequence in 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>

and 
<code><i><font color="black"><span style='white-space: nowrap'>af</span></font></i></code>
; i.e., the type 
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>
 was used to record
the operation sequence.

<br>
<br>
<b><big><a name="f" id="f">f</a></big></b>
<br>
This object has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;ADFun&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It does it's derivative calculations using the type 
<code><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i></code>
.

<br>
<br>
<b><big><a name="af" id="af">af</a></big></b>
<br>
This object has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;ADFun&lt;&nbsp;AD&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>af</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It has the same operation sequence as 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
,
but it does it's derivative calculations using the type

<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base&gt;</span></font></i></code>
.
This enables one to record new functions that are defined
using derivatives of the function 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
.
Initially, there are no Taylor coefficients stored in 
<code><i><font color="black"><span style='white-space: nowrap'>af</span></font></i></code>
 and
<a href="size_order.htm" target="_top"><span style='white-space: nowrap'>af.size_order()</span></a>
 is zero.


<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file <a href="base2ad.cpp.htm" target="_top"><span style='white-space: nowrap'>base2ad.cpp</span></a>

contains an example and test of this operation.

<br>
<br>
<b><big><a name="VecAD" id="VecAD">VecAD</a></big></b>
<br>
Forward mode on a <code><font color="blue">base2ad</font></code> function does not preserve
<a href="vecad.htm" target="_top"><span style='white-space: nowrap'>VecAD</span></a>
 operations (which might be expected); see the
<a href="base2vec_ad.cpp.htm" target="_top"><span style='white-space: nowrap'>base2vec_ad.cpp</span></a>
 example.


<hr>Input File: include/cppad/core/base2ad.hpp

</body>
</html>
