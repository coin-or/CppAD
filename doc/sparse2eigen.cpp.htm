<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Converting CppAD Sparse Matrix to Eigen Format: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Converting CppAD Sparse Matrix to Eigen Format: Example and Test">
<meta name="keywords" id="keywords" content=" converting cppad sparse matrix to eigen format: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_sparse2eigen.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="sparse2eigen.htm" target="_top">Prev</a>
</td><td><a href="sparse_rc.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>sparse2eigen</option>
<option>sparse2eigen.cpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_utility_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_sparse2eigen_htm.js'></script>
</td>
<td>sparse2eigen.cpp</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@



<b>This is cppad-20221105 documentation</b>. Here is a link to its
<a href="https://cppad.readthedocs.io" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Converting CppAD Sparse Matrix to Eigen Format: Example and Test</big></big></b></center>
<pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/utility/sparse2eigen.hpp&gt;</font>
<font color="#009900">bool</font> <b><font color="#000000">sparse2eigen</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>   <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <b><font color="#0000FF">typedef</font></b> CppAD<font color="#990000">::</font><font color="#008080">vector&lt;size_t&gt;</font>                 s_vector<font color="#990000">;</font>
    <b><font color="#0000FF">typedef</font></b> CppAD<font color="#990000">::</font><font color="#008080">vector&lt;double&gt;</font>                 d_vector<font color="#990000">;</font>
    <b><font color="#0000FF">typedef</font></b> CppAD<font color="#990000">::</font><font color="#008080">sparse_rc&lt;s_vector&gt;</font>            sparse_rc<font color="#990000">;</font>
    <b><font color="#0000FF">typedef</font></b> CppAD<font color="#990000">::</font><font color="#008080">sparse_rcv&lt;s_vector, d_vector&gt;</font> sparse_rcv<font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// sparsity pattern</font></i>
    <font color="#008080">size_t</font> nr  <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font>
    <font color="#008080">size_t</font> nc  <font color="#990000">=</font> <font color="#993399">4</font><font color="#990000">;</font>
    <font color="#008080">size_t</font> nnz <font color="#990000">=</font> <font color="#993399">2</font> <font color="#990000">*</font> nr<font color="#990000">;</font>
    <font color="#008080">sparse_rc</font> <b><font color="#000000">pattern</font></b><font color="#990000">(</font>nr<font color="#990000">,</font> nc<font color="#990000">,</font> nnz<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> nr<font color="#990000">;</font> i<font color="#990000">++)</font>
    <font color="#FF0000">{</font>   <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> i<font color="#990000">;</font> j <font color="#990000">&lt;=</font> i <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font> j<font color="#990000">++)</font>
        <font color="#FF0000">{</font>   <font color="#008080">size_t</font> k <font color="#990000">=</font> i <font color="#990000">+</font> j<font color="#990000">;</font>
            pattern<font color="#990000">.</font><b><font color="#000000">set</font></b><font color="#990000">(</font>k<font color="#990000">,</font> i<font color="#990000">,</font> j<font color="#990000">);</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// sparse matrix</font></i>
    <font color="#008080">sparse_rcv</font> <b><font color="#000000">source</font></b><font color="#990000">(</font>pattern<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> nr<font color="#990000">;</font> i<font color="#990000">++)</font>
    <font color="#FF0000">{</font>   <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> i<font color="#990000">;</font> j <font color="#990000">&lt;=</font> i <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font> j<font color="#990000">++)</font>
        <font color="#FF0000">{</font>   <font color="#008080">size_t</font> k <font color="#990000">=</font> i <font color="#990000">+</font> j<font color="#990000">;</font>
            <font color="#009900">double</font> v <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font>k<font color="#990000">)</font> <font color="#990000">/</font> <font color="#993399">2.0</font><font color="#990000">;</font>
            source<font color="#990000">.</font><b><font color="#000000">set</font></b><font color="#990000">(</font>k<font color="#990000">,</font> v<font color="#990000">);</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">//  example using row major order</font></i>
    <font color="#FF0000">{</font>   Eigen<font color="#990000">::</font><font color="#008080">SparseMatrix&lt;double, Eigen::RowMajor&gt;</font> destination<font color="#990000">;</font>
        CppAD<font color="#990000">::</font><b><font color="#000000">sparse2eigen</font></b><font color="#990000">(</font>source<font color="#990000">,</font> destination<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <b><font color="#0000FF">typedef</font></b>
        Eigen<font color="#990000">::</font>SparseMatrix<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">,</font> Eigen<font color="#990000">::</font>RowMajor<font color="#990000">&gt;::</font><font color="#008080">InnerIterator</font> iterator<font color="#990000">;</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// check result</font></i>
        <b><font color="#0000FF">const</font></b> <font color="#009900">double</font><font color="#990000">*</font> d_value <font color="#990000">=</font> destination<font color="#990000">.</font><b><font color="#000000">valuePtr</font></b><font color="#990000">();</font>
        <font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#009900">int</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> destination<font color="#990000">.</font><b><font color="#000000">outerSize</font></b><font color="#990000">();</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">iterator</font> <b><font color="#000000">itr</font></b><font color="#990000">(</font>destination<font color="#990000">,</font> i<font color="#990000">);</font> itr<font color="#990000">;</font> <font color="#990000">++</font>itr<font color="#990000">)</font>
            <font color="#FF0000">{</font>   <i><font color="#9A1900">// check row</font></i>
                ok <font color="#990000">&amp;=</font> itr<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()</font> <font color="#990000">==</font> i<font color="#990000">;</font>
                <i><font color="#9A1900">//</font></i>
                <i><font color="#9A1900">// check column</font></i>
                <b><font color="#0000FF">if</font></b><font color="#990000">(</font> k <font color="#990000">%</font> <font color="#993399">2</font> <font color="#990000">==</font> <font color="#993399">0</font> <font color="#990000">)</font>
                    ok <font color="#990000">&amp;=</font> itr<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">()</font> <font color="#990000">==</font> i<font color="#990000">;</font>
                <b><font color="#0000FF">else</font></b>
                    ok <font color="#990000">&amp;=</font> itr<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#990000">(</font>i<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">);</font>
                <i><font color="#9A1900">//</font></i>
                <i><font color="#9A1900">// check value</font></i>
                ok  <font color="#990000">&amp;=</font> itr<font color="#990000">.</font><b><font color="#000000">value</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#009900">double</font><font color="#990000">(</font> itr<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()</font> <font color="#990000">+</font> itr<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">()</font> <font color="#990000">)</font> <font color="#990000">/</font> <font color="#993399">2.0</font><font color="#990000">;</font>
                ok  <font color="#990000">&amp;=</font> itr<font color="#990000">.</font><b><font color="#000000">value</font></b><font color="#990000">()</font> <font color="#990000">==</font> d_value<font color="#990000">[</font>k<font color="#990000">];</font>
                <i><font color="#9A1900">//</font></i>
                <font color="#990000">++</font>k<font color="#990000">;</font>
            <font color="#FF0000">}</font>
        <font color="#FF0000">}</font>
        ok <font color="#990000">&amp;=</font> k <font color="#990000">==</font> nnz<font color="#990000">;</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">//  example using column major order</font></i>
    <font color="#FF0000">{</font>   Eigen<font color="#990000">::</font><font color="#008080">SparseMatrix&lt;double, Eigen::ColMajor&gt;</font> destination<font color="#990000">;</font>
        CppAD<font color="#990000">::</font><b><font color="#000000">sparse2eigen</font></b><font color="#990000">(</font>source<font color="#990000">,</font> destination<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <b><font color="#0000FF">typedef</font></b>
        Eigen<font color="#990000">::</font>SparseMatrix<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">,</font> Eigen<font color="#990000">::</font>ColMajor<font color="#990000">&gt;::</font><font color="#008080">InnerIterator</font> iterator<font color="#990000">;</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// check result</font></i>
        <b><font color="#0000FF">const</font></b> <font color="#009900">double</font><font color="#990000">*</font> d_value <font color="#990000">=</font> destination<font color="#990000">.</font><b><font color="#000000">valuePtr</font></b><font color="#990000">();</font>
        <font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#009900">int</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> destination<font color="#990000">.</font><b><font color="#000000">outerSize</font></b><font color="#990000">();</font> <font color="#990000">++</font>j<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">iterator</font> <b><font color="#000000">itr</font></b><font color="#990000">(</font>destination<font color="#990000">,</font> j<font color="#990000">);</font> itr<font color="#990000">;</font> <font color="#990000">++</font>itr<font color="#990000">)</font>
            <font color="#FF0000">{</font>   <i><font color="#9A1900">// check column</font></i>
                ok <font color="#990000">&amp;=</font> itr<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">()</font> <font color="#990000">==</font> j<font color="#990000">;</font>
                <i><font color="#9A1900">//</font></i>
                <i><font color="#9A1900">// check row</font></i>
                <b><font color="#0000FF">if</font></b><font color="#990000">(</font> j <font color="#990000">==</font> <font color="#993399">0</font> <font color="#990000">)</font>
                <font color="#FF0000">{</font>   <b><font color="#000000">assert</font></b><font color="#990000">(</font> k <font color="#990000">==</font> <font color="#993399">0</font> <font color="#990000">);</font>
                    ok <font color="#990000">&amp;=</font> itr<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">;</font>
                <font color="#FF0000">}</font>
                <b><font color="#0000FF">else</font></b> <b><font color="#0000FF">if</font></b><font color="#990000">(</font> k <font color="#990000">%</font> <font color="#993399">2</font> <font color="#990000">==</font> <font color="#993399">1</font> <font color="#990000">)</font>
                    ok <font color="#990000">&amp;=</font> itr<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()</font> <font color="#990000">==</font> j <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">;</font>
                <b><font color="#0000FF">else</font></b>
                    ok <font color="#990000">&amp;=</font> itr<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()</font> <font color="#990000">==</font> j<font color="#990000">;</font>
                <i><font color="#9A1900">//</font></i>
                <i><font color="#9A1900">// check value</font></i>
                ok  <font color="#990000">&amp;=</font> itr<font color="#990000">.</font><b><font color="#000000">value</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#009900">double</font><font color="#990000">(</font> itr<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()</font> <font color="#990000">+</font> itr<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">()</font> <font color="#990000">)</font> <font color="#990000">/</font> <font color="#993399">2.0</font><font color="#990000">;</font>
                ok  <font color="#990000">&amp;=</font> itr<font color="#990000">.</font><b><font color="#000000">value</font></b><font color="#990000">()</font> <font color="#990000">==</font> d_value<font color="#990000">[</font>k<font color="#990000">];</font>
                <i><font color="#9A1900">//</font></i>
                <font color="#990000">++</font>k<font color="#990000">;</font>
            <font color="#FF0000">}</font>
        <font color="#FF0000">}</font>
        ok <font color="#990000">&amp;=</font> k <font color="#990000">==</font> nnz<font color="#990000">;</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">//</font></i>
    <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: example/sparse/sparse2eigen.cpp

</body>
</html>
