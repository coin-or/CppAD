<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Including Eigen Examples, Tests, and sparse2eigen</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Including Eigen Examples, Tests, and sparse2eigen">
<meta name="keywords" id="keywords" content=" including eigen examples tests sparse2eigen home page include_eigen eigen_prefix test vector get_eigen ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_eigen_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="adolc.htm" target="_top">Prev</a>
</td><td><a href="cppadcg.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Install</option>
<option>cmake</option>
<option>eigen</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_install_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cmake_htm.js'></script>
</td>
<td>eigen</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Eigen Home Page</option>
<option>Examples and Tests</option>
<option>sparse2eigen</option>
<option>include_eigen</option>
<option>eigen_prefix</option>
<option>Examples</option>
<option>Test Vector</option>
<option>get_eigen</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@



<center><b><big><big>Including Eigen Examples, Tests, and sparse2eigen</big></big></b></center>
<br>
<b><big><a name="Eigen Home Page" id="Eigen Home Page">Eigen Home Page</a></big></b>

<br>
<a href="http://eigen.tuxfamily.org" target="_top"><span style='white-space: nowrap'>http://eigen.tuxfamily.org</span></a>


<br>
<br>
<b><big><a name="Examples and Tests" id="Examples and Tests">Examples and Tests</a></big></b>
<br>
CppAD can include the following examples and tests that
use the linear algebra package Eigen:

<table><tr><td align='left'  valign='top'>

<a href="cppad_eigen.hpp.htm" target="_top">cppad_eigen.hpp</a></td><td>
Enable Use of Eigen Linear Algebra Package with CppAD</td></tr>
<tr><td>

<a href="eigen_array.cpp.htm" target="_top">eigen_array.cpp</a></td><td>
Using Eigen Arrays: Example and Test</td></tr>
<tr><td>

<a href="eigen_det.cpp.htm" target="_top">eigen_det.cpp</a></td><td>
Using Eigen To Compute Determinant: Example and Test</td></tr>
<tr><td>

<a href="sparse2eigen.cpp.htm" target="_top">sparse2eigen.cpp</a></td><td>
Converting CppAD Sparse Matrix to Eigen Format: Example and Test</td></tr>
<tr><td>

<a href="atomic_two_eigen_cholesky.hpp.htm" target="_top">atomic_two_eigen_cholesky.hpp</a></td><td>
atomic_two Eigen Cholesky Factorization Class</td></tr>
<tr><td>

<a href="atomic_two_eigen_mat_inv.hpp.htm" target="_top">atomic_two_eigen_mat_inv.hpp</a></td><td>
atomic_two Eigen Matrix Inversion Class</td></tr>
<tr><td>

<a href="atomic_two_eigen_mat_mul.hpp.htm" target="_top">atomic_two_eigen_mat_mul.hpp</a></td><td>
atomic_two Eigen Matrix Multiply Class</td></tr>
<tr><td>

</td></tr>
</table>
<br>
<b><big><a name="sparse2eigen" id="sparse2eigen">sparse2eigen</a></big></b>
<br>
The <a href="sparse2eigen.htm" target="_top"><span style='white-space: nowrap'>sparse2eigen</span></a>
 utility will only be available if
<a href="cmake.htm#include_eigen" target="_top"><span style='white-space: nowrap'>include_eigen</span></a>

is specified on the cmake command line.

<br>
<br>
<b><big><a name="include_eigen" id="include_eigen">include_eigen</a></big></b>
<br>
If Eigen is installed on your system, you can
specify <code><font color="blue">include_eigen=true</font></code> on the
<a href="cmake.htm" target="_top"><span style='white-space: nowrap'>cmake</span></a>
 command line.
The value of 
<code><i><font color="black"><span style='white-space: nowrap'>PKG_CONFIG_PATH</span></font></i></code>
 must be such that the command

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;pkg-config&nbsp;eigen3&nbsp;--path&nbsp;--print-errors<br>
</span></font></code>
finds the location of the file <code><font color="blue">eigen3.pc</font></code>.

<br>
<br>
<b><big><a name="eigen_prefix" id="eigen_prefix">eigen_prefix</a></big></b>
<br>
With Eigen it is possible to use 
<code><font color="blue"><span style='white-space: nowrap'>-D&nbsp;eigen_prefix=</span></font><i><font color="black"><span style='white-space: nowrap'>eigen_prefix</span></font></i></code>

on the cmake command line.
In this case, the sub-directory <code><font color="blue">Eigen</font></code> must exist in a directory

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>eigen_prefix</span></font></i><font color="blue"><span style='white-space: nowrap'>/</span></font><i><font color="black"><span style='white-space: nowrap'>includedir</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
where 
<code><i><font color="black"><span style='white-space: nowrap'>include_dir</span></font></i></code>
 is one of the directories in the
<a href="cmake.htm#cmake_install_includedirs" target="_top"><span style='white-space: nowrap'>cmake_install_includedirs</span></a>
 list
of directories.

<br>
<br>
<b><big><a name="Examples" id="Examples">Examples</a></big></b>
<br>
If you specify 
<code><i><font color="black"><span style='white-space: nowrap'>include_eigen</span></font></i><font color="blue"><span style='white-space: nowrap'>cmake</span></font><i><font color="black"><span style='white-space: nowrap'>include_eigen</span></font></i></code>

on the cmake command line,
you will be able to run the Eigen examples list above
by executing the following commands starting in the
<a href="download.htm#Distribution Directory" target="_top"><span style='white-space: nowrap'>distribution&nbsp;directory</span></a>
:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;cd&nbsp;build/example<br>
&nbsp;&nbsp;&nbsp;&nbsp;make&nbsp;check_example<br>
</span></font></code>
If you do this,
you will see an indication that the examples
<code><font color="blue">eigen_array</font></code> and <code><font color="blue">eigen_det</font></code>
have passed their correctness check.

<br>
<br>
<b><big><a name="Test Vector" id="Test Vector">Test Vector</a></big></b>
<br>
If you have specified 
<code><i><font color="black"><span style='white-space: nowrap'>eigen_prefix</span></font></i></code>
 you can choose

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;-D&nbsp;cppad_testvector=eigen<br>
</span></font></code>
on the <a href="cmake.htm#CMake Command" target="_top"><span style='white-space: nowrap'>cmake&nbsp;command</span></a>
 line.
This we set the CppAD <a href="testvector.htm" target="_top"><span style='white-space: nowrap'>testvector</span></a>
 to use Eigen vectors.

<br>
<br>
<b><big><a name="get_eigen" id="get_eigen">get_eigen</a></big></b>
<br>
If you are using Unix, you can download and install
a copy of Eigen using <a href="get_eigen.sh.htm" target="_top"><span style='white-space: nowrap'>get_eigen.sh</span></a>
.
The corresponding install prefix is
<code><font color="blue">build/prefix</font></code>.



<hr>Input File: omh/install/eigen.omh

</body>
</html>
