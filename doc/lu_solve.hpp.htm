<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Source: LuSolve</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Source: LuSolve">
<meta name="keywords" id="keywords" content=" source: lusolve ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_lu_solve.hpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="lu_solve.cpp.htm" target="_top">Prev</a>
</td><td><a href="lufactor.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>LuDetAndSolve</option>
<option>LuSolve</option>
<option>lu_solve.hpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_utility_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_ludetandsolve_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_lusolve_htm.js'></script>
</td>
<td>lu_solve.hpp</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<b>This is cppad-20221105 documentation</b>. Here is a link to its
<a href="https://cppad.readthedocs.io/en/latest/user_guide.html" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Source: LuSolve</big></big></b></center>
<code><font color="blue"># ifndef CPPAD_LU_SOLVE_HPP
<code><span style='white-space: nowrap'><br>
</span></code># define CPPAD_LU_SOLVE_HPP

<pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;complex&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;vector&gt;</font>

<i><font color="#9A1900">// link exp for float and double cases</font></i>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/base_require.hpp&gt;</font>

<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/core/cppad_assert.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/utility/check_simple_vector.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/utility/check_numeric_type.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/utility/lu_factor.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/utility/lu_invert.hpp&gt;</font>

<b><font color="#0000FF">namespace</font></b> CppAD <font color="#FF0000">{</font> <i><font color="#9A1900">// BEGIN CppAD namespace</font></i>

<i><font color="#9A1900">// LeqZero</font></i>
<b><font color="#0000FF">template</font></b> <font color="#990000">&lt;</font><b><font color="#0000FF">class</font></b> <font color="#008080">Float</font><font color="#990000">&gt;</font>
<font color="#009900">bool</font> <b><font color="#000000">LeqZero</font></b><font color="#990000">(</font><b><font color="#0000FF">const</font></b> <font color="#008080">Float</font> <font color="#990000">&amp;</font>x<font color="#990000">)</font>
<font color="#FF0000">{</font>   <b><font color="#0000FF">return</font></b> x <font color="#990000">&lt;=</font> <b><font color="#000000">Float</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font> <font color="#FF0000">}</font>
<b><font color="#0000FF">inline</font></b> <font color="#009900">bool</font> <b><font color="#000000">LeqZero</font></b><font color="#990000">(</font> <b><font color="#0000FF">const</font></b> std<font color="#990000">::</font><font color="#008080">complex&lt;double&gt;</font> <font color="#990000">&amp;</font>x <font color="#990000">)</font>
<font color="#FF0000">{</font>   <b><font color="#0000FF">return</font></b> x <font color="#990000">==</font> std<font color="#990000">::</font>complex<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;(</font><font color="#993399">0</font><font color="#990000">);</font> <font color="#FF0000">}</font>
<b><font color="#0000FF">inline</font></b> <font color="#009900">bool</font> <b><font color="#000000">LeqZero</font></b><font color="#990000">(</font> <b><font color="#0000FF">const</font></b> std<font color="#990000">::</font><font color="#008080">complex&lt;float&gt;</font> <font color="#990000">&amp;</font>x <font color="#990000">)</font>
<font color="#FF0000">{</font>   <b><font color="#0000FF">return</font></b> x <font color="#990000">==</font> std<font color="#990000">::</font>complex<font color="#990000">&lt;</font><font color="#009900">float</font><font color="#990000">&gt;(</font><font color="#993399">0</font><font color="#990000">);</font> <font color="#FF0000">}</font>

<i><font color="#9A1900">// LuSolve</font></i>
<b><font color="#0000FF">template</font></b> <font color="#990000">&lt;</font><b><font color="#0000FF">class</font></b> <font color="#008080">Float</font><font color="#990000">,</font> <b><font color="#0000FF">class</font></b> <font color="#008080">FloatVector</font><font color="#990000">&gt;</font>
<font color="#009900">int</font> <b><font color="#000000">LuSolve</font></b><font color="#990000">(</font>
    <font color="#008080">size_t</font>             n      <font color="#990000">,</font>
    <font color="#008080">size_t</font>             m      <font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> <font color="#008080">FloatVector</font> <font color="#990000">&amp;</font>A      <font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> <font color="#008080">FloatVector</font> <font color="#990000">&amp;</font>B      <font color="#990000">,</font>
    <font color="#008080">FloatVector</font>       <font color="#990000">&amp;</font>X      <font color="#990000">,</font>
    <font color="#008080">Float</font>        <font color="#990000">&amp;</font>logdet      <font color="#990000">)</font>
<font color="#FF0000">{</font>
    <i><font color="#9A1900">// check numeric type specifications</font></i>
    CheckNumericType<font color="#990000">&lt;</font>Float<font color="#990000">&gt;();</font>

    <i><font color="#9A1900">// check simple vector class specifications</font></i>
    CheckSimpleVector<font color="#990000">&lt;</font>Float<font color="#990000">,</font> FloatVector<font color="#990000">&gt;();</font>

    <font color="#008080">size_t</font>        p<font color="#990000">;</font>       <i><font color="#9A1900">// index of pivot element (diagonal of L)</font></i>
    <font color="#009900">int</font>     signdet<font color="#990000">;</font>       <i><font color="#9A1900">// sign of the determinant</font></i>
    <font color="#008080">Float</font>     pivot<font color="#990000">;</font>       <i><font color="#9A1900">// pivot element</font></i>

    <i><font color="#9A1900">// the value zero</font></i>
    <b><font color="#0000FF">const</font></b> <font color="#008080">Float</font> <b><font color="#000000">zero</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>

    <i><font color="#9A1900">// pivot row and column order in the matrix</font></i>
    std<font color="#990000">::</font><font color="#008080">vector&lt;size_t&gt;</font> <b><font color="#000000">ip</font></b><font color="#990000">(</font>n<font color="#990000">);</font>
    std<font color="#990000">::</font><font color="#008080">vector&lt;size_t&gt;</font> <b><font color="#000000">jp</font></b><font color="#990000">(</font>n<font color="#990000">);</font>

    <i><font color="#9A1900">// -------------------------------------------------------</font></i>
    <b><font color="#000000">CPPAD_ASSERT_KNOWN</font></b><font color="#990000">(</font>
        <b><font color="#000000">size_t</font></b><font color="#990000">(</font>A<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">())</font> <font color="#990000">==</font> n <font color="#990000">*</font> n<font color="#990000">,</font>
        <font color="#FF0000">"Error in LuSolve: A must have size equal to n * n"</font>
    <font color="#990000">);</font>
    <b><font color="#000000">CPPAD_ASSERT_KNOWN</font></b><font color="#990000">(</font>
        <b><font color="#000000">size_t</font></b><font color="#990000">(</font>B<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">())</font> <font color="#990000">==</font> n <font color="#990000">*</font> m<font color="#990000">,</font>
        <font color="#FF0000">"Error in LuSolve: B must have size equal to n * m"</font>
    <font color="#990000">);</font>
    <b><font color="#000000">CPPAD_ASSERT_KNOWN</font></b><font color="#990000">(</font>
        <b><font color="#000000">size_t</font></b><font color="#990000">(</font>X<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">())</font> <font color="#990000">==</font> n <font color="#990000">*</font> m<font color="#990000">,</font>
        <font color="#FF0000">"Error in LuSolve: X must have size equal to n * m"</font>
    <font color="#990000">);</font>
    <i><font color="#9A1900">// -------------------------------------------------------</font></i>

    <i><font color="#9A1900">// copy A so that it does not change</font></i>
    <font color="#008080">FloatVector</font> <b><font color="#000000">Lu</font></b><font color="#990000">(</font>A<font color="#990000">);</font>

    <i><font color="#9A1900">// copy B so that it does not change</font></i>
    X <font color="#990000">=</font> B<font color="#990000">;</font>

    <i><font color="#9A1900">// Lu factor the matrix A</font></i>
    signdet <font color="#990000">=</font> <b><font color="#000000">LuFactor</font></b><font color="#990000">(</font>ip<font color="#990000">,</font> jp<font color="#990000">,</font> Lu<font color="#990000">);</font>

    <i><font color="#9A1900">// compute the log of the determinant</font></i>
    logdet  <font color="#990000">=</font> <b><font color="#000000">Float</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>p <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> p <font color="#990000">&lt;</font> n<font color="#990000">;</font> p<font color="#990000">++)</font>
    <font color="#FF0000">{</font>   <i><font color="#9A1900">// pivot using the max absolute element</font></i>
        pivot   <font color="#990000">=</font> Lu<font color="#990000">[</font> ip<font color="#990000">[</font>p<font color="#990000">]</font> <font color="#990000">*</font> n <font color="#990000">+</font> jp<font color="#990000">[</font>p<font color="#990000">]</font> <font color="#990000">];</font>

        <i><font color="#9A1900">// check for determinant equal to zero</font></i>
        <b><font color="#0000FF">if</font></b><font color="#990000">(</font> pivot <font color="#990000">==</font> zero <font color="#990000">)</font>
        <font color="#FF0000">{</font>   <i><font color="#9A1900">// abort the mission</font></i>
            logdet <font color="#990000">=</font> <b><font color="#000000">Float</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>
            <b><font color="#0000FF">return</font></b>   <font color="#993399">0</font><font color="#990000">;</font>
        <font color="#FF0000">}</font>

        <i><font color="#9A1900">// update the determinant</font></i>
        <b><font color="#0000FF">if</font></b><font color="#990000">(</font> <b><font color="#000000">LeqZero</font></b> <font color="#990000">(</font> pivot <font color="#990000">)</font> <font color="#990000">)</font>
        <font color="#FF0000">{</font>   logdet <font color="#990000">+=</font> <b><font color="#000000">log</font></b><font color="#990000">(</font> <font color="#990000">-</font> pivot <font color="#990000">);</font>
            signdet <font color="#990000">=</font> <font color="#990000">-</font> signdet<font color="#990000">;</font>
        <font color="#FF0000">}</font>
        <b><font color="#0000FF">else</font></b>
            logdet <font color="#990000">+=</font> <b><font color="#000000">log</font></b><font color="#990000">(</font> pivot <font color="#990000">);</font>

    <font color="#FF0000">}</font>

    <i><font color="#9A1900">// solve the linear equations</font></i>
    <b><font color="#000000">LuInvert</font></b><font color="#990000">(</font>ip<font color="#990000">,</font> jp<font color="#990000">,</font> Lu<font color="#990000">,</font> X<font color="#990000">);</font>

    <i><font color="#9A1900">// return the sign factor for the determinant</font></i>
    <b><font color="#0000FF">return</font></b> signdet<font color="#990000">;</font>
<font color="#FF0000">}</font>
<font color="#FF0000">}</font> <i><font color="#9A1900">// END CppAD namespace</font></i></tt></pre>
# endif
</font></code>


<hr>Input File: omh/lu_solve_hpp.omh

</body>
</html>
