<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Atomic Vector Class: Example Implementation</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Atomic Vector Class: Example Implementation">
<meta name="keywords" id="keywords" content=" atomic vector class: example implementation ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_atomic_four_vector.hpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="atomic_four_vector_implement.htm" target="_top">Prev</a>
</td><td><a href="atomic_four_vector_forward_op.hpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>AD</option>
<option>ADValued</option>
<option>atomic</option>
<option>atomic_four</option>
<option>atomic_four_example</option>
<option>atomic_four_vector</option>
<option>atomic_four_vector_implement</option>
<option>atomic_four_vector.hpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_four_example_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_four_vector_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_four_vector_implement_htm.js'></script>
</td>
<td>atomic_four_vector.hpp</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<center><b><big><big>Atomic Vector Class: Example Implementation</big></big></b></center>
<pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/cppad.hpp&gt;</font>

<i><font color="#9A1900">// declare forward_op and reverse_op for Base and AD&lt;Base&gt; cases</font></i>
<i><font color="#9A1900">// where op is an operator name; e.g., forward_add and reverse_add.</font></i>
<b><font color="#000080"># define</font></b> <b><font color="#000000">CPPAD_ATOMIC_FOUR_FORWARD_AND_REVERSE</font></b><font color="#990000">(</font>op<font color="#990000">)</font>             <font color="#990000">\</font>
    <b><font color="#0000FF">static</font></b> <font color="#009900">void</font> forward_ ## <b><font color="#000000">op</font></b><font color="#990000">(</font>                                <font color="#990000">\</font>
        <font color="#008080">size_t</font>                                           m<font color="#990000">,</font>    <font color="#990000">\</font>
        <font color="#008080">size_t</font>                                           p<font color="#990000">,</font>    <font color="#990000">\</font>
        <font color="#008080">size_t</font>                                           q<font color="#990000">,</font>    <font color="#990000">\</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                       tx<font color="#990000">,</font>   <font color="#990000">\</font>
        CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                             ty    <font color="#990000">\</font>
    <font color="#990000">);</font>                                                         <font color="#990000">\</font>
    <font color="#009900">void</font> forward_ ## <b><font color="#000000">op</font></b><font color="#990000">(</font>                                       <font color="#990000">\</font>
        <font color="#008080">size_t</font>                                           m<font color="#990000">,</font>    <font color="#990000">\</font>
        <font color="#008080">size_t</font>                                           p<font color="#990000">,</font>    <font color="#990000">\</font>
        <font color="#008080">size_t</font>                                           q<font color="#990000">,</font>    <font color="#990000">\</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>          atx<font color="#990000">,</font>  <font color="#990000">\</font>
        CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>                aty   <font color="#990000">\</font>
    <font color="#990000">);</font>                                                         <font color="#990000">\</font>
    <b><font color="#0000FF">static</font></b> <font color="#009900">void</font> reverse_ ## <b><font color="#000000">op</font></b><font color="#990000">(</font>                                <font color="#990000">\</font>
        <font color="#008080">size_t</font>                                           m<font color="#990000">,</font>    <font color="#990000">\</font>
        <font color="#008080">size_t</font>                                           q<font color="#990000">,</font>    <font color="#990000">\</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                       tx<font color="#990000">,</font>   <font color="#990000">\</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                       ty<font color="#990000">,</font>   <font color="#990000">\</font>
        CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                             px<font color="#990000">,</font>   <font color="#990000">\</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                       py    <font color="#990000">\</font>
    <font color="#990000">);</font>                                                         <font color="#990000">\</font>
    <font color="#009900">void</font> reverse_ ## <b><font color="#000000">op</font></b><font color="#990000">(</font>                                       <font color="#990000">\</font>
        <font color="#008080">size_t</font>                                           m<font color="#990000">,</font>    <font color="#990000">\</font>
        <font color="#008080">size_t</font>                                           q<font color="#990000">,</font>    <font color="#990000">\</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>          atx<font color="#990000">,</font>  <font color="#990000">\</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>          aty<font color="#990000">,</font>  <font color="#990000">\</font>
        CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>                apx<font color="#990000">,</font>  <font color="#990000">\</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>          apy   <font color="#990000">\</font>
    <font color="#990000">);</font>

<b><font color="#0000FF">namespace</font></b> CppAD <font color="#FF0000">{</font> <i><font color="#9A1900">// BEGIN_CPPAD_NAMESPACE</font></i>
<i><font color="#9A1900">//</font></i>
<b><font color="#0000FF">template</font></b> <font color="#990000">&lt;</font><b><font color="#0000FF">class</font></b> <font color="#008080">Base</font><font color="#990000">&gt;</font>
<b><font color="#0000FF">class</font></b> <font color="#008080">atomic_vector</font> <font color="#990000">:</font> <b><font color="#0000FF">public</font></b> CppAD<font color="#990000">::</font>atomic_four<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#FF0000">{</font>
<i><font color="#9A1900">//</font></i>
<b><font color="#0000FF">public</font></b><font color="#990000">:</font>
    <i><font color="#9A1900">// BEGIN_SORT_THIS_LINE_PLUS_4</font></i>
    <i><font color="#9A1900">// BEGIN op_enum_t</font></i>
    <i><font color="#9A1900">// atomic_vector::op_enum_t</font></i>
    <b><font color="#0000FF">typedef</font></b> <b><font color="#0000FF">enum</font></b> <font color="#FF0000">{</font>
        add_enum<font color="#990000">,</font>
        div_enum<font color="#990000">,</font>
        mul_enum<font color="#990000">,</font>
        neg_enum<font color="#990000">,</font>
        sub_enum<font color="#990000">,</font>
        number_op_enum
    <font color="#FF0000">}</font> op_enum_t<font color="#990000">;</font>
    <i><font color="#9A1900">// END op_enum_t</font></i>
    <i><font color="#9A1900">// END_SORT_THIS_LINE_MINUS_4</font></i>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// ctor</font></i>
    <b><font color="#000000">atomic_vector</font></b><font color="#990000">(</font><b><font color="#0000FF">const</font></b> std<font color="#990000">::</font>string<font color="#990000">&amp;</font> name<font color="#990000">)</font> <font color="#990000">:</font>
    CppAD<font color="#990000">::</font>atomic_four<font color="#990000">&lt;</font>Base<font color="#990000">&gt;(</font>name<font color="#990000">)</font>
    <font color="#FF0000">{</font> <font color="#FF0000">}</font>
<b><font color="#0000FF">private</font></b><font color="#990000">:</font>
    <b><font color="#0000FF">typedef</font></b> CppAD<font color="#990000">::</font><font color="#008080">vector&lt; CppAD::AD&lt;Base&gt; &gt;</font>      ad_vector<font color="#990000">;</font>
    <b><font color="#0000FF">typedef</font></b> <b><font color="#0000FF">typename</font></b> <font color="#008080">ad_vector</font><font color="#990000">::</font><font color="#008080">iterator</font>          ad_iterator<font color="#990000">;</font>
    <b><font color="#0000FF">typedef</font></b> <b><font color="#0000FF">typename</font></b> <font color="#008080">ad_vector</font><font color="#990000">::</font><font color="#008080">const_iterator</font>    ad_const_iterator<font color="#990000">;</font>
    <b><font color="#0000FF">typedef</font></b> <b><font color="#0000FF">typename</font></b> <font color="#008080">ad_iterator</font><font color="#990000">::</font><font color="#008080">difference_type</font> ad_difference_type<font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <b><font color="#0000FF">static</font></b> <font color="#009900">bool</font> <b><font color="#000000">is_unary</font></b><font color="#990000">(</font><font color="#008080">op_enum_t</font> op<font color="#990000">)</font>
    <font color="#FF0000">{</font>   <font color="#009900">bool</font> result <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
        <b><font color="#0000FF">switch</font></b><font color="#990000">(</font>op<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <b><font color="#0000FF">case</font></b> add_enum<font color="#990000">:</font>
            <b><font color="#0000FF">case</font></b> sub_enum<font color="#990000">:</font>
            <b><font color="#0000FF">case</font></b> mul_enum<font color="#990000">:</font>
            <b><font color="#0000FF">case</font></b> div_enum<font color="#990000">:</font>
            result <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
            <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

            <b><font color="#0000FF">default</font></b><font color="#990000">:</font>
            <b><font color="#0000FF">break</font></b><font color="#990000">;</font>
        <font color="#FF0000">}</font>
        <b><font color="#0000FF">return</font></b> result<font color="#990000">;</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">// ------------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// copy routines</font></i>
    <i><font color="#9A1900">// ------------------------------------------------------------------------</font></i>
    <b><font color="#0000FF">static</font></b> <font color="#009900">void</font> <b><font color="#000000">copy_vec_to_mat</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>            m<font color="#990000">,</font>
        <font color="#008080">size_t</font>            q<font color="#990000">,</font>
        <font color="#008080">size_t</font>            k <font color="#990000">,</font>
        <font color="#008080">ad_const_iterator</font> vec<font color="#990000">,</font>
        <font color="#008080">ad_iterator</font>       mat<font color="#990000">)</font>
    <font color="#FF0000">{</font>   <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <font color="#008080">size_t</font> index  <font color="#990000">=</font> i <font color="#990000">*</font> q <font color="#990000">+</font> k<font color="#990000">;</font>
            <font color="#990000">*(</font>mat <font color="#990000">+</font> <b><font color="#000000">ad_difference_type</font></b><font color="#990000">(</font>index<font color="#990000">)</font> <font color="#990000">)</font> <font color="#990000">=</font>
                <font color="#990000">*(</font>vec <font color="#990000">+</font> <b><font color="#000000">ad_difference_type</font></b><font color="#990000">(</font>i<font color="#990000">)</font> <font color="#990000">);</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">// copy_mat_to_vec</font></i>
    <b><font color="#0000FF">static</font></b> <font color="#009900">void</font> <b><font color="#000000">copy_mat_to_vec</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>            m<font color="#990000">,</font>
        <font color="#008080">size_t</font>            q<font color="#990000">,</font>
        <font color="#008080">size_t</font>            k<font color="#990000">,</font>
        <font color="#008080">ad_const_iterator</font> mat<font color="#990000">,</font>
        <font color="#008080">ad_iterator</font>       vec<font color="#990000">)</font>
    <font color="#FF0000">{</font>   <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <font color="#008080">size_t</font> index  <font color="#990000">=</font> i <font color="#990000">*</font> q <font color="#990000">+</font> k<font color="#990000">;</font>
            <font color="#990000">*(</font>vec <font color="#990000">+</font> <b><font color="#000000">ad_difference_type</font></b><font color="#990000">(</font>i<font color="#990000">)</font> <font color="#990000">)</font> <font color="#990000">=</font>
                <font color="#990000">*(</font>mat <font color="#990000">+</font> <b><font color="#000000">ad_difference_type</font></b><font color="#990000">(</font>index<font color="#990000">)</font> <font color="#990000">);</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">// -----------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// overrides</font></i>
    <i><font color="#9A1900">// -----------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// for_type</font></i>
    <font color="#009900">bool</font> <b><font color="#000000">for_type</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                                     call_id     <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>CppAD<font color="#990000">::</font>ad_type_enum<font color="#990000">&gt;&amp;</font>  type_x      <font color="#990000">,</font>
        CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>CppAD<font color="#990000">::</font>ad_type_enum<font color="#990000">&gt;&amp;</font>        type_y
    <font color="#990000">)</font> <b><font color="#0000FF">override</font></b><font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// rev_depend</font></i>
    <font color="#009900">bool</font> <b><font color="#000000">rev_depend</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                         call_id     <font color="#990000">,</font>
        CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font>           depend_x    <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font>     depend_y
    <font color="#990000">)</font> <b><font color="#0000FF">override</font></b><font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// jac_sparsity</font></i>
    <font color="#009900">bool</font> <b><font color="#000000">jac_sparsity</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                                         call_id      <font color="#990000">,</font>
        <font color="#009900">bool</font>                                           dependency   <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font>                     ident_zero_x <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font>                     select_x     <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font>                     select_y     <font color="#990000">,</font>
        CppAD<font color="#990000">::</font>sparse_rc<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>size_t<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>     pattern_out
    <font color="#990000">)</font> <b><font color="#0000FF">override</font></b><font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// hes_sparsity</font></i>
    <font color="#009900">bool</font> <b><font color="#000000">hes_sparsity</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                                         call_id      <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font>                     ident_zero_x <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font>                     select_x     <font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font>                     select_y     <font color="#990000">,</font>
        CppAD<font color="#990000">::</font>sparse_rc<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>size_t<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>     pattern_out
    <font color="#990000">)</font> <b><font color="#0000FF">override</font></b><font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// Base forward</font></i>
    <font color="#009900">bool</font> <b><font color="#000000">forward</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                                           call_id<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font>                       select_y<font color="#990000">,</font>
        <font color="#008080">size_t</font>                                           order_low<font color="#990000">,</font>
        <font color="#008080">size_t</font>                                           order_up<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                       tx<font color="#990000">,</font>
        CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                             ty
    <font color="#990000">)</font> <b><font color="#0000FF">override</font></b><font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// AD&lt;Base&gt; forward</font></i>
    <font color="#009900">bool</font> <b><font color="#000000">forward</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                                           call_id<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font>                       select_y<font color="#990000">,</font>
        <font color="#008080">size_t</font>                                           order_low<font color="#990000">,</font>
        <font color="#008080">size_t</font>                                           order_up<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>          atx<font color="#990000">,</font>
        CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>                aty
    <font color="#990000">)</font> <b><font color="#0000FF">override</font></b><font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// Base reverse</font></i>
    <font color="#009900">bool</font> <b><font color="#000000">reverse</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                                           call_id<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font>                       select_x<font color="#990000">,</font>
        <font color="#008080">size_t</font>                                           order_up<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                       tx<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                       ty<font color="#990000">,</font>
        CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                             px<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                       py
    <font color="#990000">)</font> <b><font color="#0000FF">override</font></b><font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// AD&lt;Base&gt; reverse</font></i>
    <font color="#009900">bool</font> <b><font color="#000000">reverse</font></b><font color="#990000">(</font>
        <font color="#008080">size_t</font>                                           call_id<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font>                       select_x<font color="#990000">,</font>
        <font color="#008080">size_t</font>                                           order_up<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>          atx<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>          aty<font color="#990000">,</font>
        CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>                apx<font color="#990000">,</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>          apy
    <font color="#990000">)</font> <b><font color="#0000FF">override</font></b><font color="#990000">;</font>
    <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// Forward and Reverse Implementation Routines</font></i>
    <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
    <b><font color="#000000">CPPAD_ATOMIC_FOUR_FORWARD_AND_REVERSE</font></b><font color="#990000">(</font>add<font color="#990000">)</font>
    <b><font color="#000000">CPPAD_ATOMIC_FOUR_FORWARD_AND_REVERSE</font></b><font color="#990000">(</font>sub<font color="#990000">)</font>
    <b><font color="#000000">CPPAD_ATOMIC_FOUR_FORWARD_AND_REVERSE</font></b><font color="#990000">(</font>mul<font color="#990000">)</font>
    <b><font color="#000000">CPPAD_ATOMIC_FOUR_FORWARD_AND_REVERSE</font></b><font color="#990000">(</font>div<font color="#990000">)</font>
    <b><font color="#000000">CPPAD_ATOMIC_FOUR_FORWARD_AND_REVERSE</font></b><font color="#990000">(</font>neg<font color="#990000">)</font>
<font color="#FF0000">}</font><font color="#990000">;</font>
<font color="#FF0000">}</font> <i><font color="#9A1900">// END_CPPAD_NAMESPACE</font></i>

<b><font color="#000080"># undef</font></b> CPPAD_ATOMIC_FOUR_FORWARD_AND_REVERSE

<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/example/atomic_four/vector/rev_depend.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/example/atomic_four/vector/for_type.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/example/atomic_four/vector/jac_sparsity.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/example/atomic_four/vector/hes_sparsity.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/example/atomic_four/vector/reverse_op.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/example/atomic_four/vector/forward_op.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/example/atomic_four/vector/neg_op.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/example/atomic_four/vector/div_op.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/example/atomic_four/vector/mul_op.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/example/atomic_four/vector/sub_op.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/example/atomic_four/vector/add_op.hpp&gt;</font></tt></pre>

<hr>Input File: include/cppad/example/atomic_four/vector/vector.hpp

</body>
</html>
