<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Using The CppAD Test Vector Template Class</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Using The CppAD Test Vector Template Class">
<meta name="keywords" id="keywords" content=" using the cppad test vector template class syntax choice cppad::vector cppad_cppadvector deprecated 2022-06-22 std::vector cppad_stdvector boost::numeric::ublas::vector cppad_boostvector cppad::eigen_vector cppad_eigenvector ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_testvector_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="lu_vec_ad_ok.cpp.htm" target="_top">Prev</a>
</td><td><a href="wno_conversion.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Example</option>
<option>testvector</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_example_htm.js'></script>
</td>
<td>testvector</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Choice</option>
<option>CppAD::vector</option>
<option>---..CPPAD_CPPADVECTOR, Deprecated 2022-06-22</option>
<option>std::vector</option>
<option>---..CPPAD_STDVECTOR, Deprecated 2022-06-22</option>
<option>boost::numeric::ublas::vector</option>
<option>---..CPPAD_BOOSTVECTOR, Deprecated 2022-06-22</option>
<option>CppAD::eigen_vector</option>
<option>---..CPPAD_EIGENVECTOR, Deprecated 2022-06-22</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<b>This is old CppAD documentation:</b> Here is a link to its
<a href="http://coin-or.github.io/CppAD" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Using The CppAD Test Vector Template Class</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>CPPAD_TESTVECTOR(</span></font><i><font color="black"><span style='white-space: nowrap'>Scalar</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
<br>
<b><big><a name="Choice" id="Choice">Choice</a></big></b>
<br>
The user can choose, during the install procedure,
which template class to use in the examples and tests; see below.
This shows that any
<a href="simplevector.htm" target="_top"><span style='white-space: nowrap'>simple&nbsp;vector</span></a>
 class can be used in place of

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;CPPAD_TESTVECTOR(</span></font><i><font color="black"><span style='white-space: nowrap'>Type</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
When writing their own code,
users can choose a specific simple vector they prefer; for example,

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Type</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;<br>
</span></font></code>
<br>
<b><big><a name="CppAD::vector" id="CppAD::vector">CppAD::vector</a></big></b>
<br>
If in the <a href="cmake.htm#CMake Command" target="_top"><span style='white-space: nowrap'>cmake&nbsp;command</span></a>

you specify <a href="cppad_testvector.htm" target="_top"><span style='white-space: nowrap'>cppad_testvector</span></a>
 to be <code><font color="blue">cppad</font></code>,

<code><font color="blue"><span style='white-space: nowrap'><br>
#&nbsp;define&nbsp;CPPAD_TESTVECTOR(</span></font><i><font color="black"><span style='white-space: nowrap'>Scalar</span></font></i><font color="blue"><span style='white-space: nowrap'>)&nbsp;CppAD::vector&lt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>Scalar</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&gt;<br>
</span></font></code>
<br>
<big><a name="CppAD::vector.CPPAD_CPPADVECTOR, Deprecated 2022-06-22" id="CppAD::vector.CPPAD_CPPADVECTOR, Deprecated 2022-06-22">CPPAD_CPPADVECTOR, Deprecated 2022-06-22</a></big>
<br>
This symbol is 1 (0) if the definition above
is used (is not used) for <code><font color="blue">CPPAD_TESTVECTOR</font></code>.

<br>
<br>
<b><big><a name="std::vector" id="std::vector">std::vector</a></big></b>
<br>
If in the cmake command
you specify 
<code><i><font color="black"><span style='white-space: nowrap'>cppad_testvector</span></font></i></code>
 to be <code><font color="blue">std</font></code>,

<code><font color="blue"><span style='white-space: nowrap'><br>
#&nbsp;define&nbsp;CPPAD_TESTVECTOR(</span></font><i><font color="black"><span style='white-space: nowrap'>Scalar</span></font></i><font color="blue"><span style='white-space: nowrap'>)&nbsp;std::vector&lt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>Scalar</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&gt;<br>
</span></font></code>
<br>
<big><a name="std::vector.CPPAD_STDVECTOR, Deprecated 2022-06-22" id="std::vector.CPPAD_STDVECTOR, Deprecated 2022-06-22">CPPAD_STDVECTOR, Deprecated 2022-06-22</a></big>
<br>
This symbol is 1 (0) if the definition above
is used (is not used) for <code><font color="blue">CPPAD_TESTVECTOR</font></code>.

<br>
<br>
<b><big><a name="boost::numeric::ublas::vector" id="boost::numeric::ublas::vector">boost::numeric::ublas::vector</a></big></b>
<br>
If in the cmake command
you specify 
<code><i><font color="black"><span style='white-space: nowrap'>cppad_testvector</span></font></i></code>
 to be <code><font color="blue">boost</font></code>,

<code><font color="blue"><span style='white-space: nowrap'><br>
#&nbsp;define&nbsp;CPPAD_TESTVECTOR(</span></font><i><font color="black"><span style='white-space: nowrap'>Scalar</span></font></i><font color="blue"><span style='white-space: nowrap'>)&nbsp;boost::numeric::ublas::vector&lt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>Scalar</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&gt;<br>
</span></font></code>
<br>
<big><a name="boost::numeric::ublas::vector.CPPAD_BOOSTVECTOR, Deprecated 2022-06-22" id="boost::numeric::ublas::vector.CPPAD_BOOSTVECTOR, Deprecated 2022-06-22">CPPAD_BOOSTVECTOR, Deprecated 2022-06-22</a></big>
<br>
This symbol is 1 (0) if the definition above
is used (is not used) for <code><font color="blue">CPPAD_TESTVECTOR</font></code>.

<br>
<br>
<b><big><a name="CppAD::eigen_vector" id="CppAD::eigen_vector">CppAD::eigen_vector</a></big></b>
<br>
If in the cmake command
you specify 
<code><i><font color="black"><span style='white-space: nowrap'>cppad_testvector</span></font></i></code>
 to be <code><font color="blue">eigen</font></code>,

<code><font color="blue"><span style='white-space: nowrap'><br>
#&nbsp;define&nbsp;CPPAD_TESTVECTOR(</span></font><i><font color="black"><span style='white-space: nowrap'>Scalar</span></font></i><font color="blue"><span style='white-space: nowrap'>)&nbsp;CppAD::eigen_vector&lt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>Scalar</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&gt;<br>
</span></font></code>
see <a href="cppad_eigen.hpp.htm#eigen_vector" target="_top"><span style='white-space: nowrap'>eigen_vector</span></a>
.
In this case CppAD will use the Eigen vector
for many of its examples and tests.

<br>
<br>
<big><a name="CppAD::eigen_vector.CPPAD_EIGENVECTOR, Deprecated 2022-06-22" id="CppAD::eigen_vector.CPPAD_EIGENVECTOR, Deprecated 2022-06-22">CPPAD_EIGENVECTOR, Deprecated 2022-06-22</a></big>
<br>
This symbol is 1 (0) if the definition above
is used (is not used) for <code><font color="blue">CPPAD_TESTVECTOR</font></code>.


<hr>Input File: include/cppad/core/testvector.hpp

</body>
</html>
