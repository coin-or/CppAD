<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Determinant Using Expansion by Minors</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Determinant Using Expansion by Minors">
<meta name="keywords" id="keywords" content=" determinant using expansion minors syntax inclusion constructor scalar n det d vector example source code ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_det_by_minor_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="det_of_minor.hpp.htm" target="_top">Prev</a>
</td><td><a href="det_by_minor.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>speed</option>
<option>speed_utility</option>
<option>det_by_minor</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_speed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_speed_utility_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_det_by_minor_htm.js'></script>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Inclusion</option>
<option>Constructor</option>
<option>Scalar</option>
<option>n</option>
<option>det</option>
<option>---..a</option>
<option>---..d</option>
<option>Vector</option>
<option>Example</option>
<option>Source Code</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@



<b>This is cppad-20221105 documentation</b>. Here is a link to its
<a href="https://cppad.readthedocs.io/en/latest/user_guide.html" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Determinant Using Expansion by Minors</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>#&nbsp;include&nbsp;&lt;cppad/speed/det_by_minor.hpp&gt;<br>
</span></font></code>

<code><font color="blue"><span style='white-space: nowrap'>det_by_minor&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Scalar</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>det</span></font></i><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>n</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>d</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>det</span></font></i><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>a</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
<br>
<b><big><a name="Inclusion" id="Inclusion">Inclusion</a></big></b>
<br>
The template class <code><font color="blue">det_by_minor</font></code> is defined in the <code><font color="blue">CppAD</font></code>
namespace by including
the file <code><font color="blue">cppad/speed/det_by_minor.hpp</font></code>
(relative to the CppAD distribution directory).

<br>
<br>
<b><big><a name="Constructor" id="Constructor">Constructor</a></big></b>
<br>
The syntax

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;det_by_minor&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Scalar</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>det</span></font></i><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>n</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
constructs the object 
<code><i><font color="black"><span style='white-space: nowrap'>det</span></font></i></code>
 which can be used for
evaluating the determinant of 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
 by 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
 matrices
using expansion by minors.

<br>
<br>
<b><big><a name="Scalar" id="Scalar">Scalar</a></big></b>
<br>
The type 
<code><i><font color="black"><span style='white-space: nowrap'>Scalar</span></font></i></code>
 must satisfy the same conditions
as in the function <a href="det_of_minor.htm#Scalar" target="_top"><span style='white-space: nowrap'>det_of_minor</span></a>
.

<br>
<br>
<b><big><a name="n" id="n">n</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>n</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
<br>
<b><big><a name="det" id="det">det</a></big></b>
<br>
The syntax

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>d</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>det</span></font></i><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>a</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
returns the determinant of the matrix 
<code><i><font color="black"><span style='white-space: nowrap'>A</span></font></i></code>
 using expansion by minors.

<br>
<br>
<big><a name="det.a" id="det.a">a</a></big>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>a</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>Vector</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&amp;</span></font><i><font color="black"><span style='white-space: nowrap'>a</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It must be a 
<code><i><font color="black"><span style='white-space: nowrap'>Vector</span></font></i></code>
 with length <small>@(@
n * n
@)@</small> and with
elements of type 
<code><i><font color="black"><span style='white-space: nowrap'>Scalar</span></font></i></code>
.
The elements of the <small>@(@
n \times n
@)@</small> matrix <small>@(@
A
@)@</small> are defined,
for <small>@(@
i = 0 , \ldots , n-1
@)@</small> and <small>@(@
j = 0 , \ldots , n-1
@)@</small>, by
<small>@[@

    A_{i,j} = a[ i * m + j]

@]@</small>

<br>
<br>
<big><a name="det.d" id="det.d">d</a></big>
<br>
The return value 
<code><i><font color="black"><span style='white-space: nowrap'>d</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>Scalar</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>d</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It is equal to the determinant of <small>@(@
A
@)@</small>.

<br>
<br>
<b><big><a name="Vector" id="Vector">Vector</a></big></b>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
 is a 
<code><i><font color="black"><span style='white-space: nowrap'>Vector</span></font></i></code>
 object,
it must support the syntax

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>]<br>
</span></font></code>
where 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i></code>
 has type <code><font color="blue">size_t</font></code> with value less than <small>@(@
n * n
@)@</small>.
This must return a 
<code><i><font color="black"><span style='white-space: nowrap'>Scalar</span></font></i></code>
 value corresponding to the <code><i>i</i></code>-th
element of the vector 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
.
This is the only requirement of the type 
<code><i><font color="black"><span style='white-space: nowrap'>Vector</span></font></i></code>
.




<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file
<a href="det_by_minor.cpp.htm" target="_top"><span style='white-space: nowrap'>det_by_minor.cpp</span></a>

contains an example and test of <code><font color="blue">det_by_minor.hpp</font></code>.

<br>
<br>
<b><big><a name="Source Code" id="Source Code">Source Code</a></big></b>
<br>
The file
<a href="det_by_minor.hpp.htm" target="_top"><span style='white-space: nowrap'>det_by_minor.hpp</span></a>

contains the source for this template function.



<hr>Input File: include/cppad/speed/det_by_minor.hpp

</body>
</html>
