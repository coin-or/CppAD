<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Atomic Vector Forward Mode: Example Implementation</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Atomic Vector Forward Mode: Example Implementation">
<meta name="keywords" id="keywords" content=" atomic vector forward mode: example implementation purpose source ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_atomic_four_vector_reverse_op.hpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="atomic_four_vector_forward_op.hpp.htm" target="_top">Prev</a>
</td><td><a href="atomic_four_vector_jac_sparsity.hpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>AD</option>
<option>ADValued</option>
<option>atomic</option>
<option>atomic_four</option>
<option>atomic_four_example</option>
<option>atomic_four_vector</option>
<option>atomic_four_vector_implement</option>
<option>atomic_four_vector_reverse_op.hpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_four_example_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_four_vector_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_four_vector_implement_htm.js'></script>
</td>
<td>atomic_four_vector_reverse_op.hpp</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Purpose</option>
<option>Source</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<b>This is cppad-20221105 documentation</b>. Here is a link to its
<a href="https://cppad.readthedocs.io/en/latest/user_guide.html" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Atomic Vector Forward Mode: Example Implementation</big></big></b></center>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
The <code><font color="blue">reverse</font></code> routine overrides the virtual functions
used by the atomic_four base class for reverse mode calculations; see
<a href="atomic_four_reverse.htm" target="_top"><span style='white-space: nowrap'>reverse</span></a>
.
It determines which operator is specified for this call and transfers
the call to the operator's implementation.
There are two versions of the <code><font color="blue">reverse</font></code> routine, one for 
<code><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i></code>

and one for <code><font color="blue">AD&lt;Base&gt;</font></code>.

<br>
<br>
<b><big><a name="Source" id="Source">Source</a></big></b>

<pre><tt>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/example/atomic_four/vector/vector.hpp&gt;</font>

<b><font color="#0000FF">namespace</font></b> CppAD <font color="#FF0000">{</font> <i><font color="#9A1900">// BEGIN_CPPAD_NAMESPACE</font></i>
<i><font color="#9A1900">//</font></i>
<i><font color="#9A1900">// reverse override</font></i>
<i><font color="#9A1900">// this routine used by ADFun&lt;Base&gt; objects</font></i>
<b><font color="#0000FF">template</font></b> <font color="#990000">&lt;</font><b><font color="#0000FF">class</font></b> <font color="#008080">Base</font><font color="#990000">&gt;</font>
<font color="#009900">bool</font> atomic_vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;::</font><b><font color="#000000">reverse</font></b><font color="#990000">(</font>
    <font color="#008080">size_t</font>                                           call_id<font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font>                       select_x<font color="#990000">,</font>
    <font color="#008080">size_t</font>                                           order_up<font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                       tx<font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                       ty<font color="#990000">,</font>
    CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                             px<font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                       py<font color="#990000">)</font>
<font color="#FF0000">{</font>
    <i><font color="#9A1900">// q</font></i>
    <font color="#008080">size_t</font> q <font color="#990000">=</font> order_up <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// op, n, m</font></i>
    <font color="#008080">op_enum_t</font> op <font color="#990000">=</font> <b><font color="#000000">op_enum_t</font></b><font color="#990000">(</font> call_id <font color="#990000">);</font>
    <font color="#008080">size_t</font> n     <font color="#990000">=</font> select_x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font>
    <font color="#008080">size_t</font> m  <font color="#990000">=</font> n <font color="#990000">/</font> <font color="#993399">2</font><font color="#990000">;</font>
    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> <b><font color="#000000">is_unary</font></b><font color="#990000">(</font>op<font color="#990000">)</font> <font color="#990000">)</font>
        m <font color="#990000">=</font> n<font color="#990000">;</font>
    <b><font color="#000000">assert</font></b><font color="#990000">(</font> tx<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> q <font color="#990000">*</font> n <font color="#990000">);</font>
    <b><font color="#000000">assert</font></b><font color="#990000">(</font> ty<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> q <font color="#990000">*</font> m <font color="#990000">);</font>
    <i><font color="#9A1900">//</font></i>
    <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
    <b><font color="#0000FF">switch</font></b><font color="#990000">(</font>op<font color="#990000">)</font>
    <font color="#FF0000">{</font>
        <i><font color="#9A1900">// addition</font></i>
        <b><font color="#0000FF">case</font></b> add_enum<font color="#990000">:</font>
        <b><font color="#000000">reverse_add</font></b><font color="#990000">(</font>m<font color="#990000">,</font> q<font color="#990000">,</font> tx<font color="#990000">,</font> ty<font color="#990000">,</font> px<font color="#990000">,</font> py<font color="#990000">);</font>
        ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
        <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

        <i><font color="#9A1900">// subtraction</font></i>
        <b><font color="#0000FF">case</font></b> sub_enum<font color="#990000">:</font>
        <b><font color="#000000">reverse_sub</font></b><font color="#990000">(</font>m<font color="#990000">,</font> q<font color="#990000">,</font> tx<font color="#990000">,</font> ty<font color="#990000">,</font> px<font color="#990000">,</font> py<font color="#990000">);</font>
        ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
        <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

        <i><font color="#9A1900">// multiplication</font></i>
        <b><font color="#0000FF">case</font></b> mul_enum<font color="#990000">:</font>
        <b><font color="#000000">reverse_mul</font></b><font color="#990000">(</font>m<font color="#990000">,</font> q<font color="#990000">,</font> tx<font color="#990000">,</font> ty<font color="#990000">,</font> px<font color="#990000">,</font> py<font color="#990000">);</font>
        ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
        <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

        <i><font color="#9A1900">// division</font></i>
        <b><font color="#0000FF">case</font></b> div_enum<font color="#990000">:</font>
        <b><font color="#000000">reverse_div</font></b><font color="#990000">(</font>m<font color="#990000">,</font> q<font color="#990000">,</font> tx<font color="#990000">,</font> ty<font color="#990000">,</font> px<font color="#990000">,</font> py<font color="#990000">);</font>
        ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
        <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

        <i><font color="#9A1900">// unary minus</font></i>
        <b><font color="#0000FF">case</font></b> neg_enum<font color="#990000">:</font>
        <b><font color="#000000">reverse_neg</font></b><font color="#990000">(</font>m<font color="#990000">,</font> q<font color="#990000">,</font> tx<font color="#990000">,</font> ty<font color="#990000">,</font> px<font color="#990000">,</font> py<font color="#990000">);</font>
        ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
        <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

        <i><font color="#9A1900">// error</font></i>
        <b><font color="#0000FF">case</font></b> number_op_enum<font color="#990000">:</font>
        <b><font color="#000000">assert</font></b><font color="#990000">(</font><b><font color="#0000FF">false</font></b><font color="#990000">);</font>
        <b><font color="#0000FF">break</font></b><font color="#990000">;</font>
    <font color="#FF0000">}</font>
    <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font>
<i><font color="#9A1900">// reverse override</font></i>
<i><font color="#9A1900">// this routine used by ADFun&lt; CppAD::AD&lt;Base&gt; , Base&gt; objects</font></i>
<b><font color="#0000FF">template</font></b> <font color="#990000">&lt;</font><b><font color="#0000FF">class</font></b> <font color="#008080">Base</font><font color="#990000">&gt;</font>
<font color="#009900">bool</font> atomic_vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;::</font><b><font color="#000000">reverse</font></b><font color="#990000">(</font>
    <font color="#008080">size_t</font>                                           call_id<font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font>                       select_x<font color="#990000">,</font>
    <font color="#008080">size_t</font>                                           order_up<font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>          atx<font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>          aty<font color="#990000">,</font>
    CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>                apx<font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>          apy<font color="#990000">)</font>
<font color="#FF0000">{</font>
    <i><font color="#9A1900">// q</font></i>
    <font color="#008080">size_t</font> q <font color="#990000">=</font> order_up <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// op, m</font></i>
    <font color="#008080">op_enum_t</font> op <font color="#990000">=</font> <b><font color="#000000">op_enum_t</font></b><font color="#990000">(</font> call_id <font color="#990000">);</font>
    <font color="#008080">size_t</font> n     <font color="#990000">=</font> select_x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font>
    <font color="#008080">size_t</font> m  <font color="#990000">=</font> n <font color="#990000">/</font> <font color="#993399">2</font><font color="#990000">;</font>
    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> <b><font color="#000000">is_unary</font></b><font color="#990000">(</font>op<font color="#990000">)</font> <font color="#990000">)</font>
        m <font color="#990000">=</font> n<font color="#990000">;</font>
    <b><font color="#000000">assert</font></b><font color="#990000">(</font> atx<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> q <font color="#990000">*</font> n <font color="#990000">);</font>
    <b><font color="#000000">assert</font></b><font color="#990000">(</font> aty<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> q <font color="#990000">*</font> m <font color="#990000">);</font>
    <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
    <b><font color="#0000FF">switch</font></b><font color="#990000">(</font>op<font color="#990000">)</font>
    <font color="#FF0000">{</font>
        <i><font color="#9A1900">// addition</font></i>
        <b><font color="#0000FF">case</font></b> add_enum<font color="#990000">:</font>
        <b><font color="#000000">reverse_add</font></b><font color="#990000">(</font>m<font color="#990000">,</font> q<font color="#990000">,</font> atx<font color="#990000">,</font> aty<font color="#990000">,</font> apx<font color="#990000">,</font> apy<font color="#990000">);</font>
        ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
        <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

        <i><font color="#9A1900">// subtraction</font></i>
        <b><font color="#0000FF">case</font></b> sub_enum<font color="#990000">:</font>
        <b><font color="#000000">reverse_sub</font></b><font color="#990000">(</font>m<font color="#990000">,</font> q<font color="#990000">,</font> atx<font color="#990000">,</font> aty<font color="#990000">,</font> apx<font color="#990000">,</font> apy<font color="#990000">);</font>
        ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
        <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

        <i><font color="#9A1900">// multiplication</font></i>
        <b><font color="#0000FF">case</font></b> mul_enum<font color="#990000">:</font>
        <b><font color="#000000">reverse_mul</font></b><font color="#990000">(</font>m<font color="#990000">,</font> q<font color="#990000">,</font> atx<font color="#990000">,</font> aty<font color="#990000">,</font> apx<font color="#990000">,</font> apy<font color="#990000">);</font>
        ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
        <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

        <i><font color="#9A1900">// division</font></i>
        <b><font color="#0000FF">case</font></b> div_enum<font color="#990000">:</font>
        <b><font color="#000000">reverse_div</font></b><font color="#990000">(</font>m<font color="#990000">,</font> q<font color="#990000">,</font> atx<font color="#990000">,</font> aty<font color="#990000">,</font> apx<font color="#990000">,</font> apy<font color="#990000">);</font>
        ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
        <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

        <i><font color="#9A1900">// unary minus</font></i>
        <b><font color="#0000FF">case</font></b> neg_enum<font color="#990000">:</font>
        <b><font color="#000000">reverse_neg</font></b><font color="#990000">(</font>m<font color="#990000">,</font> q<font color="#990000">,</font> atx<font color="#990000">,</font> aty<font color="#990000">,</font> apx<font color="#990000">,</font> apy<font color="#990000">);</font>
        ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
        <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

        <i><font color="#9A1900">// error</font></i>
        <b><font color="#0000FF">case</font></b> number_op_enum<font color="#990000">:</font>
        <b><font color="#000000">assert</font></b><font color="#990000">(</font><b><font color="#0000FF">false</font></b><font color="#990000">);</font>
        <b><font color="#0000FF">break</font></b><font color="#990000">;</font>
    <font color="#FF0000">}</font>
    <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font>
<font color="#FF0000">}</font> <i><font color="#9A1900">// END_CPPAD_NAMESPACE</font></i></tt></pre>

<hr>Input File: include/cppad/example/atomic_four/vector/reverse_op.hpp

</body>
</html>
