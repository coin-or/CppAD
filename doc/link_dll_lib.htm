<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Link a Dynamic Link Library</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Link a Dynamic Link Library">
<meta name="keywords" id="keywords" content=" link dynamic library syntax prototype dll_linker err_msg dll_file function_name fun_ptr example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_link_dll_lib_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="index_sort.cpp.htm" target="_top">Prev</a>
</td><td><a href="dll_lib.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>link_dll_lib</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_utility_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_link_dll_lib_htm.js'></script>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Prototype</option>
<option>dll_linker</option>
<option>err_msg</option>
<option>dll_file</option>
<option>function_name</option>
<option>fun_ptr</option>
<option>Example</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<b>This is old CppAD documentation:</b> Here is a link to its
<a href="http://coin-or.github.io/CppAD" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Link a Dynamic Link Library</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>#&nbsp;include&nbsp;&lt;cppad/utility/link_dll_lib.hpp&gt;<br>
</span></font></code>

<code><font color="blue"><span style='white-space: nowrap'>link_dll_lib&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>dll_linker</span></font></i><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>dll_file</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>err_msg</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>fun_ptr</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>dll_linker</span></font></i><font color="blue"><span style='white-space: nowrap'>(</span></font><i><font color="black"><span style='white-space: nowrap'>function_name</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>err_msg</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
<br>
<b><big><a name="Prototype" id="Prototype">Prototype</a></big></b>

<pre><tt>
    <b><font color="#000000">link_dll_lib</font></b><font color="#990000">(</font><b><font color="#0000FF">const</font></b> std<font color="#990000">::</font>string<font color="#990000">&amp;</font> dll_file<font color="#990000">,</font> std<font color="#990000">::</font>string<font color="#990000">&amp;</font> err_msg<font color="#990000">);</font>
    <font color="#990000">~</font><b><font color="#000000">link_dll_lib</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">);</font>
    <font color="#009900">void</font><font color="#990000">*</font> <b><font color="#0000FF">operator</font></b><font color="#990000">()</font>
    <font color="#990000">(</font><b><font color="#0000FF">const</font></b> std<font color="#990000">::</font>string<font color="#990000">&amp;</font> function_name<font color="#990000">,</font> std<font color="#990000">::</font>string<font color="#990000">&amp;</font> err_msg<font color="#990000">)</font> <b><font color="#0000FF">const</font></b><font color="#990000">;</font>    </tt></pre>
<br>
<b><big><a name="dll_linker" id="dll_linker">dll_linker</a></big></b>
<br>
Is the dynamic link object that holds an in memory version of the library,
It must not be deleted for as long as any 
<code><i><font color="black"><span style='white-space: nowrap'>fun_ptr</span></font></i></code>
 return
values is used.

<br>
<br>
<b><big><a name="err_msg" id="err_msg">err_msg</a></big></b>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>err_msg</span></font></i></code>
 is non-empty, it contains an error message
for the corresponding operation.

<br>
<br>
<b><big><a name="dll_file" id="dll_file">dll_file</a></big></b>
<br>
Is the file containing the dynamic link library.

<br>
<br>
<b><big><a name="function_name" id="function_name">function_name</a></big></b>
<br>
Is the name of an external entry point in the dll.

<br>
<br>
<b><big><a name="fun_ptr" id="fun_ptr">fun_ptr</a></big></b>
<br>
Is a <code><font color="blue">void*</font></code> version of a pointer the function corresponding to

<code><i><font color="black"><span style='white-space: nowrap'>function_name</span></font></i></code>
.


<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file <a href="dll_lib.cpp.htm" target="_top"><span style='white-space: nowrap'>dll_lib.cpp</span></a>
 contains an example and test of
<code><font color="blue">link_dll_lib</font></code>.


<hr>Input File: include/cppad/utility/link_dll_lib.hpp

</body>
</html>
