<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>dll_lib: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="dll_lib: Example and Test">
<meta name="keywords" id="keywords" content=" dll_lib: example test options source ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_dll_lib.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="link_dll_lib.htm" target="_top">Prev</a>
</td><td><a href="nan.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>utility</option>
<option>link_dll_lib</option>
<option>dll_lib.cpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_utility_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_link_dll_lib_htm.js'></script>
</td>
<td>dll_lib.cpp</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>options</option>
<option>Source</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@


<center><b><big><big>dll_lib: Example and Test</big></big></b></center>
<br>
<b><big><a name="options" id="options">options</a></big></b>
<br>
The following subsection of this example sets
<a href="create_dll_lib.htm#options" target="_top"><span style='white-space: nowrap'>options</span></a>
 that are different
from the default options:
<pre><tt>    <i><font color="#9A1900">// Example using options that are different from the default options</font></i>
    std<font color="#990000">::</font><font color="#008080">map&lt; std::string, std::string &gt;</font> options<font color="#990000">;</font>
<b><font color="#000080"># ifdef</font></b> _MSC_VER
    options<font color="#990000">[</font><font color="#FF0000">"compile"</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#FF0000">"cl /EHs /EHc /c /LD /Tc /O2"</font><font color="#990000">;</font>
<b><font color="#000080"># else</font></b>
    options<font color="#990000">[</font><font color="#FF0000">"compile"</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#FF0000">"gcc -c -fPIC -O2"</font><font color="#990000">;</font>
<b><font color="#000080"># endif</font></b></tt></pre>
<br>
<b><big><a name="Source" id="Source">Source</a></big></b>

<pre><tt>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;filesystem&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;fstream&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;vector&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;map&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/utility/create_dll_lib.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/utility/link_dll_lib.hpp&gt;</font>

<b><font color="#000080"># if</font></b> _WIN32
<b><font color="#000080"># define</font></b> DIR_SEP <font color="#FF0000">'</font><font color="#CC33CC">\\</font><font color="#FF0000">'</font>
<b><font color="#000080"># define</font></b> DLL_EXT <font color="#FF0000">".dll"</font>
<b><font color="#000080"># else</font></b>
<b><font color="#000080"># define</font></b> DIR_SEP <font color="#FF0000">'/'</font>
<b><font color="#000080"># define</font></b> DLL_EXT <font color="#FF0000">".so"</font>
<b><font color="#000080"># endif</font></b>

<i><font color="#9A1900">// CALL_CONVENTION, CALL_IMPORT</font></i>
<b><font color="#000080"># ifdef</font></b> _MSC_VER
<b><font color="#000080"># define</font></b> <font color="#008080">CALL_CONVENTION</font> <b><font color="#0000FF">__cdecl</font></b>
<b><font color="#000080"># define</font></b> <font color="#008080">CALL_IMPORT</font>     <b><font color="#0000FF">__declspec</font></b><font color="#990000">(</font>dllimport<font color="#990000">)</font>
<b><font color="#000080"># else</font></b>
<b><font color="#000080"># define</font></b> CALL_CONVENTION
<b><font color="#000080"># define</font></b> CALL_IMPORT
<b><font color="#000080"># endif</font></b>

<b><font color="#0000FF">namespace</font></b> <font color="#FF0000">{</font>
    <b><font color="#0000FF">extern</font></b> <font color="#FF0000">"C"</font>
        <b><font color="#0000FF">typedef</font></b> <font color="#008080">CALL_IMPORT</font> <font color="#009900">int</font> <font color="#990000">(</font><font color="#008080">CALL_CONVENTION</font> <font color="#990000">*</font>function_ptr<font color="#990000">)(</font><font color="#009900">int</font> x<font color="#990000">,</font> <font color="#009900">int</font> y<font color="#990000">);</font>
<font color="#FF0000">}</font>



<font color="#009900">bool</font> <b><font color="#000000">dll_lib</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>   <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// add_source</font></i>
    std<font color="#990000">::</font><font color="#008080">string</font> add_source <font color="#990000">=</font>
        <font color="#FF0000">"int add(int x, int y)</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font>
        <font color="#FF0000">"{   return x + y; }</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font>
    <font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// dll_entry_source</font></i>
    std<font color="#990000">::</font><font color="#008080">string</font> dll_entry_source <font color="#990000">=</font>
        <font color="#FF0000">"extern int add(int x, int y);"</font>
<b><font color="#000080"># ifdef</font></b> _MSC_VER
        <font color="#FF0000">"__declspec(dllexport) int _cdecl dll_entry(int x, int y)</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font>
<b><font color="#000080"># else</font></b>
        <font color="#FF0000">"int dll_entry(int x, int y)</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font>
<b><font color="#000080"># endif</font></b>
        <font color="#FF0000">"{   return add(x, y);}"</font>
    <font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// temp_dir</font></i>
    std<font color="#990000">::</font><font color="#008080">string</font> temp_dir <font color="#990000">=</font> std<font color="#990000">::</font>filesystem<font color="#990000">::</font><b><font color="#000000">temp_directory_path</font></b><font color="#990000">().</font><b><font color="#000000">string</font></b><font color="#990000">();</font>
    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> temp_dir<font color="#990000">.</font><b><font color="#000000">back</font></b><font color="#990000">()</font> <font color="#990000">!=</font> DIR_SEP <font color="#990000">)</font>
        temp_dir <font color="#990000">+=</font> DIR_SEP<font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// ofs</font></i>
    std<font color="#990000">::</font><font color="#008080">ofstream</font> ofs<font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// add_file</font></i>
    std<font color="#990000">::</font><font color="#008080">string</font> add_file <font color="#990000">=</font> temp_dir <font color="#990000">+</font> <font color="#FF0000">"add.c"</font><font color="#990000">;</font>
    ofs<font color="#990000">.</font><b><font color="#000000">open</font></b><font color="#990000">(</font>add_file<font color="#990000">.</font><b><font color="#000000">c_str</font></b><font color="#990000">(),</font> std<font color="#990000">::</font>ofstream<font color="#990000">::</font>out<font color="#990000">);</font>
    ofs <font color="#990000">&lt;&lt;</font> add_source<font color="#990000">;</font>
    ofs<font color="#990000">.</font><b><font color="#000000">close</font></b><font color="#990000">();</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// dll_entry_file</font></i>
    std<font color="#990000">::</font><font color="#008080">string</font> dll_entry_file <font color="#990000">=</font> temp_dir <font color="#990000">+</font> <font color="#FF0000">"dll_entry.c"</font><font color="#990000">;</font>
    ofs<font color="#990000">.</font><b><font color="#000000">open</font></b><font color="#990000">(</font>dll_entry_file<font color="#990000">.</font><b><font color="#000000">c_str</font></b><font color="#990000">(),</font> std<font color="#990000">::</font>ofstream<font color="#990000">::</font>out<font color="#990000">);</font>
    ofs <font color="#990000">&lt;&lt;</font> dll_entry_source<font color="#990000">;</font>
    ofs<font color="#990000">.</font><b><font color="#000000">close</font></b><font color="#990000">();</font>
    <i><font color="#9A1900">//</font></i>
<i><font color="#9A1900">// BEGIN_OPTIONS</font></i>
    <i><font color="#9A1900">// Example using options that are different from the default options</font></i>
    std<font color="#990000">::</font><font color="#008080">map&lt; std::string, std::string &gt;</font> options<font color="#990000">;</font>
<b><font color="#000080"># ifdef</font></b> _MSC_VER
    options<font color="#990000">[</font><font color="#FF0000">"compile"</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#FF0000">"cl /EHs /EHc /c /LD /Tc /O2"</font><font color="#990000">;</font>
<b><font color="#000080"># else</font></b>
    options<font color="#990000">[</font><font color="#FF0000">"compile"</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#FF0000">"gcc -c -fPIC -O2"</font><font color="#990000">;</font>
<b><font color="#000080"># endif</font></b>
<i><font color="#9A1900">// END_OPTIONS</font></i>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// dll_file</font></i>
    std<font color="#990000">::</font><font color="#008080">vector&lt; std::string &gt;</font> <b><font color="#000000">csrc_files</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">);</font>
    csrc_files<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> add_file<font color="#990000">;</font>
    csrc_files<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> dll_entry_file<font color="#990000">;</font>
    std<font color="#990000">::</font><font color="#008080">string</font> dll_file <font color="#990000">=</font> temp_dir <font color="#990000">+</font> <font color="#FF0000">"dll_entry"</font> <font color="#990000">+</font> DLL_EXT<font color="#990000">;</font>
    CppAD<font color="#990000">::</font><b><font color="#000000">create_dll_lib</font></b><font color="#990000">(</font>dll_file<font color="#990000">,</font> csrc_files<font color="#990000">,</font> options<font color="#990000">);</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// dll_linker</font></i>
    std<font color="#990000">::</font><font color="#008080">string</font> err_msg<font color="#990000">;</font>
    CppAD<font color="#990000">::</font><font color="#008080">link_dll_lib</font> <b><font color="#000000">dll_linker</font></b><font color="#990000">(</font>dll_file<font color="#990000">,</font> err_msg<font color="#990000">);</font>
    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> err_msg <font color="#990000">!=</font> <font color="#FF0000">""</font> <font color="#990000">)</font>
    <font color="#FF0000">{</font>   std<font color="#990000">::</font>cerr <font color="#990000">&lt;&lt;</font> <font color="#FF0000">"dll_lib error: "</font> <font color="#990000">&lt;&lt;</font> err_msg <font color="#990000">&lt;&lt;</font> <font color="#FF0000">"</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font>
        <b><font color="#0000FF">return</font></b> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// dll_entry</font></i>
    <font color="#009900">void</font><font color="#990000">*</font> vptr <font color="#990000">=</font> <b><font color="#000000">dll_linker</font></b><font color="#990000">(</font><font color="#FF0000">"dll_entry"</font><font color="#990000">,</font> err_msg<font color="#990000">);</font>
    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> err_msg <font color="#990000">!=</font> <font color="#FF0000">""</font> <font color="#990000">)</font>
    <font color="#FF0000">{</font>   std<font color="#990000">::</font>cerr <font color="#990000">&lt;&lt;</font> <font color="#FF0000">"dll_lib error: "</font> <font color="#990000">&lt;&lt;</font> err_msg <font color="#990000">&lt;&lt;</font> <font color="#FF0000">"</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font>
        <b><font color="#0000FF">return</font></b> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
    <font color="#FF0000">}</font>
    <font color="#008080">function_ptr</font> dll_entry <font color="#990000">=</font> <b><font color="#0000FF">reinterpret_cast</font></b><font color="#990000">&lt;</font>function_ptr<font color="#990000">&gt;(</font>vptr<font color="#990000">);</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// z = dll_entry(x, y)</font></i>
    <font color="#009900">int</font> x <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">,</font> y <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
    <font color="#009900">int</font> z <font color="#990000">=</font> <b><font color="#000000">dll_entry</font></b><font color="#990000">(</font>x<font color="#990000">,</font> y<font color="#990000">);</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// ok</font></i>
    ok <font color="#990000">&amp;=</font> z <font color="#990000">==</font> <font color="#990000">(</font>x <font color="#990000">+</font> y<font color="#990000">);</font>
    <i><font color="#9A1900">//</font></i>
    <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: example/utility/dll_lib.cpp

</body>
</html>
