<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Changes and Additions to CppAD During 2022</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Changes and Additions to CppAD During 2022">
<meta name="keywords" id="keywords" content=" changes additions to cppad during 2022 05-20 05-19 05-17 05-16 05-15 05-13 05-12 05-11 05-10 05-09 05-07 05-06 04-21 04-20 04-19 04-15 03-29 03-26 03-25 03-24 03-23 02-21 02-19 02-18 02-17 02-16 02-13 02-12 02-11 02-01 01-27 01-25 01-23 01-19 01-15 01-06 01-04 01-01 ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_whats_new_22_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="whats_new.htm" target="_top">Prev</a>
</td><td><a href="whats_new_21.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Appendix</option>
<option>whats_new</option>
<option>whats_new_22</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_appendix_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_whats_new_htm.js'></script>
</td>
<td>whats_new_22</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>05-20</option>
<option>05-19</option>
<option>05-17</option>
<option>05-16</option>
<option>05-15</option>
<option>05-13</option>
<option>05-12</option>
<option>05-11</option>
<option>05-10</option>
<option>05-09</option>
<option>05-07</option>
<option>05-06</option>
<option>04-21</option>
<option>04-20</option>
<option>04-19</option>
<option>04-15</option>
<option>03-29</option>
<option>03-26</option>
<option>03-25</option>
<option>03-24</option>
<option>03-23</option>
<option>02-21</option>
<option>02-19</option>
<option>02-18</option>
<option>02-17</option>
<option>02-16</option>
<option>02-13</option>
<option>02-12</option>
<option>02-11</option>
<option>02-01</option>
<option>01-27</option>
<option>01-25</option>
<option>01-23</option>
<option>01-19</option>
<option>01-15</option>
<option>01-06</option>
<option>01-04</option>
<option>01-01</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@


<center><b><big><big>Changes and Additions to CppAD During 2022</big></big></b></center>
<br>
<b><big><a name="05-20" id="05-20">05-20</a></big></b>
<br>
Merge in the pull_144 branch.
This fixed some problems with the windows visual studio build; see
the corresponding pull request.

<br>
<br>
<b><big><a name="05-19" id="05-19">05-19</a></big></b>

<ol type="1"><li>
The atomic four <code><font color="blue">base_lin_ode</font></code> function was changed to
<a href="atomic_four_lin_ode_base_solver.hpp.htm" target="_top"><span style='white-space: nowrap'>base_solver</span></a>
.
In addition, a maximum <a href="atomic_four_lin_ode.htm#step" target="_top"><span style='white-space: nowrap'>step</span></a>

size was added to this atomic linear ODE solver.
</li><li>

Fix setting of debug and release flags in
<code><font color="blue">test_more/debug_rel/CMakeLists.txt</font></code>.
</li></ol>


<br>
<br>
<b><big><a name="05-17" id="05-17">05-17</a></big></b>
<br>
The <a href="atomic_four_lin_ode_rev_depend.hpp.htm" target="_top"><span style='white-space: nowrap'>atomic_four_lin_ode_rev_depend.hpp</span></a>
 example was added.
In addition, remove the Under Construction headings from the
<a href="atomic_four_lin_ode.htm" target="_top"><span style='white-space: nowrap'>atomic_four_lin_ode</span></a>
 sections (it is ready for use).

<br>
<br>
<b><big><a name="05-16" id="05-16">05-16</a></big></b>

<ol type="1"><li>
The <a href="atomic_four_hes_sparsity.htm#ident_zero_x" target="_top"><span style='white-space: nowrap'>ident_zero_x</span></a>
 argument
was added to the atomic four Hessian sparsity callback.
The previous version of this callback still works but is deprecated.
</li><li>

Add <a href="var2par.htm" target="_top"><span style='white-space: nowrap'>Var2Par</span></a>
 set in the <code><font color="blue">cppad_eigen.hpp</font></code>
<a href="cppad_eigen.hpp.htm#std Definitions" target="_top"><span style='white-space: nowrap'>std&nbsp;Definitions</span></a>
 of the AD versions of
<code><font color="blue">isinf</font></code> and <code><font color="blue">isnan</font></code>.
</li><li>

Change the atomic four example Hessian sparsity callbacks to use the
<a href="atomic_four_hes_sparsity.htm#ident_zero_x" target="_top"><span style='white-space: nowrap'>ident_zero_x</span></a>
.
In the special case of <a href="atomic_four_norm_sq.cpp.htm" target="_top"><span style='white-space: nowrap'>atomic_four_norm_sq.cpp</span></a>
,
do not include 
<code><i><font color="black"><span style='white-space: nowrap'>ident_zero_x</span></font></i></code>
 and mention that this version
of the callback is deprecated.
</li></ol>


<br>
<br>
<b><big><a name="05-15" id="05-15">05-15</a></big></b>


<ol type="1"><li>
Merge in the pull_140 branch.
This extended CppAD <a href="base_limits.htm" target="_top"><span style='white-space: nowrap'>base_limits</span></a>
 and <a href="numeric_limits.htm" target="_top"><span style='white-space: nowrap'>numeric_limits</span></a>

to include <code><font color="blue">infinity()</font></code>.
In addition,  <code><font color="blue">cppad_eigen.hpp</font></code> added <code><font color="blue">isinf</font></code>
and <code><font color="blue">isnan</font></code> for AD types to the std namespace; see
<a href="cppad_eigen.hpp.htm#std Definitions" target="_top"><span style='white-space: nowrap'>std&nbsp;Definitions</span></a>
.

</li><li>

Fix a long standing bug in the <a href="for_hes_sparsity.htm" target="_top"><span style='white-space: nowrap'>for_hes_sparsity</span></a>
 routine.
For example,
the function called <code><font color="blue">case_seven</font></code> in
<code><font color="blue">test_more/general/hes_sparsity.cpp/</font></code> tests a case
where this bug occurred.

</li><li>

Add the <a href="atomic_four_lin_ode_hes_sparsity.hpp.htm" target="_top"><span style='white-space: nowrap'>atomic_four_lin_ode_hes_sparsity.hpp</span></a>
 example.

</li></ol>


<br>
<br>
<b><big><a name="05-13" id="05-13">05-13</a></big></b>
<br>
The <a href="code_gen_fun.htm#Examples" target="_top"><span style='white-space: nowrap'>code_gen_fun&nbsp;examples</span></a>
 were
not being built even when
<a href="cmake.htm#include_cppadcg" target="_top"><span style='white-space: nowrap'>include_cppadcg</span></a>

was specified on the cmake command line.
This has been fixed.

<br>
<br>
<b><big><a name="05-12" id="05-12">05-12</a></big></b>
<br>
The <a href="cmake.htm" target="_top"><span style='white-space: nowrap'>cmake</span></a>
 script <code><font color="blue">cmake/compile_source_test.cmake</font></code> was not
working properly on Darwin systems which resulted in the following warning:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;warning:&nbsp;'tmpnam'&nbsp;is&nbsp;deprecated:&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>...</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;file_name&nbsp;=&nbsp;tmpnam(&nbsp;nullptr&nbsp;);<br>
</span></font></code>
This has been fixed.


<br>
<br>
<b><big><a name="05-11" id="05-11">05-11</a></big></b>
<br>
A mathematical <a href="atomic_four_lin_ode_jac_sparsity.hpp.htm#Theory" target="_top"><span style='white-space: nowrap'>theory</span></a>

was added to the linear ODE Jacobian sparsity pattern example.
In addition, the corresponding code was changed to match the theory.
This may, or may not, have fixed some bugs in the previous version
of this routine.

<br>
<br>
<b><big><a name="05-10" id="05-10">05-10</a></big></b>
<br>
The <a href="atomic_four_jac_sparsity.htm#ident_zero_x" target="_top"><span style='white-space: nowrap'>ident_zero_x</span></a>
 argument
was added to the atomic four Jacobian sparsity callback.
The previous version of this callback still works but is deprecated.

<br>
<br>
<b><big><a name="05-09" id="05-09">05-09</a></big></b>

<ol type="1"><li>
Add a theory section to the linear ODE
<a href="atomic_four_lin_ode_for_type.hpp.htm#Theory" target="_top"><span style='white-space: nowrap'>for_type</span></a>
 section.
In addition more the linear ODE theory for forward and reverse mode to the
corresponding
<a href="atomic_four_lin_ode_forward.hpp.htm#Theory" target="_top"><span style='white-space: nowrap'>forward</span></a>
 and
<a href="atomic_four_lin_ode_reverse.hpp.htm#Theory" target="_top"><span style='white-space: nowrap'>reverse</span></a>
 sections.
</li><li>

Back out an incorrect change on 04-15 to the meaning of
<a href="atomic_four_jac_sparsity.htm#select_x" target="_top"><span style='white-space: nowrap'>select_x</span></a>
 and
<a href="atomic_four_jac_sparsity.htm#select_y" target="_top"><span style='white-space: nowrap'>select_y</span></a>
 in the
atomic four Jacobian sparsity documentation.
</li><li>

Add the specification that the atomic four
<a href="atomic_four_call.htm#for_type" target="_top"><span style='white-space: nowrap'>for_type</span></a>
 callback
will be called once for each atomic function call and before any other
of the callbacks for the atomic function call.
</li></ol>


<br>
<br>
<b><big><a name="05-07" id="05-07">05-07</a></big></b>
<br>
Add the <a href="base2vec_ad.cpp.htm" target="_top"><span style='white-space: nowrap'>base2vec_ad.cpp</span></a>
 example demonstrating that <a href="base2ad.htm" target="_top"><span style='white-space: nowrap'>base2ad</span></a>

does not convert <a href="vecad.htm" target="_top"><span style='white-space: nowrap'>VecAD</span></a>
 operations as might be expected.
Add a link to this example in both the base2ad and VecAD documentation
and a <a href="wish_list.htm#base2ad" target="_top"><span style='white-space: nowrap'>base2ad&nbsp;wish_list</span></a>
 item about this.

<br>
<br>
<b><big><a name="05-06" id="05-06">05-06</a></big></b>
<br>
There was a bug in combining the <a href="discrete.htm" target="_top"><span style='white-space: nowrap'>discrete</span></a>
 functions with the
<a href="base2ad.htm" target="_top"><span style='white-space: nowrap'>base2ad</span></a>
 operation.
To be specific, if a discrete function was used during the recording of

<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
 and 
<code><i><font color="black"><span style='white-space: nowrap'>af</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>f</span></font></i><font color="blue"><span style='white-space: nowrap'>.base2ad()</span></font></code>
, the following assert
would happen during forward mode calculations using the 
<code><i><font color="black"><span style='white-space: nowrap'>af</span></font></i></code>
 function:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;error&nbsp;from&nbsp;unknown&nbsp;source<br>
&nbsp;&nbsp;&nbsp;&nbsp;Error&nbsp;detected&nbsp;by&nbsp;false&nbsp;result&nbsp;for<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;index&nbsp;&lt;&nbsp;List().size()<br>
&nbsp;&nbsp;&nbsp;&nbsp;at&nbsp;line&nbsp;325&nbsp;in&nbsp;the&nbsp;file<br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>...</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;discrete.hpp<br>
</span></font></code>
This bug has been fixed.

<br>
<br>
<b><big><a name="04-21" id="04-21">04-21</a></big></b>

<ol type="1"><li>
Modify <a href="atomic_four_lin_ode_set.hpp.htm" target="_top"><span style='white-space: nowrap'>atomic_four_lin_ode_set.hpp</span></a>
 and
<a href="atomic_four_lin_ode_get.hpp.htm" target="_top"><span style='white-space: nowrap'>atomic_four_lin_ode_get.hpp</span></a>
 to re-use sparsity patterns
instead of creating a new one for every call.
This makes use of
<a href="sparse_rc.htm#set_row_major" target="_top"><span style='white-space: nowrap'>set_row_major</span></a>
 to speed up checking
for equality of sparsity patterns.
</li><li>

In the <a href="atomic_four_lin_ode_implement.htm" target="_top"><span style='white-space: nowrap'>atomic_four_lin_ode_implement</span></a>
 files, change <code><font color="blue">assert</font></code> to
<a href="cppad_assert.htm#Unknown" target="_top"><span style='white-space: nowrap'>CPPAD_ASSERT_UNKNOWN</span></a>
.
</li></ol>



<br>
<br>
<b><big><a name="04-20" id="04-20">04-20</a></big></b>
<br>
Add the
<a href="sparse_rc.htm#set_row_major" target="_top"><span style='white-space: nowrap'>set_row_major</span></a>
,
<a href="sparse_rc.htm#get_row_major" target="_top"><span style='white-space: nowrap'>get_row_major</span></a>
,
<a href="sparse_rc.htm#set_col_major" target="_top"><span style='white-space: nowrap'>set_col_major</span></a>
,
<a href="sparse_rc.htm#get_col_major" target="_top"><span style='white-space: nowrap'>get_col_major</span></a>
,
functions to the <code><font color="blue">sparse_rc</font></code> template class.

<br>
<br>
<b><big><a name="04-19" id="04-19">04-19</a></big></b>
<br>
Change the ODE solver in <a href="atomic_four_lin_ode.htm" target="_top"><span style='white-space: nowrap'>atomic_four_lin_ode</span></a>
 from
<a href="runge45.htm" target="_top"><span style='white-space: nowrap'>runge45</span></a>
 to <a href="rosen34.htm" target="_top"><span style='white-space: nowrap'>rosen34</span></a>
.

<br>
<br>
<b><big><a name="04-15" id="04-15">04-15</a></big></b>

<ol type="1"><li>
Add <a href="atomic_four_lin_ode.htm" target="_top"><span style='white-space: nowrap'>atomic_four_lin_ode</span></a>
 an example of making the solution
of an ODE an atomic operation.
As with the other atomic four examples, the 
<code><font color="blue"><span style='white-space: nowrap'>AD&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>

version of the derivative calculations a done using atomic operations.
</li><li>

Add the <a href="sparse_rc.htm#other.Equality" target="_top"><span style='white-space: nowrap'>equality</span></a>
 operator
to the sparsity pattern template class.
</li></ol>


<br>
<br>
<b><big><a name="03-29" id="03-29">03-29</a></big></b>
<br>
Add the <a href="atomic_four_lin_ode.htm" target="_top"><span style='white-space: nowrap'>atomic_four_lin_ode</span></a>
 example
which is not yet complete.

<br>
<br>
<b><big><a name="03-26" id="03-26">03-26</a></big></b>
<br>
Change <code><font color="blue">y(nx)</font></code> to <code><font color="blue">y(ny)</font></code> in
<a href="atomic_four_mat_mul_forward.cpp.htm" target="_top"><span style='white-space: nowrap'>atomic_four_mat_mul_forward.cpp</span></a>
.

<br>
<br>
<b><big><a name="03-25" id="03-25">03-25</a></big></b>

<ol type="1"><li>
Fix <a href="atomic_four_mat_mul.htm" target="_top"><span style='white-space: nowrap'>atomic_four_mat_mul</span></a>
 by changing it's base class
from <code><font color="blue">atomic_four&lt;double&gt;</font></code> to 
<code><font color="blue"><span style='white-space: nowrap'>atomic_four&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>
;
see <a href="atomic_four_mat_mul.hpp.htm" target="_top"><span style='white-space: nowrap'>atomic_four_mat_mul.hpp</span></a>
.
</li><li>

Remove under construction warning from <a href="atomic_four_mat_mul.htm" target="_top"><span style='white-space: nowrap'>atomic_four_mat_mul</span></a>
.
</li><li>

Change <code><font color="blue">atomic_vector</font></code> to <a href="atomic_four_vector.htm" target="_top"><span style='white-space: nowrap'>atomic_four_vector</span></a>
.
</li></ol>


<br>
<br>
<b><big><a name="03-24" id="03-24">03-24</a></big></b>
<br>
Fix <a href="atomic_four_vector.htm" target="_top"><span style='white-space: nowrap'>atomic_four_vector</span></a>
 by changing it's base class
from <code><font color="blue">atomic_four&lt;double&gt;</font></code> to 
<code><font color="blue"><span style='white-space: nowrap'>atomic_four&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>
.
Make some other similar corrections in <a href="atomic_four_vector.hpp.htm" target="_top"><span style='white-space: nowrap'>atomic_four_vector.hpp</span></a>
.

<br>
<br>
<b><big><a name="03-23" id="03-23">03-23</a></big></b>
<br>
Improve error detection and message when both
<a href="cmake.htm#cmake_build_type" target="_top"><span style='white-space: nowrap'>cmake_build_type</span></a>
 and
<a href="cmake.htm#cppad_debug_which" target="_top"><span style='white-space: nowrap'>cppad_debug_which</span></a>
 are chosen
during the install procedure.

<br>
<br>
<b><big><a name="02-21" id="02-21">02-21</a></big></b>
<br>
Extend the json graph representation to include
<a href="json_graph_op.htm#Atomic Functions.Atomic Four" target="_top"><span style='white-space: nowrap'>atomic&nbsp;four</span></a>
 functions.
For example, see <a href="json_atom4_op.cpp.htm" target="_top"><span style='white-space: nowrap'>json_atom4_op.cpp</span></a>
.

<br>
<br>
<b><big><a name="02-19" id="02-19">02-19</a></big></b>
<br>
Extend the C++ graph representation to include atomic four
<a href="graph_op_enum.htm#Atomic Function" target="_top"><span style='white-space: nowrap'>atomic&nbsp;functions</span></a>
.
For example, see <a href="graph_atom4_op.cpp.htm" target="_top"><span style='white-space: nowrap'>graph_atom4_op.cpp</span></a>
.

<br>
<br>
<b><big><a name="02-18" id="02-18">02-18</a></big></b>
<br>
Fixed the value of 
<code><i><font color="black"><span style='white-space: nowrap'>after</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>]</span></font></code>
 in the
<a href="cpp_ad_graph.htm#operator_arg.print_graph_op" target="_top"><span style='white-space: nowrap'>print_graph_op</span></a>
 documentation.
To be specific, <code><font color="blue">- 2</font></code> was changed to <code><font color="blue">- 1</font></code>.

<br>
<br>
<b><big><a name="02-17" id="02-17">02-17</a></big></b>
<br>
Add <code><font color="blue">identical_zero</font></code> to the possible
<a href="atomic_four_for_type.htm#ad_type" target="_top"><span style='white-space: nowrap'>ad_type</span></a>
 values in
the atomic four <code><font color="blue">for_type</font></code> function.
See <a href="atomic_four_vector_for_type.hpp.htm" target="_top"><span style='white-space: nowrap'>atomic_four_vector_for_type.hpp</span></a>
,
<a href="atomic_four_mat_mul_for_type.hpp.htm" target="_top"><span style='white-space: nowrap'>atomic_four_mat_mul_for_type.hpp</span></a>
, and
<a href="atomic_four_mat_mul_identical_zero.cpp.htm" target="_top"><span style='white-space: nowrap'>atomic_four_mat_mul_identical_zero.cpp</span></a>

for an examples using this feature.

<br>
<br>
<b><big><a name="02-16" id="02-16">02-16</a></big></b>
<br>
Use the <a href="atomic_four_norm_sq.cpp.htm" target="_top"><span style='white-space: nowrap'>atomic_four_norm_sq.cpp</span></a>
 overrides
as examples for the virtual functions in the <a href="atomic_four.htm" target="_top"><span style='white-space: nowrap'>atomic_four</span></a>

base class.

<br>
<br>
<b><big><a name="02-13" id="02-13">02-13</a></big></b>

<ol type="1"><li>
The <a href="atomic_four_mat_mul.htm" target="_top"><span style='white-space: nowrap'>atomic_four_mat_mul</span></a>
 example class was added.
</li><li>

The <a href="atomic_four_vector.htm" target="_top"><span style='white-space: nowrap'>atomic_four_vector</span></a>
 include path has changed to

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;include&nbsp;&lt;cppad/example/atomic_four/vector.hpp&gt;<br>
</span></font></code>
</li></ol>
<br>
<b><big><a name="02-12" id="02-12">02-12</a></big></b>
<br>
Add the <a href="sparse_rc.htm#push_back" target="_top"><span style='white-space: nowrap'>push_back</span></a>
 and
output stream (see <a href="sparse_rc.htm#os" target="_top"><span style='white-space: nowrap'>os</span></a>
) operations
to the <code><font color="blue">sparse_rc</font></code> template class.

<br>
<br>
<b><big><a name="02-11" id="02-11">02-11</a></big></b>
<br>
The value of <code><font color="blue">Libs:</font></code> in the <code><font color="blue">cppad.pc</font></code> <a href="pkgconfig.htm" target="_top"><span style='white-space: nowrap'>pkgconfig</span></a>
 file
was not being set correctly for some cases. This has been fixed.

<br>
<br>
<b><big><a name="02-01" id="02-01">02-01</a></big></b>
<br>
Fix a possible integer overflow in the <a href="to_string.cpp.htm" target="_top"><span style='white-space: nowrap'>to_string.cpp</span></a>
 example
(might cause the test to fail).

<br>
<br>
<b><big><a name="01-27" id="01-27">01-27</a></big></b>
<br>
Convert <a href="atomic_four_forward.cpp.htm" target="_top"><span style='white-space: nowrap'>atomic_four_forward.cpp</span></a>
 from an atomic_three
to an atomic_four example.

<br>
<br>
<b><big><a name="01-25" id="01-25">01-25</a></big></b>
<br>
Convert <a href="atomic_four_dynamic.cpp.htm" target="_top"><span style='white-space: nowrap'>atomic_four_dynamic.cpp</span></a>
 from an atomic_three
to an atomic_four example.

<br>
<br>
<b><big><a name="01-23" id="01-23">01-23</a></big></b>

<ol type="1"><li>
Add <a href="atomic_four.htm" target="_top"><span style='white-space: nowrap'>atomic_four</span></a>
, a simpler interface to atomic functions.
This has the optional <a href="atomic_four_call.htm#call_id" target="_top"><span style='white-space: nowrap'>call_id</span></a>
 argument
which can be used to attach extra information to an atomic function call.
</li><li>

The <a href="atomic_four_vector.htm" target="_top"><span style='white-space: nowrap'>atomic_four_vector</span></a>
 is a good example that uses

<code><i><font color="black"><span style='white-space: nowrap'>call_id</span></font></i></code>
 to specify which
element by element operator is being called; see
<a href="atomic_four_vector.htm#op" target="_top"><span style='white-space: nowrap'>call_id</span></a>
.
</li><li>

Remove element-by-element atomic operations from <a href="wish_list.htm" target="_top"><span style='white-space: nowrap'>wish_list</span></a>

(completed by the atomic_vector class).
</li></ol>



<br>
<br>
<b><big><a name="01-19" id="01-19">01-19</a></big></b>
<br>
Edit wish_list cppad_lib
<a href="wish_list.htm#cppad_lib.Requirement" target="_top"><span style='white-space: nowrap'>requirement</span></a>
 item.
Add an <a href="wish_list.htm#Optimization.Atomic Functions" target="_top"><span style='white-space: nowrap'>atomic&nbsp;functions</span></a>

item to the optimization wish list.

<br>
<br>
<b><big><a name="01-15" id="01-15">01-15</a></big></b>

<ol type="1"><li>
Fix some conversion warnings generated by the clang compiler
for the <a href="atomic_four_vector.htm" target="_top"><span style='white-space: nowrap'>atomic_four_vector</span></a>
 example.
</li><li>

Correct the order of p, q in function calls in
<a href="atomic_four_vector_forward_op.hpp.htm" target="_top"><span style='white-space: nowrap'>atomic_four_vector_forward_op.hpp</span></a>
.
</li></ol>


<br>
<br>
<b><big><a name="01-06" id="01-06">01-06</a></big></b>

<ol type="1"><li>
Fix the <code><font color="blue">[]</font></code> operator using CppAD vector
<a href="cppad_vector.htm#Iterators.operator[]" target="_top"><span style='white-space: nowrap'>iterators</span></a>
.
In addition it was extended to include <code><font color="blue">size_t</font></code> indices.
</li><li>

Add reverse mode to the <a href="atomic_four_vector.htm" target="_top"><span style='white-space: nowrap'>atomic_four_vector</span></a>
,  mul, div, operators
and fix some warning used <code><font color="blue">size_t</font></code> iterator indices.
</li></ol>


<br>
<br>
<b><big><a name="01-04" id="01-04">01-04</a></big></b>

<ol type="1"><li>
Add the neg operator to <a href="atomic_four_vector.htm" target="_top"><span style='white-space: nowrap'>atomic_four_vector</span></a>
.
</li><li>

Add reverse mode to the atomic_vector,  add, sub, and neg operators.
</li></ol>


<br>
<br>
<b><big><a name="01-01" id="01-01">01-01</a></big></b>
<br>
The <code><font color="blue">example/atomic_three/vector_op.cpp</font></code> example
(see <a href="atomic_four_vector.htm" target="_top"><span style='white-space: nowrap'>atomic_four_vector</span></a>
) was split into multiple files and moved into the
<code><font color="blue">example/atomic_vector</font></code> directory.


<hr>Input File: omh/appendix/whats_new/22.omh

</body>
</html>
