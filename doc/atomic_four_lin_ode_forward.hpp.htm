<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Atomic Linear ODE Forward Mode: Example Implementation</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Atomic Linear ODE Forward Mode: Example Implementation">
<meta name="keywords" id="keywords" content=" atomic linear ode forward mode: example implementation purpose theory source ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_atomic_four_lin_ode_forward.hpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="atomic_four_lin_ode_for_type.hpp.htm" target="_top">Prev</a>
</td><td><a href="atomic_four_lin_ode_reverse.hpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>AD</option>
<option>ADValued</option>
<option>atomic</option>
<option>atomic_four</option>
<option>atomic_four_example</option>
<option>atomic_four_lin_ode</option>
<option>atomic_four_lin_ode_implement</option>
<option>atomic_four_lin_ode_forward.hpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_four_example_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_four_lin_ode_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_four_lin_ode_implement_htm.js'></script>
</td>
<td>atomic_four_lin_ode_forward.hpp</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Purpose</option>
<option>Theory</option>
<option>Source</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<center><b><big><big>Atomic Linear ODE Forward Mode: Example Implementation</big></big></b></center>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
The <code><font color="blue">forward</font></code> routine overrides the virtual functions
used by the atomic_four base; see
<a href="atomic_four_forward.htm" target="_top"><span style='white-space: nowrap'>forward</span></a>
.

<br>
<br>
<b><big><a name="Theory" id="Theory">Theory</a></big></b>
<br>
Suppose we are given Taylor coefficients
<small>@(@
x^0
@)@</small>, <small>@(@
x^1
@)@</small>, for
<a href="atomic_four_lin_ode.htm#x" target="_top"><span style='white-space: nowrap'>x</span></a>
.
The zero order Taylor coefficient for
<a href="atomic_four_lin_ode.htm#z(t, x)" target="_top"><span style='white-space: nowrap'>z(t,&nbsp;x)</span></a>
 solves
the following initial value ODE:
<small>@[@

    z_t^0 (t) = A^0 z(t) \W{,} z^0 (0) = b^0

@]@</small>
Note that <small>@(@
A^0
@)@</small> and <small>@(@
b^0
@)@</small>
are just certain components of <small>@(@
x^0
@)@</small>; see
<a href="atomic_four_lin_ode.htm#x.A(x)" target="_top"><span style='white-space: nowrap'>A(x)</span></a>
 and
<a href="atomic_four_lin_ode.htm#x.b(x)" target="_top"><span style='white-space: nowrap'>b(x)</span></a>
.
The first order Taylor coefficient for <small>@(@
z(t, x)
@)@</small> solves
the following initial value ODE:
<small>@[@

    z_t^1 (t)
    =
    A^0 z^1 (t) + A^1 z^0 (t) \W{,} z^1 (0) = b^1

@]@</small>
Note that <small>@(@
A^1
@)@</small> and <small>@(@
c^1
@)@</small>
are just certain components of <small>@(@
x^1
@)@</small>.
We can solve for <small>@(@
z^1 (t)
@)@</small> using the following extended
initial value ODE:
<small>@[@

\left[ \begin{array}{c}
z^0_t (t, x) \\
z^1_t (t, x)
\end{array} \right]
=
\left[ \begin{array}{cc}
A^0 & 0   \\
A^1 & A^0
\end{array} \right]
\left[ \begin{array}{c}
z^0 (t, x) \\
z^1 (t, x)
\end{array} \right]
\; , \;
\left[ \begin{array}{c}
z^0 (0, x) \\
z^1 (0, x)
\end{array} \right]
=
\left[ \begin{array}{c}
b^0 \\
b^1
\end{array} \right]

@]@</small>

<br>
<br>
<b><big><a name="Source" id="Source">Source</a></big></b>

<pre><tt>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/example/atomic_four/lin_ode/lin_ode.hpp&gt;</font>

<b><font color="#0000FF">namespace</font></b> CppAD <font color="#FF0000">{</font> <i><font color="#9A1900">// BEGIN_CPPAD_NAMESPACE</font></i>
<i><font color="#9A1900">//</font></i>
<i><font color="#9A1900">// forward override for Base atomic linear ODE</font></i>
<b><font color="#0000FF">template</font></b> <font color="#990000">&lt;</font><b><font color="#0000FF">class</font></b> <font color="#008080">Base</font><font color="#990000">&gt;</font>
<font color="#009900">bool</font> atomic_lin_ode<font color="#990000">&lt;</font>Base<font color="#990000">&gt;::</font><b><font color="#000000">forward</font></b><font color="#990000">(</font>
    <font color="#008080">size_t</font>                                     call_id     <font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font>                 select_y    <font color="#990000">,</font>
    <font color="#008080">size_t</font>                                     order_low   <font color="#990000">,</font>
    <font color="#008080">size_t</font>                                     order_up    <font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                 taylor_x    <font color="#990000">,</font>
    CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>                       taylor_y    <font color="#990000">)</font>
<font color="#FF0000">{</font>
    <i><font color="#9A1900">// order_up</font></i>
    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> order_up <font color="#990000">&gt;</font> <font color="#993399">1</font> <font color="#990000">)</font>
        <b><font color="#0000FF">return</font></b> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// r, pattern, transpose, nnz</font></i>
    <font color="#008080">Base</font>      r<font color="#990000">;</font>
    <font color="#008080">Base</font>      step<font color="#990000">;</font>
    <font color="#008080">sparse_rc</font> pattern<font color="#990000">;</font>
    <font color="#009900">bool</font>      transpose<font color="#990000">;</font>
    <b><font color="#000000">get</font></b><font color="#990000">(</font>call_id<font color="#990000">,</font> r<font color="#990000">,</font> step<font color="#990000">,</font> pattern<font color="#990000">,</font> transpose<font color="#990000">);</font>
    <font color="#008080">size_t</font> nnz <font color="#990000">=</font> pattern<font color="#990000">.</font><b><font color="#000000">nnz</font></b><font color="#990000">();</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// q</font></i>
    <font color="#008080">size_t</font> q <font color="#990000">=</font> order_up <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// m</font></i>
    <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> taylor_y<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">%</font> q <font color="#990000">==</font> <font color="#993399">0</font> <font color="#990000">);</font>
    <font color="#008080">size_t</font> m <font color="#990000">=</font> taylor_y<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">/</font> q<font color="#990000">;</font>
    <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> pattern<font color="#990000">.</font><b><font color="#000000">nr</font></b><font color="#990000">()</font> <font color="#990000">==</font> m <font color="#990000">);</font>
    <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> pattern<font color="#990000">.</font><b><font color="#000000">nc</font></b><font color="#990000">()</font> <font color="#990000">==</font> m <font color="#990000">);</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// taylor_x</font></i>
    <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> taylor_x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#990000">(</font>nnz <font color="#990000">+</font> m<font color="#990000">)</font> <font color="#990000">*</font> q <font color="#990000">);</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// taylor_y</font></i>
    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> order_up <font color="#990000">==</font> <font color="#993399">0</font> <font color="#990000">)</font>
        <b><font color="#000000">base_solver</font></b><font color="#990000">(</font>r<font color="#990000">,</font> step<font color="#990000">,</font> pattern<font color="#990000">,</font> transpose<font color="#990000">,</font> taylor_x<font color="#990000">,</font> taylor_y<font color="#990000">);</font>
    <b><font color="#0000FF">else</font></b>
    <font color="#FF0000">{</font>   <i><font color="#9A1900">// M</font></i>
        <font color="#008080">size_t</font> M <font color="#990000">=</font> <font color="#993399">2</font> <font color="#990000">*</font> m<font color="#990000">;</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// Pattern, X</font></i>
        <font color="#008080">size_t</font> Nr  <font color="#990000">=</font> M<font color="#990000">;</font>
        <font color="#008080">size_t</font> Nc  <font color="#990000">=</font> M<font color="#990000">;</font>
        <font color="#008080">size_t</font> Nnz <font color="#990000">=</font> <font color="#993399">3</font> <font color="#990000">*</font> nnz<font color="#990000">;</font>
        <font color="#008080">sparse_rc</font>  <b><font color="#000000">Pattern</font></b><font color="#990000">(</font>Nr<font color="#990000">,</font> Nc<font color="#990000">,</font> Nnz<font color="#990000">);</font>
        CppAD<font color="#990000">::</font><font color="#008080">vector&lt;Base&gt;</font> <b><font color="#000000">X</font></b><font color="#990000">(</font>Nnz <font color="#990000">+</font> M<font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> nnz<font color="#990000">;</font> <font color="#990000">++</font>k<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <font color="#008080">size_t</font> i <font color="#990000">=</font> pattern<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()[</font>k<font color="#990000">];</font>
            <font color="#008080">size_t</font> j <font color="#990000">=</font> pattern<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">()[</font>k<font color="#990000">];</font>
            <b><font color="#0000FF">if</font></b><font color="#990000">(</font> transpose <font color="#990000">)</font>
                std<font color="#990000">::</font><b><font color="#000000">swap</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">);</font>
            <i><font color="#9A1900">//</font></i>
            <i><font color="#9A1900">// A^0_ij</font></i>
            <font color="#008080">Base</font> A0ij <font color="#990000">=</font> taylor_x<font color="#990000">[</font>k <font color="#990000">*</font> q <font color="#990000">+</font> <font color="#993399">0</font><font color="#990000">];</font>
            <i><font color="#9A1900">//</font></i>
            <i><font color="#9A1900">// A^1_ij</font></i>
            <font color="#008080">Base</font> A1ij <font color="#990000">=</font> taylor_x<font color="#990000">[</font>k <font color="#990000">*</font> q <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">];</font>
            <i><font color="#9A1900">//</font></i>
            <i><font color="#9A1900">// upper diagonal</font></i>
            Pattern<font color="#990000">.</font><b><font color="#000000">set</font></b><font color="#990000">(</font><font color="#993399">3</font> <font color="#990000">*</font> k <font color="#990000">+</font> <font color="#993399">0</font><font color="#990000">,</font> i<font color="#990000">,</font> j<font color="#990000">);</font>
            X<font color="#990000">[</font><font color="#993399">3</font> <font color="#990000">*</font> k <font color="#990000">+</font> <font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> A0ij<font color="#990000">;</font>
            <i><font color="#9A1900">//</font></i>
            <i><font color="#9A1900">// lower left</font></i>
            Pattern<font color="#990000">.</font><b><font color="#000000">set</font></b><font color="#990000">(</font><font color="#993399">3</font> <font color="#990000">*</font> k <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">,</font> m <font color="#990000">+</font> i<font color="#990000">,</font> j<font color="#990000">);</font>
            X<font color="#990000">[</font><font color="#993399">3</font> <font color="#990000">*</font> k <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> A1ij<font color="#990000">;</font>
            <i><font color="#9A1900">//</font></i>
            <i><font color="#9A1900">// lower diagonal</font></i>
            Pattern<font color="#990000">.</font><b><font color="#000000">set</font></b><font color="#990000">(</font><font color="#993399">3</font> <font color="#990000">*</font> k <font color="#990000">+</font> <font color="#993399">2</font><font color="#990000">,</font> m <font color="#990000">+</font> i<font color="#990000">,</font> m <font color="#990000">+</font> j<font color="#990000">);</font>
            X<font color="#990000">[</font><font color="#993399">3</font> <font color="#990000">*</font> k <font color="#990000">+</font> <font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">=</font> A0ij<font color="#990000">;</font>
        <font color="#FF0000">}</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <i><font color="#9A1900">// b^0_i</font></i>
            X<font color="#990000">[</font>Nnz <font color="#990000">+</font> i<font color="#990000">]</font>     <font color="#990000">=</font> taylor_x<font color="#990000">[</font> <font color="#990000">(</font>nnz <font color="#990000">+</font> i<font color="#990000">)</font> <font color="#990000">*</font> q <font color="#990000">+</font> <font color="#993399">0</font> <font color="#990000">];</font>
            <i><font color="#9A1900">// b^1_i</font></i>
            X<font color="#990000">[</font>Nnz <font color="#990000">+</font> m <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">=</font> taylor_x<font color="#990000">[</font> <font color="#990000">(</font>nnz <font color="#990000">+</font> i<font color="#990000">)</font> <font color="#990000">*</font> q <font color="#990000">+</font> <font color="#993399">1</font> <font color="#990000">];</font>
        <font color="#FF0000">}</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// Y</font></i>
        CppAD<font color="#990000">::</font><font color="#008080">vector&lt;Base&gt;</font> <b><font color="#000000">Y</font></b><font color="#990000">(</font>M<font color="#990000">);</font>
        <font color="#009900">bool</font> Transpose <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
        <b><font color="#000000">base_solver</font></b><font color="#990000">(</font>r<font color="#990000">,</font> step<font color="#990000">,</font> Pattern<font color="#990000">,</font> Transpose<font color="#990000">,</font> X<font color="#990000">,</font> Y<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// taylor_y</font></i>
        <b><font color="#0000FF">if</font></b><font color="#990000">(</font> order_low <font color="#990000">==</font> <font color="#993399">0</font> <font color="#990000">)</font>
        <font color="#FF0000">{</font>   <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
                taylor_y<font color="#990000">[</font>i <font color="#990000">*</font> q <font color="#990000">+</font> <font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> Y<font color="#990000">[</font>i<font color="#990000">];</font>
        <font color="#FF0000">}</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
            taylor_y<font color="#990000">[</font>i <font color="#990000">*</font> q <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> Y<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">];</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">//</font></i>
    <b><font color="#0000FF">return</font></b> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
<font color="#FF0000">}</font>
<i><font color="#9A1900">//</font></i>
<i><font color="#9A1900">// forward override for AD&lt;Base&gt; atomic linear ODE</font></i>
<b><font color="#0000FF">template</font></b> <font color="#990000">&lt;</font><b><font color="#0000FF">class</font></b> <font color="#008080">Base</font><font color="#990000">&gt;</font>
<font color="#009900">bool</font> atomic_lin_ode<font color="#990000">&lt;</font>Base<font color="#990000">&gt;::</font><b><font color="#000000">forward</font></b><font color="#990000">(</font>
    <font color="#008080">size_t</font>                                     call_id     <font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">bool</font><font color="#990000">&gt;&amp;</font>                 select_y    <font color="#990000">,</font>
    <font color="#008080">size_t</font>                                     order_low   <font color="#990000">,</font>
    <font color="#008080">size_t</font>                                     order_up    <font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>    ataylor_x   <font color="#990000">,</font>
    CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font> CppAD<font color="#990000">::</font>AD<font color="#990000">&lt;</font>Base<font color="#990000">&gt;</font> <font color="#990000">&gt;&amp;</font>          ataylor_y   <font color="#990000">)</font>
<font color="#FF0000">{</font>   <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// aBase</font></i>
    <b><font color="#0000FF">typedef</font></b> CppAD<font color="#990000">::</font><font color="#008080">AD&lt;Base&gt;</font> aBase<font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// order_up</font></i>
    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> order_up <font color="#990000">&gt;</font> <font color="#993399">1</font> <font color="#990000">)</font>
        <b><font color="#0000FF">return</font></b> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// r, nnz</font></i>
    <font color="#008080">Base</font>            r<font color="#990000">;</font>
    <font color="#008080">Base</font>            step<font color="#990000">;</font>
    <font color="#008080">sparse_rc</font>       pattern<font color="#990000">;</font>
    <font color="#009900">bool</font>            transpose<font color="#990000">;</font>
    <b><font color="#000000">get</font></b><font color="#990000">(</font>call_id<font color="#990000">,</font> r<font color="#990000">,</font> step<font color="#990000">,</font> pattern<font color="#990000">,</font> transpose<font color="#990000">);</font>
    <font color="#008080">size_t</font> nnz <font color="#990000">=</font> pattern<font color="#990000">.</font><b><font color="#000000">nnz</font></b><font color="#990000">();</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// q</font></i>
    <font color="#008080">size_t</font> q <font color="#990000">=</font> order_up <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// m</font></i>
    <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> ataylor_y<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">%</font> q <font color="#990000">==</font> <font color="#993399">0</font> <font color="#990000">);</font>
    <font color="#008080">size_t</font> m <font color="#990000">=</font> ataylor_y<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">/</font> q<font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// ataylor_x</font></i>
    <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> ataylor_x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#990000">(</font>nnz <font color="#990000">+</font> m<font color="#990000">)</font> <font color="#990000">*</font> q <font color="#990000">);</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// ataylor_y</font></i>
    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> order_up <font color="#990000">==</font> <font color="#993399">0</font> <font color="#990000">)</font>
        <font color="#990000">(*</font><b><font color="#0000FF">this</font></b><font color="#990000">)(</font>call_id<font color="#990000">,</font> ataylor_x<font color="#990000">,</font> ataylor_y<font color="#990000">);</font>
    <b><font color="#0000FF">else</font></b>
    <font color="#FF0000">{</font>   <i><font color="#9A1900">// M</font></i>
        <font color="#008080">size_t</font> M <font color="#990000">=</font> <font color="#993399">2</font> <font color="#990000">*</font> m<font color="#990000">;</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// Pattern, aX</font></i>
        <font color="#008080">size_t</font> Nr  <font color="#990000">=</font> M<font color="#990000">;</font>
        <font color="#008080">size_t</font> Nc  <font color="#990000">=</font> M<font color="#990000">;</font>
        <font color="#008080">size_t</font> Nnz <font color="#990000">=</font> <font color="#993399">3</font> <font color="#990000">*</font> nnz<font color="#990000">;</font>
        <font color="#008080">sparse_rc</font>  <b><font color="#000000">Pattern</font></b><font color="#990000">(</font>Nr<font color="#990000">,</font> Nc<font color="#990000">,</font> Nnz<font color="#990000">);</font>
        CppAD<font color="#990000">::</font><font color="#008080">vector&lt; CppAD::AD&lt;Base&gt; &gt;</font> <b><font color="#000000">aX</font></b><font color="#990000">(</font>Nnz <font color="#990000">+</font> M<font color="#990000">);</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> nnz<font color="#990000">;</font> <font color="#990000">++</font>k<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <font color="#008080">size_t</font> i <font color="#990000">=</font> pattern<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()[</font>k<font color="#990000">];</font>
            <font color="#008080">size_t</font> j <font color="#990000">=</font> pattern<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">()[</font>k<font color="#990000">];</font>
            <b><font color="#0000FF">if</font></b><font color="#990000">(</font> transpose <font color="#990000">)</font>
                std<font color="#990000">::</font><b><font color="#000000">swap</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">);</font>
            <i><font color="#9A1900">//</font></i>
            <i><font color="#9A1900">// A^0_ij</font></i>
            CppAD<font color="#990000">::</font><font color="#008080">AD&lt;Base&gt;</font> aA0ij <font color="#990000">=</font> ataylor_x<font color="#990000">[</font>k <font color="#990000">*</font> q <font color="#990000">+</font> <font color="#993399">0</font><font color="#990000">];</font>
            <i><font color="#9A1900">//</font></i>
            <i><font color="#9A1900">// A^1_ij</font></i>
            CppAD<font color="#990000">::</font><font color="#008080">AD&lt;Base&gt;</font> aA1ij <font color="#990000">=</font> ataylor_x<font color="#990000">[</font>k <font color="#990000">*</font> q <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">];</font>
            <i><font color="#9A1900">//</font></i>
            <i><font color="#9A1900">// upper diagonal</font></i>
            Pattern<font color="#990000">.</font><b><font color="#000000">set</font></b><font color="#990000">(</font><font color="#993399">3</font> <font color="#990000">*</font> k <font color="#990000">+</font> <font color="#993399">0</font><font color="#990000">,</font> i<font color="#990000">,</font> j<font color="#990000">);</font>
            aX<font color="#990000">[</font><font color="#993399">3</font> <font color="#990000">*</font> k <font color="#990000">+</font> <font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> aA0ij<font color="#990000">;</font>
            <i><font color="#9A1900">//</font></i>
            <i><font color="#9A1900">// lower left</font></i>
            Pattern<font color="#990000">.</font><b><font color="#000000">set</font></b><font color="#990000">(</font><font color="#993399">3</font> <font color="#990000">*</font> k <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">,</font> m <font color="#990000">+</font> i<font color="#990000">,</font> j<font color="#990000">);</font>
            aX<font color="#990000">[</font><font color="#993399">3</font> <font color="#990000">*</font> k <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> aA1ij<font color="#990000">;</font>
            <i><font color="#9A1900">//</font></i>
            <i><font color="#9A1900">// lower diagonal</font></i>
            Pattern<font color="#990000">.</font><b><font color="#000000">set</font></b><font color="#990000">(</font><font color="#993399">3</font> <font color="#990000">*</font> k <font color="#990000">+</font> <font color="#993399">2</font><font color="#990000">,</font> m <font color="#990000">+</font> i<font color="#990000">,</font> m <font color="#990000">+</font> j<font color="#990000">);</font>
            aX<font color="#990000">[</font><font color="#993399">3</font> <font color="#990000">*</font> k <font color="#990000">+</font> <font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">=</font> aA0ij<font color="#990000">;</font>
            <i><font color="#9A1900">//</font></i>
        <font color="#FF0000">}</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        <font color="#FF0000">{</font>   <i><font color="#9A1900">// b^0_i</font></i>
            aX<font color="#990000">[</font>Nnz <font color="#990000">+</font> i<font color="#990000">]</font>     <font color="#990000">=</font> ataylor_x<font color="#990000">[</font> <font color="#990000">(</font>nnz <font color="#990000">+</font> i<font color="#990000">)</font> <font color="#990000">*</font> q <font color="#990000">+</font> <font color="#993399">0</font> <font color="#990000">];</font>
            <i><font color="#9A1900">// b^1_i</font></i>
            aX<font color="#990000">[</font>Nnz <font color="#990000">+</font> m <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">=</font> ataylor_x<font color="#990000">[</font> <font color="#990000">(</font>nnz <font color="#990000">+</font> i<font color="#990000">)</font> <font color="#990000">*</font> q <font color="#990000">+</font> <font color="#993399">1</font> <font color="#990000">];</font>
        <font color="#FF0000">}</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// call_id_2</font></i>
        <font color="#009900">bool</font> Transpose <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
        <font color="#008080">size_t</font> call_id_2 <font color="#990000">=</font> <b><font color="#000000">set</font></b><font color="#990000">(</font>r<font color="#990000">,</font> step<font color="#990000">,</font> Pattern<font color="#990000">,</font> Transpose<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// aY</font></i>
        CppAD<font color="#990000">::</font><font color="#008080">vector&lt;aBase&gt;</font> <b><font color="#000000">aY</font></b><font color="#990000">(</font>M<font color="#990000">);</font>
        <font color="#990000">(*</font><b><font color="#0000FF">this</font></b><font color="#990000">)(</font>call_id_2<font color="#990000">,</font> aX<font color="#990000">,</font> aY<font color="#990000">);</font>
        <i><font color="#9A1900">//</font></i>
        <i><font color="#9A1900">// ataylor_y</font></i>
        <b><font color="#0000FF">if</font></b><font color="#990000">(</font> order_low <font color="#990000">==</font> <font color="#993399">0</font> <font color="#990000">)</font>
        <font color="#FF0000">{</font>   <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
                ataylor_y<font color="#990000">[</font>i <font color="#990000">*</font> q <font color="#990000">+</font> <font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> aY<font color="#990000">[</font>i<font color="#990000">];</font>
        <font color="#FF0000">}</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
            ataylor_y<font color="#990000">[</font>i <font color="#990000">*</font> q <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> aY<font color="#990000">[</font>m <font color="#990000">+</font> i<font color="#990000">];</font>
    <font color="#FF0000">}</font>
    <i><font color="#9A1900">//</font></i>
    <b><font color="#0000FF">return</font></b> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
<font color="#FF0000">}</font>
<font color="#FF0000">}</font> <i><font color="#9A1900">// END_CPPAD_NAMESPACE</font></i></tt></pre>

<hr>Input File: include/cppad/example/atomic_four/lin_ode/forward.hpp

</body>
</html>
