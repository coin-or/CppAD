<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Evaluate a Function Defined in Terms of an ODE</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Evaluate a Function Defined in Terms of an ODE">
<meta name="keywords" id="keywords" content=" evaluate function defined terms ode syntax purpose inclusion float operation sequence fabs x p == 0 = 1 fp gradient example source code ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_ode_evaluate_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="mat_sum_sq.hpp.htm" target="_top">Prev</a>
</td><td><a href="ode_evaluate.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>speed</option>
<option>speed_utility</option>
<option>ode_evaluate</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_speed_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_speed_utility_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_ode_evaluate_htm.js'></script>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>Inclusion</option>
<option>Float</option>
<option>---..Operation Sequence</option>
<option>---..fabs</option>
<option>x</option>
<option>p</option>
<option>---..p == 0</option>
<option>---..p = 1</option>
<option>fp</option>
<option>---..Function</option>
<option>---..Gradient</option>
<option>Example</option>
<option>Source Code</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@



<b>This is old CppAD documentation:</b> Here is a link to its
<a href="http://coin-or.github.io/CppAD" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Evaluate a Function Defined in Terms of an ODE</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>#&nbsp;include&nbsp;&lt;cppad/speed/ode_evaluate.hpp&gt;<br>
</span></font></code>

<code><font color="blue"><span style='white-space: nowrap'>ode_evaluate(</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>p</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>fp</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
This routine evaluates a function <small>@(@
f : \B{R}^n \rightarrow \B{R}^n
@)@</small>
defined by
<small>@[@

    f(x) = y(x, 1)

@]@</small>
where <small>@(@
y(x, t)
@)@</small> solves the ordinary differential equation
<small>@[@

\begin{array}{rcl}
    y(x, 0)              & = & x
    \\
    \partial_t y (x, t ) & = & g[ y(x,t) , t ]
\end{array}

@]@</small>
where <small>@(@
g : \B{R}^n \times \B{R} \rightarrow \B{R}^n
@)@</small>
is an unspecified function.

<br>
<br>
<b><big><a name="Inclusion" id="Inclusion">Inclusion</a></big></b>
<br>
The template function <code><font color="blue">ode_evaluate</font></code>
is defined in the <code><font color="blue">CppAD</font></code> namespace by including
the file <code><font color="blue">cppad/speed/ode_evaluate.hpp</font></code>
(relative to the CppAD distribution directory).

<br>
<br>
<b><big><a name="Float" id="Float">Float</a></big></b>


<br>
<br>
<big><a name="Float.Operation Sequence" id="Float.Operation Sequence">Operation Sequence</a></big>
<br>
The type 
<code><i><font color="black"><span style='white-space: nowrap'>Float</span></font></i></code>
 must be a <a href="numerictype.htm" target="_top"><span style='white-space: nowrap'>NumericType</span></a>
.
The 
<code><i><font color="black"><span style='white-space: nowrap'>Float</span></font></i></code>

<a href="glossary.htm#Operation.Sequence" target="_top"><span style='white-space: nowrap'>operation&nbsp;sequence</span></a>

for this routine does not depend on the value of the argument 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
,
hence it does not need to be retaped for each value of <small>@(@
x
@)@</small>.

<br>
<br>
<big><a name="Float.fabs" id="Float.fabs">fabs</a></big>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>y</span></font></i></code>
 and 
<code><i><font color="black"><span style='white-space: nowrap'>z</span></font></i></code>
 are 
<code><i><font color="black"><span style='white-space: nowrap'>Float</span></font></i></code>
 objects, the syntax

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;fabs(</span></font><i><font color="black"><span style='white-space: nowrap'>z</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
must be supported. Note that it does not matter if the operation
sequence for <code><font color="blue">fabs</font></code> depends on 
<code><i><font color="black"><span style='white-space: nowrap'>z</span></font></i></code>
 because the
corresponding results are not actually used by <code><font color="blue">ode_evaluate</font></code>;
see <code><font color="blue">fabs</font></code> in <a href="runge45.htm#Scalar.fabs" target="_top"><span style='white-space: nowrap'>Runge45</span></a>
.

<br>
<br>
<b><big><a name="x" id="x">x</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Float</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It contains he argument value for which the function,
or its derivative, is being evaluated.
The value <small>@(@
n
@)@</small> is determined by the size of the vector 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
.

<br>
<br>
<b><big><a name="p" id="p">p</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>p</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>p</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
<br>
<big><a name="p.p == 0" id="p.p == 0">p == 0</a></big>
<br>
In this case a numerical method is used to solve the ode
and obtain an accurate approximation for <small>@(@
y(x, 1)
@)@</small>.
This numerical method has a fixed
that does not depend on 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
.

<br>
<br>
<big><a name="p.p = 1" id="p.p = 1">p = 1</a></big>
<br>
In this case an analytic solution for the partial derivative
<small>@(@
\partial_x y(x, 1)
@)@</small> is returned.

<br>
<br>
<b><big><a name="fp" id="fp">fp</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>fp</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Float</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>fp</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
The input value of the elements of 
<code><i><font color="black"><span style='white-space: nowrap'>fp</span></font></i></code>
 does not matter.

<br>
<br>
<big><a name="fp.Function" id="fp.Function">Function</a></big>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>p</span></font></i></code>
 is zero, 
<code><i><font color="black"><span style='white-space: nowrap'>fp</span></font></i></code>
 has size equal to <small>@(@
n
@)@</small>
and contains the value of <small>@(@
y(x, 1)
@)@</small>.

<br>
<br>
<big><a name="fp.Gradient" id="fp.Gradient">Gradient</a></big>
<br>
If 
<code><i><font color="black"><span style='white-space: nowrap'>p</span></font></i></code>
 is one, 
<code><i><font color="black"><span style='white-space: nowrap'>fp</span></font></i></code>
 has size equal to 
<code><i><font color="black"><span style='white-space: nowrap'>n^2</span></font></i></code>

and for <small>@(@
i = 0 , \ldots 1
@)@</small>, <small>@(@
j = 0 , \ldots , n-1
@)@</small>
<small>@[@

    \D{y[i]}{x[j]} (x, 1) = fp [ i \cdot n + j ]

@]@</small>



<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file
<a href="ode_evaluate.cpp.htm" target="_top"><span style='white-space: nowrap'>ode_evaluate.cpp</span></a>

contains an example and test  of <code><font color="blue">ode_evaluate.hpp</font></code>.


<br>
<br>
<b><big><a name="Source Code" id="Source Code">Source Code</a></big></b>
<br>
The file
<a href="ode_evaluate.hpp.htm" target="_top"><span style='white-space: nowrap'>ode_evaluate.hpp</span></a>

contains the source code for this template function.


<hr>Input File: include/cppad/speed/ode_evaluate.hpp

</body>
</html>
