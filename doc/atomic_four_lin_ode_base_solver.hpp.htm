<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Atomic Multiply Base Matrices: Example Implementation</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Atomic Multiply Base Matrices: Example Implementation">
<meta name="keywords" id="keywords" content=" atomic multiply base matrices: example implementation syntax prototype notation rosen34 source ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_atomic_four_lin_ode_base_solver.hpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="atomic_four_lin_ode_get.hpp.htm" target="_top">Prev</a>
</td><td><a href="atomic_four_lin_ode_for_type.hpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>AD</option>
<option>ADValued</option>
<option>atomic</option>
<option>atomic_four</option>
<option>atomic_four_example</option>
<option>atomic_four_lin_ode</option>
<option>atomic_four_lin_ode_implement</option>
<option>atomic_four_lin_ode_base_solver.hpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_four_example_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_four_lin_ode_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_four_lin_ode_implement_htm.js'></script>
</td>
<td>atomic_four_lin_ode_base_solver.hpp</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Prototype</option>
<option>Notation</option>
<option>Rosen34</option>
<option>Source</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<b>This is cppad-20221105 documentation</b>. Here is a link to its
<a href="https://cppad.readthedocs.io" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Atomic Multiply Base Matrices: Example Implementation</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>lin_ode</span></font></i><font color="blue"><span style='white-space: nowrap'>.base_solver(<br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>r</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>step</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>pattern</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>transpose</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
)</span></font></code>


<br>
<br>
<b><big><a name="Prototype" id="Prototype">Prototype</a></big></b>

<pre><tt>
<b><font color="#0000FF">template</font></b> <font color="#990000">&lt;</font><b><font color="#0000FF">class</font></b> <font color="#008080">Base</font><font color="#990000">&gt;</font>
<font color="#009900">void</font> atomic_lin_ode<font color="#990000">&lt;</font>Base<font color="#990000">&gt;::</font><b><font color="#000000">base_solver</font></b><font color="#990000">(</font>
    <b><font color="#0000FF">const</font></b> Base<font color="#990000">&amp;</font>                    r         <font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> Base<font color="#990000">&amp;</font>                    step      <font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> sparse_rc<font color="#990000">&amp;</font>               pattern   <font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> <font color="#009900">bool</font><font color="#990000">&amp;</font>                    transpose <font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>     x         <font color="#990000">,</font>
    CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>           y         <font color="#990000">)</font></tt></pre>
<br>
<b><big><a name="Notation" id="Notation">Notation</a></big></b>
<br>
We use the notation:
<a href="atomic_four_lin_ode.htm#call_id" target="_top"><span style='white-space: nowrap'>call_id</span></a>

<a href="atomic_four_lin_ode.htm#r" target="_top"><span style='white-space: nowrap'>r</span></a>

<a href="atomic_four_lin_ode.htm#pattern" target="_top"><span style='white-space: nowrap'>pattern</span></a>

<a href="atomic_four_lin_ode.htm#transpose" target="_top"><span style='white-space: nowrap'>transpose</span></a>

<a href="atomic_four_lin_ode.htm#pattern.nnz" target="_top"><span style='white-space: nowrap'>nnz</span></a>
,
<a href="atomic_four_lin_ode.htm#pattern.row" target="_top"><span style='white-space: nowrap'>row</span></a>
,
<a href="atomic_four_lin_ode.htm#pattern.col" target="_top"><span style='white-space: nowrap'>col</span></a>
,
<a href="atomic_four_lin_ode.htm#x" target="_top"><span style='white-space: nowrap'>x</span></a>
,
<a href="atomic_four_lin_ode.htm#x.n" target="_top"><span style='white-space: nowrap'>n</span></a>
,
<a href="atomic_four_lin_ode.htm#x.A(x)" target="_top"><span style='white-space: nowrap'>A(x)</span></a>
,
<a href="atomic_four_lin_ode.htm#x.b(x)" target="_top"><span style='white-space: nowrap'>b(x)</span></a>
,
<a href="atomic_four_lin_ode.htm#y(x)" target="_top"><span style='white-space: nowrap'>y(x)</span></a>
,
<a href="atomic_four_lin_ode.htm#y(x).m" target="_top"><span style='white-space: nowrap'>m</span></a>
,
<a href="atomic_four_lin_ode.htm#vk(x)" target="_top"><span style='white-space: nowrap'>vk(x)</span></a>


<br>
<br>
<b><big><a name="Rosen34" id="Rosen34">Rosen34</a></big></b>
<br>
This example uses one step of
<a href="rosen34.htm" target="_top"><span style='white-space: nowrap'>rosen34</span></a>
 ODE solver.
Any initial value ODE solver, with any number of steps, could be used.

<br>
<br>
<b><big><a name="Source" id="Source">Source</a></big></b>

<pre><tt>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/example/atomic_four/lin_ode/lin_ode.hpp&gt;</font>

<b><font color="#0000FF">namespace</font></b> CppAD <font color="#FF0000">{</font> <i><font color="#9A1900">// BEGIN_CPPAD_NAMESPACE</font></i>
<i><font color="#9A1900">//</font></i>
<i><font color="#9A1900">// base_solver</font></i>
<i><font color="#9A1900">// BEGIN_PROTOTYPE</font></i>
<b><font color="#0000FF">template</font></b> <font color="#990000">&lt;</font><b><font color="#0000FF">class</font></b> <font color="#008080">Base</font><font color="#990000">&gt;</font>
<font color="#009900">void</font> atomic_lin_ode<font color="#990000">&lt;</font>Base<font color="#990000">&gt;::</font><b><font color="#000000">base_solver</font></b><font color="#990000">(</font>
    <b><font color="#0000FF">const</font></b> Base<font color="#990000">&amp;</font>                    r         <font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> Base<font color="#990000">&amp;</font>                    step      <font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> sparse_rc<font color="#990000">&amp;</font>               pattern   <font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> <font color="#009900">bool</font><font color="#990000">&amp;</font>                    transpose <font color="#990000">,</font>
    <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>     x         <font color="#990000">,</font>
    CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>           y         <font color="#990000">)</font>
<i><font color="#9A1900">// END_PROTOTYPE</font></i>
<font color="#FF0000">{</font>
    <b><font color="#0000FF">class</font></b> <font color="#008080">Fun</font> <font color="#FF0000">{</font>
    <b><font color="#0000FF">private</font></b><font color="#990000">:</font>
        <b><font color="#0000FF">const</font></b> sparse_rc<font color="#990000">&amp;</font>           pattern_<font color="#990000">;</font>
        <b><font color="#0000FF">const</font></b> <font color="#009900">bool</font><font color="#990000">&amp;</font>                transpose_<font color="#990000">;</font>
        <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font> x_<font color="#990000">;</font>
    <b><font color="#0000FF">public</font></b><font color="#990000">:</font>
        <b><font color="#000000">Fun</font></b><font color="#990000">(</font>
            <b><font color="#0000FF">const</font></b> sparse_rc<font color="#990000">&amp;</font>           pattern   <font color="#990000">,</font>
            <b><font color="#0000FF">const</font></b> <font color="#009900">bool</font><font color="#990000">&amp;</font>                transpose <font color="#990000">,</font>
            <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font> x         <font color="#990000">)</font>
        <font color="#990000">:</font> <b><font color="#000000">pattern_</font></b><font color="#990000">(</font>pattern<font color="#990000">),</font> <b><font color="#000000">transpose_</font></b><font color="#990000">(</font>transpose<font color="#990000">),</font> <b><font color="#000000">x_</font></b><font color="#990000">(</font>x<font color="#990000">)</font>
        <font color="#FF0000">{</font> <font color="#FF0000">}</font>
        <font color="#009900">void</font> <b><font color="#000000">Ode</font></b><font color="#990000">(</font>
            <b><font color="#0000FF">const</font></b> Base<font color="#990000">&amp;</font>                t <font color="#990000">,</font>
            <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font> z <font color="#990000">,</font>
            CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>       f <font color="#990000">)</font>
        <font color="#FF0000">{</font>   <font color="#008080">size_t</font> m   <font color="#990000">=</font> z<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font>
            <font color="#008080">size_t</font> nnz <font color="#990000">=</font> pattern_<font color="#990000">.</font><b><font color="#000000">nnz</font></b><font color="#990000">();</font>
            <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> f<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> m <font color="#990000">);</font>
            <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> x_<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> nnz <font color="#990000">+</font> m <font color="#990000">);</font>
            <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> pattern_<font color="#990000">.</font><b><font color="#000000">nr</font></b><font color="#990000">()</font> <font color="#990000">==</font> m <font color="#990000">);</font>
            <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> pattern_<font color="#990000">.</font><b><font color="#000000">nc</font></b><font color="#990000">()</font> <font color="#990000">==</font> m <font color="#990000">);</font>
            <i><font color="#9A1900">//</font></i>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
                f<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">Base</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> nnz<font color="#990000">;</font> <font color="#990000">++</font>k<font color="#990000">)</font>
            <font color="#FF0000">{</font>   <font color="#008080">size_t</font> i <font color="#990000">=</font> pattern_<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()[</font>k<font color="#990000">];</font>
                <font color="#008080">size_t</font> j <font color="#990000">=</font> pattern_<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">()[</font>k<font color="#990000">];</font>
                <b><font color="#0000FF">if</font></b><font color="#990000">(</font> transpose_ <font color="#990000">)</font>
                    std<font color="#990000">::</font><b><font color="#000000">swap</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">);</font>
                f<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">+=</font> x_<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">*</font> z<font color="#990000">[</font>j<font color="#990000">];</font>
            <font color="#FF0000">}</font>
        <font color="#FF0000">}</font>
        <font color="#009900">void</font> <b><font color="#000000">Ode_ind</font></b><font color="#990000">(</font>
            <b><font color="#0000FF">const</font></b> Base<font color="#990000">&amp;</font>                t   <font color="#990000">,</font>
            <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font> z   <font color="#990000">,</font>
            CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>       f_t <font color="#990000">)</font>
        <font color="#FF0000">{</font>   <font color="#008080">size_t</font> m   <font color="#990000">=</font> z<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font>
<b><font color="#000080"># ifndef</font></b> NDEBUG
            <font color="#008080">size_t</font> nnz <font color="#990000">=</font> pattern_<font color="#990000">.</font><b><font color="#000000">nnz</font></b><font color="#990000">();</font>
            <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> f_t<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> m <font color="#990000">);</font>
            <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> x_<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> nnz <font color="#990000">+</font> m <font color="#990000">);</font>
            <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> pattern_<font color="#990000">.</font><b><font color="#000000">nr</font></b><font color="#990000">()</font> <font color="#990000">==</font> m <font color="#990000">);</font>
            <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> pattern_<font color="#990000">.</font><b><font color="#000000">nc</font></b><font color="#990000">()</font> <font color="#990000">==</font> m <font color="#990000">);</font>
<b><font color="#000080"># endif</font></b>
            <i><font color="#9A1900">//</font></i>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
                f_t<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">Base</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>
        <font color="#FF0000">}</font>
        <font color="#009900">void</font> <b><font color="#000000">Ode_dep</font></b><font color="#990000">(</font>
            <b><font color="#0000FF">const</font></b> Base<font color="#990000">&amp;</font>                t   <font color="#990000">,</font>
            <b><font color="#0000FF">const</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font> z   <font color="#990000">,</font>
            CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font>Base<font color="#990000">&gt;&amp;</font>       f_x <font color="#990000">)</font>
        <font color="#FF0000">{</font>   <font color="#008080">size_t</font> m   <font color="#990000">=</font> z<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font>
            <font color="#008080">size_t</font> nnz <font color="#990000">=</font> pattern_<font color="#990000">.</font><b><font color="#000000">nnz</font></b><font color="#990000">();</font>
            <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> f_x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> m <font color="#990000">*</font> m <font color="#990000">);</font>
            <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> x_<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> nnz <font color="#990000">+</font> m <font color="#990000">);</font>
            <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> pattern_<font color="#990000">.</font><b><font color="#000000">nr</font></b><font color="#990000">()</font> <font color="#990000">==</font> m <font color="#990000">);</font>
            <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> pattern_<font color="#990000">.</font><b><font color="#000000">nc</font></b><font color="#990000">()</font> <font color="#990000">==</font> m <font color="#990000">);</font>
            <i><font color="#9A1900">//</font></i>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m <font color="#990000">*</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
                f_x<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">Base</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> nnz<font color="#990000">;</font> <font color="#990000">++</font>k<font color="#990000">)</font>
            <font color="#FF0000">{</font>   <font color="#008080">size_t</font> i <font color="#990000">=</font> pattern_<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">()[</font>k<font color="#990000">];</font>
                <font color="#008080">size_t</font> j <font color="#990000">=</font> pattern_<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">()[</font>k<font color="#990000">];</font>
                <b><font color="#0000FF">if</font></b><font color="#990000">(</font> transpose_ <font color="#990000">)</font>
                    std<font color="#990000">::</font><b><font color="#000000">swap</font></b><font color="#990000">(</font>i<font color="#990000">,</font> j<font color="#990000">);</font>
                f_x<font color="#990000">[</font>i <font color="#990000">*</font> m <font color="#990000">+</font> j<font color="#990000">]</font> <font color="#990000">=</font> x_<font color="#990000">[</font>k<font color="#990000">];</font>
            <font color="#FF0000">}</font>
        <font color="#FF0000">}</font>
    <font color="#FF0000">}</font><font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// nnz</font></i>
    <font color="#008080">size_t</font> nnz <font color="#990000">=</font> pattern<font color="#990000">.</font><b><font color="#000000">nnz</font></b><font color="#990000">();</font>
    <i><font color="#9A1900">// m</font></i>
    <font color="#008080">size_t</font> m     <font color="#990000">=</font> y<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font>
    <b><font color="#000000">CPPAD_ASSERT_UNKNOWN</font></b><font color="#990000">(</font> x<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> nnz <font color="#990000">+</font> m <font color="#990000">);</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// fun</font></i>
    <font color="#008080">Fun</font> <b><font color="#000000">fun</font></b><font color="#990000">(</font>pattern<font color="#990000">,</font> transpose<font color="#990000">,</font> x<font color="#990000">);</font>
    <i><font color="#9A1900">//</font></i>
    <i><font color="#9A1900">// y</font></i>
    <font color="#008080">Base</font> ti       <font color="#990000">=</font> <b><font color="#000000">Base</font></b><font color="#990000">(</font><font color="#993399">0.0</font><font color="#990000">);</font>
    <font color="#008080">Base</font> tf       <font color="#990000">=</font> r<font color="#990000">;</font>
    <font color="#008080">size_t</font> n_step <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> step <font color="#990000">&lt;</font> <b><font color="#000000">abs</font></b><font color="#990000">(</font>r<font color="#990000">)</font> <font color="#990000">)</font>
        n_step <font color="#990000">=</font> <b><font color="#000000">size_t</font></b><font color="#990000">(</font> <b><font color="#000000">Integer</font></b><font color="#990000">(</font> <b><font color="#000000">abs</font></b><font color="#990000">(</font>r<font color="#990000">)</font> <font color="#990000">/</font> step <font color="#990000">)</font> <font color="#990000">)</font> <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font>
    CppAD<font color="#990000">::</font><font color="#008080">vector&lt;Base&gt;</font> <b><font color="#000000">zi</font></b><font color="#990000">(</font>m<font color="#990000">),</font> <b><font color="#000000">e</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>j<font color="#990000">)</font>
        zi<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> x<font color="#990000">[</font>nnz <font color="#990000">+</font> j<font color="#990000">];</font>
    y <font color="#990000">=</font> CppAD<font color="#990000">::</font><b><font color="#000000">Rosen34</font></b><font color="#990000">(</font>fun<font color="#990000">,</font> n_step<font color="#990000">,</font> ti<font color="#990000">,</font> tf<font color="#990000">,</font> zi<font color="#990000">,</font> e<font color="#990000">);</font>
    <b><font color="#0000FF">return</font></b><font color="#990000">;</font>
<font color="#FF0000">}</font>
<font color="#FF0000">}</font> <i><font color="#9A1900">// END_CPPAD_NAMESPACE</font></i></tt></pre>

<hr>Input File: include/cppad/example/atomic_four/lin_ode/base_solver.hpp

</body>
</html>
