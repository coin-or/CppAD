<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Changes and Additions to CppAD During 2020</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Changes and Additions to CppAD During 2020">
<meta name="keywords" id="keywords" content=" changes additions to cppad during 2020 12-28 12-27 12-21 12-20 12-19 12-12 12-11 12-06 12-05 12-04 12-03 12-02 12-01 11-29 10-26 10-23 10-22 10-21 10-20 10-17 09-05 06-08 06-04 05-27 05-26 05-23 05-01 03-11 02-02 02-01 01-29 01-24 01-22 01-18 01-17 01-12 01-06 01-04 ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_whats_new_20_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="whats_new_21.htm" target="_top">Prev</a>
</td><td><a href="whats_new_19.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Appendix</option>
<option>whats_new</option>
<option>whats_new_20</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_cppad_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_appendix_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_whats_new_htm.js'></script>
</td>
<td>whats_new_20</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>12-28</option>
<option>12-27</option>
<option>12-21</option>
<option>12-20</option>
<option>12-19</option>
<option>12-12</option>
<option>12-11</option>
<option>12-06</option>
<option>12-05</option>
<option>12-04</option>
<option>12-03</option>
<option>12-02</option>
<option>12-01</option>
<option>11-29</option>
<option>10-26</option>
<option>10-23</option>
<option>10-22</option>
<option>10-21</option>
<option>10-20</option>
<option>10-17</option>
<option>09-05</option>
<option>06-08</option>
<option>06-04</option>
<option>05-27</option>
<option>05-26</option>
<option>05-23</option>
<option>05-01</option>
<option>03-11</option>
<option>02-02</option>
<option>02-01</option>
<option>01-29</option>
<option>01-24</option>
<option>01-22</option>
<option>01-18</option>
<option>01-17</option>
<option>01-12</option>
<option>01-06</option>
<option>01-04</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@



<b>This is cppad-20221105 documentation</b>. Here is a link to its
<a href="https://cppad.readthedocs.io" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Changes and Additions to CppAD During 2020</big></big></b></center>
<br>
<b><big><a name="12-28" id="12-28">12-28</a></big></b>

<ol type="1"><li>
Add the
<a href="cppadcg_sparse_jacobian.cpp.htm#PASS_SPARSE_JACOBIAN_TO_CODE_GEN" target="_top"><span style='white-space: nowrap'>PASS_SPARSE_JACOBIAN_TO_CODE_GEN</span></a>

option to the cppadcg sparse jacobian speed test
so one can compare passing a function, or its sparse Jacobian, to
CppADCodeGen (for the same eventual result).
</li><li>

Move <code><font color="blue">compiled_fun</font></code> to <a href="code_gen_fun.htm" target="_top"><span style='white-space: nowrap'>code_gen_fun</span></a>
,
to emphasize the fact that it used the CppADCodeGen package.
</li></ol>


<br>
<br>
<b><big><a name="12-27" id="12-27">12-27</a></big></b>

<ol type="1"><li>
Include the example implementations <code><font color="blue">compiled_fun.hpp</font></code>
and <code><font color="blue">compiled_fun.cpp</font></code> in the documentation.
</li><li>

Add the
<a href="cppadcg_det_minor.cpp.htm#PASS_JACOBIAN_TO_CODE_GEN" target="_top"><span style='white-space: nowrap'>PASS_JACOBIAN_TO_CODE_GEN</span></a>

option to the cppadcg det_minor speed test
so one can compare passing the determinant or its Jacobian to
CppADCodeGen (for the same eventual result).
</li></ol>


<br>
<br>
<b><big><a name="12-21" id="12-21">12-21</a></big></b>

<ol type="1"><li>
Add a move semantics version of the copy constructor to
<a href="adfun.htm" target="_top"><span style='white-space: nowrap'>ADFun</span></a>
, <a href="sparse_rc.htm" target="_top"><span style='white-space: nowrap'>sparse_rc</span></a>
, <a href="sparse_rcv.htm" target="_top"><span style='white-space: nowrap'>sparse_rcv</span></a>
, and
<a href="cppad_vector.htm#vectorBool" target="_top"><span style='white-space: nowrap'>vectorBool</span></a>
 template classes.
This should improve the speed of handling function return values
that have these types.
</li><li>

The default ADFun copy constructor was deleted so that its use is now
a compile error (it used to generate a run time error message).
</li><li>

Move  <a href="poly.cpp.htm" target="_top"><span style='white-space: nowrap'>poly.cpp</span></a>
, <a href="pow_int.htm" target="_top"><span style='white-space: nowrap'>pow_int</span></a>
,
<a href="runge_45.cpp.htm" target="_top"><span style='white-space: nowrap'>runge_45.cpp</span></a>
, and <a href="rosen_34.cpp.htm" target="_top"><span style='white-space: nowrap'>rosen_34.cpp</span></a>

from <code><font color="blue">example/general</font></code> to <code><font color="blue">example/utility/</font></code>.
</li></ol>


<br>
<br>
<b><big><a name="12-20" id="12-20">12-20</a></big></b>

<ol type="1"><li>
The <a href="rosen_34.cpp.htm" target="_top"><span style='white-space: nowrap'>rosen_34.cpp</span></a>
 example was changed to use
<a href="independent.htm#dynamic" target="_top"><span style='white-space: nowrap'>dynamic</span></a>
 parameters so it does not
need to record a new function for every argument value.
The new version of this example also uses the
ADFun <a href="funconstruct.htm#swap" target="_top"><span style='white-space: nowrap'>swap</span></a>
 operation to avoid
making a separate copy of an ADFun object.
</li><li>

Fix a bug in the
ADFun <a href="funconstruct.htm#swap" target="_top"><span style='white-space: nowrap'>swap</span></a>
, which was added on 12-19.
</li><li>

Add a move semantic version of the copy constructor to
the <a href="cppad_vector.htm" target="_top"><span style='white-space: nowrap'>cppad_vector</span></a>
 template class.
(This should improve the speed of handling function return values
that are vectors.)
</li></ol>



<br>
<br>
<b><big><a name="12-19" id="12-19">12-19</a></big></b>
<br>
Merge in <code><font color="blue">cg</font></code> branch which had the following changes:

<ol type="1"><li>
<b>API Change:</b>
The 
<code><i><font color="black"><span style='white-space: nowrap'>SizeVector</span></font></i></code>
 class in
<a href="sparse_rc.htm#SizeVector" target="_top"><span style='white-space: nowrap'>sparse_rc</span></a>
 and
<a href="sparse_rcv.htm#SizeVector" target="_top"><span style='white-space: nowrap'>sparse_rcv</span></a>

must support the <code><font color="blue">swap</font></code> operation.
</li><li>

The <code><font color="blue">swap</font></code> operator was added to the
<a href="sparse_rc.htm#other.swap" target="_top"><span style='white-space: nowrap'>sparse_rc</span></a>
 and
<a href="sparse_rcv.htm#other.swap" target="_top"><span style='white-space: nowrap'>sparse_rcv</span></a>
 template classes.
</li><li>

A move semantics version of the assignment operator was added to the
<a href="sparse_rc.htm#other.Move Semantics Assignment and Constructor" target="_top"><span style='white-space: nowrap'>sparse_rc</span></a>

<a href="sparse_rcv.htm#other.Move Semantics Assignment and Constructor" target="_top"><span style='white-space: nowrap'>sparse_rcv</span></a>
 template classes.
</li><li>

The 
<code><i><font color="black"><span style='white-space: nowrap'>job</span></font></i></code>
 option was added to the
<a href="link_det_minor.htm#job" target="_top"><span style='white-space: nowrap'>det_minor</span></a>
 and
<a href="link_sparse_jacobian.htm#job" target="_top"><span style='white-space: nowrap'>sparse_jacobian</span></a>
 speed tests.
</li><li>

The <code><font color="blue">compiled_fun</font></code> example for using CppADCodeGen was added
(since moved to <a href="code_gen_fun.htm" target="_top"><span style='white-space: nowrap'>code_gen_fun</span></a>
).
In addition, <a href="cppadcg_sparse_jacobian.cpp.htm" target="_top"><span style='white-space: nowrap'>cppadcg_sparse_jacobian.cpp</span></a>
 and
<a href="cppadcg_det_minor.cpp.htm" target="_top"><span style='white-space: nowrap'>cppadcg_det_minor.cpp</span></a>
 examples were modified to use this utility.
</li><li>

The ADFun <a href="funconstruct.htm#swap" target="_top"><span style='white-space: nowrap'>swap</span></a>
 operation,
and move semantics copy constructor, were added.
This ensures the move semantics assignment operator does not make any copies.
</li></ol>


<br>
<br>
<b><big><a name="12-12" id="12-12">12-12</a></big></b>
<br>
Change the location where the source code for the
<a href="get_optional.sh.htm" target="_top"><span style='white-space: nowrap'>optional</span></a>
 packages is stored from
<code><font color="blue">build/external</font></code> to <code><font color="blue">external</font></code>.
This enables one to remove the old build directory
without having to rebuild the optional packages.

<br>
<br>
<b><big><a name="12-11" id="12-11">12-11</a></big></b>
<br>
Change the autotools <a href="autotools.htm#Configure" target="_top"><span style='white-space: nowrap'>configure</span></a>
 script
so that it does better detection of the microsoft cl compiler.
In addition, add documentation for the
<a href="autotools.htm#--enable-msvc" target="_top"><span style='white-space: nowrap'>--enable-msvc</span></a>
 option.

<br>
<br>
<b><big><a name="12-06" id="12-06">12-06</a></big></b>
<br>
Fix <code><font color="blue">bin/get_cppadcg.sh</font></code> install of newer version
of cppadcg.

<br>
<br>
<b><big><a name="12-05" id="12-05">12-05</a></big></b>
<br>
Advance to Oct 9, 2020 version of cppadcg.

<br>
<br>
<b><big><a name="12-04" id="12-04">12-04</a></big></b>

<ol type="1"><li>
The cppad vector <a href="cppad_vector.htm#resize" target="_top"><span style='white-space: nowrap'>resize</span></a>
 operation
now preserves the data even if the new size does not fit in the
old capacity of the array.
This makes <code><font color="blue">cppad_vector</font></code> more like <code><font color="blue">std::vector</font></code>.
</li><li>

Fix a problem with the autotools build and the <code><font color="blue">is_pod</font></code> function.
This function, which is not in the CppAD user API, was simplified because
it is no longer necessary to handle the c++98 case.
</li><li>

Fix the <code><font color="blue">example/utility/to_string.cpp</font></code> test; see
<a href="https://github.com/coin-or/CppAD/issues/44" target="_top"><span style='white-space: nowrap'>issue&nbsp;44</span></a>
.
</li></ol>


<br>
<br>
<b><big><a name="12-03" id="12-03">12-03</a></big></b>

<b><br>
API Change:</b> support of c++11 is required for this,
and future versions of CppAD.

<br>
<br>
<b><big><a name="12-02" id="12-02">12-02</a></big></b>
<br>
The <a href="pkgconfig.htm" target="_top"><span style='white-space: nowrap'>pkgconfig</span></a>
 files were modified to make user of the fields
<code><font color="blue">Requires.private</font></code> and <code><font color="blue">Libs.private</font></code>.
In addition, the
<a href="pkgconfig.htm#cppad.pc.Extra Definitions" target="_top"><span style='white-space: nowrap'>extra&nbsp;definitions</span></a>

were added.

<br>
<br>
<b><big><a name="12-01" id="12-01">12-01</a></big></b>
<br>
There was a mistake in the 20201130 version that caused
<code><font color="blue">CPPAD_HAS_IPOPT</font></code> and <code><font color="blue">CPPAD_HAS_ADOLC</font></code> to be undefined,
instead of 0 or 1, this has been fixed.

<br>
<br>
<b><big><a name="11-29" id="11-29">11-29</a></big></b>

<ol type="1"><li>
Use pkg-config to determine install prefix for
adolc, eigen, ipopt, and cppadcg; see
<a href="cmake.htm#include_adolc" target="_top"><span style='white-space: nowrap'>include_adolc</span></a>
,
<a href="cmake.htm#include_eigen" target="_top"><span style='white-space: nowrap'>include_eigen</span></a>
,
<a href="cmake.htm#include_ipopt" target="_top"><span style='white-space: nowrap'>include_ipopt</span></a>
, and
<a href="cmake.htm#include_cppadcg" target="_top"><span style='white-space: nowrap'>include_cppadcg</span></a>
.
</li><li>

Fix warning that the variable <code><font color="blue">not_used_rec_base</font></code> was not initialized.
</li></ol>


<br>
<br>
<b><big><a name="10-26" id="10-26">10-26</a></big></b>
<br>
Improve the documentation for building the CppAD tests using
<a href="cmake.htm#CMake Command.Visual Studio" target="_top"><span style='white-space: nowrap'>Visual&nbsp;Studio</span></a>
.

<br>
<br>
<b><big><a name="10-23" id="10-23">10-23</a></big></b>
<br>
Version <code><font color="blue">cmake-3.19</font></code> of cmake had an change that was not backward
compatible; see
<a href="https://discourse.cmake.org/t/on-windows-check-cxx-source-runs-is-calling-check-source-runs/2065/6" target="_top"><span style='white-space: nowrap'>CHECK_CXX_SOURCE_RUNS</span></a>
.
This broke the CppAD install and was fixed.
Thus versions of CppAD before 20201023 do not work with version of CMake
at or after 3.18.

<br>
<br>
<b><big><a name="10-22" id="10-22">10-22</a></big></b>
<br>
Add <code><font color="blue">ar-lib</font></code> to github repository distribution.
This fixes a problem with autotools build when using the
Microsoft C++ compiler and <code><font color="blue">msys2</font></code>.

<br>
<br>
<b><big><a name="10-21" id="10-21">10-21</a></big></b>
<br>
Modify the source file <code><font color="blue">match_op.hpp</font></code> to avoid a
possibly un-initialized warning on some compilers.

<br>
<br>
<b><big><a name="10-20" id="10-20">10-20</a></big></b>
<br>
The 
<code><i><font color="black"><span style='white-space: nowrap'>have_ar</span></font></i></code>
 variable has been removed from the
<a href="autotools.htm" target="_top"><span style='white-space: nowrap'>autotools</span></a>
 configuration and the configuration now exits
if <code><font color="blue">AM_PROG_AR</font></code> does not find an archiving tool.
This was done to try and solve some configuration problems with
a combination of <code><font color="blue">msys2</font></code> and the Visual Studio compiler.

<br>
<br>
<b><big><a name="10-17" id="10-17">10-17</a></big></b>

<ol type="1"><li>
The <a href="autotools.htm" target="_top"><span style='white-space: nowrap'>autotools</span></a>
 configuration would fail when it tried
to compile a <a href="cppadcg.htm" target="_top"><span style='white-space: nowrap'>cppadcg</span></a>
 include file
(the autotools configuration does not support <code><font color="blue">cppadcg</font></code>).
This has been fixed.
</li><li>

The autotools configuration for he profiling version of the
speed tests was out of date. It is sufficient to do speed
profiling using the cmake configuration, so it has
been removed from the autotools configuration.
</li><li>

Add more documentation for the
<a href="cmake.htm#cppad_profile_flag" target="_top"><span style='white-space: nowrap'>cppad_profile_flag</span></a>

and fix some problems building the
<code><font color="blue">speed_profile</font></code> program.
(We also use <code><font color="blue">callgrind</font></code> to do CppAD speed profiling.)
</li></ol>


<br>
<br>
<b><big><a name="09-05" id="09-05">09-05</a></big></b>
<br>
Fix some errors and warnings when building with Visual Studio 2019; e.g. see
<a href="https://github.com/coin-or/CppAD/issues/60" target="_top"><span style='white-space: nowrap'>issue&nbsp;60</span></a>
.

<br>
<br>
<b><big><a name="06-08" id="06-08">06-08</a></big></b>
<br>
Fix compiler warning in <code><font color="blue">match_op.hpp</font></code> about
possibly uninitialized variable.

<br>
<br>
<b><big><a name="06-04" id="06-04">06-04</a></big></b>

<ol type="1"><li>
Advance <a href="get_ipopt.sh.htm" target="_top"><span style='white-space: nowrap'>get_ipopt.sh</span></a>
 to ipopt-3.13.2.
</li><li>

Fix some compiler warnings generated by g++-10.1.1.
</li></ol>



<br>
<br>
<b><big><a name="05-27" id="05-27">05-27</a></big></b>
<br>
If <a href="cmake.htm#include_ipopt" target="_top"><span style='white-space: nowrap'>include_ipopt</span></a>
 is on the cmake command line,
<a href="ipopt_solve.htm" target="_top"><span style='white-space: nowrap'>ipopt_solve</span></a>
 is automatically included by <code><font color="blue">cppad/cppad.hpp</font></code>.
The <a href="sparse2eigen.htm" target="_top"><span style='white-space: nowrap'>sparse2eigen</span></a>
 utility can still be used even
if <a href="cmake.htm#include_eigen" target="_top"><span style='white-space: nowrap'>include_eigen</span></a>
 is not specified on the cmake command line.


<br>
<br>
<b><big><a name="05-26" id="05-26">05-26</a></big></b>

<ol type="1"><li>
There was a bug in conditional expressions when the
<a href="condexp.htm#left" target="_top"><span style='white-space: nowrap'>left</span></a>
 or <a href="condexp.htm#right" target="_top"><span style='white-space: nowrap'>right</span></a>
 argument is a
<a href="con_dyn_var.htm#Dynamic" target="_top"><span style='white-space: nowrap'>dynamic</span></a>
 parameter and the other
is a parameter and <code><font color="blue">NDEBUG</font></code> is not defined.
There was a mistaken assertion that has been fixed.
</li><li>

Advance most recent release from 20200000.2 to 20200000.3.
</li></ol>


<br>
<br>
<b><big><a name="05-23" id="05-23">05-23</a></big></b>

<ol type="1"><li>
The <code><font color="blue">optimize</font></code> hash coding used to remove identical expressions
was improved. The can make a big difference for very large programs.
</li><li>

The <a href="optimize.htm#options.collision_limit=value" target="_top"><span style='white-space: nowrap'>collision_limit</span></a>

option was added to the <code><font color="blue">optimize</font></code> command.
</li><li>

The <a href="optimize.htm#exceed_collision_limit" target="_top"><span style='white-space: nowrap'>exceed_collision_limit</span></a>

function was added so one can check if a larger collision limit
might make a difference.
</li></ol>


<br>
<br>
<b><big><a name="05-01" id="05-01">05-01</a></big></b>

<ol type="1"><li>
A problem was fixed in the <a href="get_adolc.sh.htm" target="_top"><span style='white-space: nowrap'>get_adolc.sh</span></a>

installation of the optional package Adolc .
To be specific, to be specific the Adolc source moved from Gitlab to Github.
In addition, advance to Adolc master on 2020-04-01.
</li><li>

The
<a href="optimize.htm#options.no_cumulative_sum_op" target="_top"><span style='white-space: nowrap'>no_cumulative_sum_op</span></a>

option was added to the <code><font color="blue">optimize</font></code> routine because,
in some cases, gathering cumulative summations
interferes with recognizes pieces of summations that are
the same in different cumulative sums.
</li></ol>


<br>
<br>
<b><big><a name="03-11" id="03-11">03-11</a></big></b>
<br>
The <code><font color="blue">CppAD::vector</font></code> constructor was extended to allow its
<a href="cppad_vector.htm#Integer Size" target="_top"><span style='white-space: nowrap'>size</span></a>
 to be a <code><font color="blue">int</font></code>
(this used to generate a warning when using the <code><font color="blue">clang</font></code> compiler).

<br>
<br>
<b><big><a name="02-02" id="02-02">02-02</a></big></b>
<br>
The <code><font color="blue">get_optional.sh</font></code> prefix was extended so that it could be a
<a href="get_optional.sh.htm#prefix.Relative Path" target="_top"><span style='white-space: nowrap'>relative&nbsp;path</span></a>
.
In addition
<a href="get_optional.sh.htm#prefix.Configuration" target="_top"><span style='white-space: nowrap'>configuration</span></a>

instructions were added to cover the case where the prefix is changed.

<br>
<br>
<b><big><a name="02-01" id="02-01">02-01</a></big></b>
<br>
The <a href="get_optional.sh.htm#get_optional.log" target="_top"><span style='white-space: nowrap'>get_optional.log</span></a>

and <a href="get_optional.sh.htm#get_optional.err" target="_top"><span style='white-space: nowrap'>get_optional.err</span></a>
 files
were added so one can see the progress of the <code><font color="blue">get_optional.sh</font></code> script.

<br>
<br>
<b><big><a name="01-29" id="01-29">01-29</a></big></b>

<ol type="1"><li>
Add the <a href="cppadcg_sparse_jacobian.cpp.htm" target="_top"><span style='white-space: nowrap'>cppadcg_sparse_jacobian.cpp</span></a>
 speed test.
</li><li>

The speed main program
<a href="speed_main.htm#test.correct" target="_top"><span style='white-space: nowrap'>correct</span></a>

test results were printed as

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>package</span></font></i><font color="blue"><span style='white-space: nowrap'>_</span></font><i><font color="black"><span style='white-space: nowrap'>test</span></font></i><font color="blue"><span style='white-space: nowrap'>_</span></font><i><font color="black"><span style='white-space: nowrap'>optionlist</span></font></i><font color="blue"><span style='white-space: nowrap'>_ok&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>result</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
This has been changed to

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>package</span></font></i><font color="blue"><span style='white-space: nowrap'>_</span></font><i><font color="black"><span style='white-space: nowrap'>test</span></font></i><font color="blue"><span style='white-space: nowrap'>_</span></font><i><font color="black"><span style='white-space: nowrap'>optionlist</span></font></i><font color="blue"><span style='white-space: nowrap'>_correct&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>result</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
</li></ol>
<br>
<b><big><a name="01-24" id="01-24">01-24</a></big></b>

<ol type="1"><li>
Add the <a href="cppadcg_det_minor.cpp.htm" target="_top"><span style='white-space: nowrap'>cppadcg_det_minor.cpp</span></a>
 speed test.
This is the first test using <a href="cppadcg.htm" target="_top"><span style='white-space: nowrap'>cppadcg</span></a>

(this package generates C source code for the derivatives).
</li><li>

The package name was removed from the speed test size output
(because the sizes do not depend on the package); see
<a href="speed_main.htm#Speed Results" target="_top"><span style='white-space: nowrap'>speed&nbsp;results</span></a>
.
</li></ol>


<br>
<br>
<b><big><a name="01-22" id="01-22">01-22</a></big></b>

<ol type="1"><li>
Add a <a href="json_get_started.cpp.htm" target="_top"><span style='white-space: nowrap'>json_get_started.cpp</span></a>
 example.
</li><li>

Move the section <a href="example_abs_normal.htm" target="_top"><span style='white-space: nowrap'>example_abs_normal</span></a>
 below
the section <a href="abs_normal_fun.htm" target="_top"><span style='white-space: nowrap'>abs_normal_fun</span></a>
.
</li></ol>


<br>
<br>
<b><big><a name="01-18" id="01-18">01-18</a></big></b>
<br>
Modify the option package install scripts so they all use the same
install <a href="get_optional.sh.htm#prefix" target="_top"><span style='white-space: nowrap'>prefix</span></a>

that the user can change in the file <code><font color="blue">bin/get_optional.sh</font></code>.
In addition, these scripts were updated to use more recent versions
of the optional packages.

<br>
<br>
<b><big><a name="01-17" id="01-17">01-17</a></big></b>
<br>
Create an example / template for adding a new package to the speed tests;
see <a href="speed_xpackage.htm" target="_top"><span style='white-space: nowrap'>speed_xpackage</span></a>
.

<br>
<br>
<b><big><a name="01-12" id="01-12">01-12</a></big></b>
<br>
Documentation was added for the
<a href="base_ordered.htm#Special Requirements" target="_top"><span style='white-space: nowrap'>special&nbsp;requirements</span></a>

when the 
<code><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i></code>
 type does not support ordered comparison.
As a consequence, the reverse mode the derivative of 
<code><font color="blue"><span style='white-space: nowrap'>pow(</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>y</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>

may result in zero (not nan) when 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 is zero; see the
<a href="wish_list.htm#Reverse Mode" target="_top"><span style='white-space: nowrap'>reverse&nbsp;mode</span></a>
 wish list item.

<br>
<br>
<b><big><a name="01-06" id="01-06">01-06</a></big></b>
<br>
The <code><font color="blue">VecAD</font></code> objects have been extended to work with
dynamic parameters. However, this is not as efficient as it should be; see
<a href="vecad.htm#Efficiency" target="_top"><span style='white-space: nowrap'>efficiency</span></a>
 and
<a href="wish_list.htm#Dynamic Parameters.VecAD Vectors" target="_top"><span style='white-space: nowrap'>VecAD&nbsp;vectors</span></a>

under dynamic parameters in the wish list.

<br>
<br>
<b><big><a name="01-04" id="01-04">01-04</a></big></b>

<ol type="1"><li>
The <a href="vecad.htm" target="_top"><span style='white-space: nowrap'>VecAD</span></a>
 documentation was re-written.
</li><li>

An empty directory with the name <code><font color="blue">omh</font></code> was being
install below the include directory.
This has been fixed.
</li></ol>



<hr>Input File: omh/appendix/whats_new/20.omh

</body>
</html>
