<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Return A Raw Array to The Available Memory for a Thread</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Return A Raw Array to The Available Memory for a Thread">
<meta name="keywords" id="keywords" content=" return raw array to the available memory thread deprecated 2011-08-31 syntax purpose type delta ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_omp_delete_array_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="omp_create_array.htm" target="_top">Prev</a>
</td><td><a href="omp_efficient.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Appendix</option>
<option>deprecated</option>
<option>omp_alloc</option>
<option>omp_delete_array</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_appendix_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_deprecated_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_omp_alloc_htm.js'></script>
</td>
<td>omp_delete_array</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Deprecated 2011-08-31</option>
<option>Syntax</option>
<option>Purpose</option>
<option>Type</option>
<option>array</option>
<option>Thread</option>
<option>Delta</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@



<b>This is cppad-20221105 documentation</b>. Here is a link to its
<a href="https://cppad.readthedocs.io/en/latest/user_guide.html" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Return A Raw Array to The Available Memory for a Thread</big></big></b></center>
<br>
<b><big><a name="Deprecated 2011-08-31" id="Deprecated 2011-08-31">Deprecated 2011-08-31</a></big></b>
<br>
Use the function <a href="ta_delete_array.htm" target="_top"><span style='white-space: nowrap'>thread_alloc::delete_array</span></a>
 instead.

<br>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>#&nbsp;include&nbsp;&lt;cppad/utility/omp_alloc.hpp&gt;<br>
</span></font></code>

<code><font color="blue"><span style='white-space: nowrap'>omp_alloc::delete_array(</span></font><i><font color="black"><span style='white-space: nowrap'>array</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>
.

<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
Returns memory corresponding to a raw array
(create by <a href="omp_create_array.htm" target="_top"><span style='white-space: nowrap'>omp_create_array</span></a>
) to the
<a href="omp_available.htm" target="_top"><span style='white-space: nowrap'>omp_available</span></a>
 memory pool for the current thread.

<br>
<br>
<b><big><a name="Type" id="Type">Type</a></big></b>
<br>
The type of the elements of the array.

<br>
<br>
<b><big><a name="array" id="array">array</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>array</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>Type</span></font></i><font color="blue"><span style='white-space: nowrap'>*&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>array</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It is a value returned by <a href="omp_create_array.htm" target="_top"><span style='white-space: nowrap'>omp_create_array</span></a>
 and not yet deleted.
The 
<code><i><font color="black"><span style='white-space: nowrap'>Type</span></font></i></code>
 destructor is called for each element in the array.

<br>
<br>
<b><big><a name="Thread" id="Thread">Thread</a></big></b>
<br>
The <a href="omp_get_thread_num.htm" target="_top"><span style='white-space: nowrap'>current&nbsp;thread</span></a>
 must be the
same as when <a href="omp_create_array.htm" target="_top"><span style='white-space: nowrap'>omp_create_array</span></a>
 returned the value 
<code><i><font color="black"><span style='white-space: nowrap'>array</span></font></i></code>
.
There is an exception to this rule:
when the current execution mode is sequential
(not <a href="omp_in_parallel.htm" target="_top"><span style='white-space: nowrap'>parallel</span></a>
) the current thread number does not matter.

<br>
<br>
<b><big><a name="Delta" id="Delta">Delta</a></big></b>
<br>
The amount of memory <a href="omp_inuse.htm" target="_top"><span style='white-space: nowrap'>omp_inuse</span></a>
 will decrease by 
<code><i><font color="black"><span style='white-space: nowrap'>delta</span></font></i></code>
,
and the <a href="omp_available.htm" target="_top"><span style='white-space: nowrap'>omp_available</span></a>
 memory will increase by 
<code><i><font color="black"><span style='white-space: nowrap'>delta</span></font></i></code>
,
where <a href="omp_create_array.htm#Delta" target="_top"><span style='white-space: nowrap'>delta</span></a>

is the same as for the corresponding call to <code><font color="blue">create_array</font></code>.


<hr>Input File: include/cppad/utility/omp_alloc.hpp

</body>
</html>
