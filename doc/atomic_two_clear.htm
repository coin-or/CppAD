<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Free Static Variables</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Free Static Variables">
<meta name="keywords" id="keywords" content=" free static variables syntax purpose future use restriction ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_atomic_two_clear_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="atomic_two_rev_sparse_hes.htm" target="_top">Prev</a>
</td><td><a href="atomic_two_example.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Appendix</option>
<option>deprecated</option>
<option>atomic_two</option>
<option>atomic_two_clear</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_appendix_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_deprecated_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_two_htm.js'></script>
</td>
<td>atomic_two_clear</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>Future Use</option>
<option>Restriction</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@



<b>This is old CppAD documentation:</b> Here is a link to its
<a href="http://coin-or.github.io/CppAD" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Free Static Variables</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>atomic_base&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;::clear()</span></font></code>


<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
Each <code><font color="blue">atomic_base</font></code> objects holds onto work space in order to
avoid repeated memory allocation calls and thereby increase speed
(until it is deleted).
If an the <code><font color="blue">atomic_base</font></code> object is global or static because,
the it does not get deleted.
This is a problem when using
<code><font color="blue">thread_alloc</font></code> <a href="ta_free_all.htm" target="_top"><span style='white-space: nowrap'>free_all</span></a>

to check that all allocated memory has been freed.
Calling this <code><font color="blue">clear</font></code> function will free all the
memory currently being held onto by the

<code><font color="blue"><span style='white-space: nowrap'>atomic_base&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Base</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;</span></font></code>
 class.

<br>
<br>
<b><big><a name="Future Use" id="Future Use">Future Use</a></big></b>
<br>
If there is future use of an <code><font color="blue">atomic_base</font></code> object,
after a call to <code><font color="blue">clear</font></code>,
the work space will be reallocated and held onto.

<br>
<br>
<b><big><a name="Restriction" id="Restriction">Restriction</a></big></b>
<br>
This routine cannot be called
while in <a href="ta_in_parallel.htm" target="_top"><span style='white-space: nowrap'>parallel</span></a>
 execution mode.


<hr>Input File: include/cppad/core/atomic/two/clear.hpp

</body>
</html>
