<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>User Atomic Matrix Multiply: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="User Atomic Matrix Multiply: Example and Test">
<meta name="keywords" id="keywords" content=" user atomic matrix multiply: example test see also class definition use function constructor recording forward reverse jac_sparsity hes_sparsity ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_atomic_three_mat_mul.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="atomic_three_reciprocal.cpp.htm" target="_top">Prev</a>
</td><td><a href="atomic_three_mat_mul.hpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>AD</option>
<option>ADValued</option>
<option>atomic</option>
<option>atomic_three</option>
<option>atomic_three_example</option>
<option>atomic_three_mat_mul.cpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_three_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_three_example_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_three_mat_mul.cpp_htm.js'></script>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>See Also</option>
<option>Class Definition</option>
<option>Use Atomic Function</option>
<option>---..Constructor</option>
<option>---..Recording</option>
<option>---..forward</option>
<option>---..reverse</option>
<option>---..jac_sparsity</option>
<option>---..hes_sparsity</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@<b>This is cppad-20221105 documentation</b>. Here is a link to its
<a href="https://cppad.readthedocs.io/en/latest/user_guide.html" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>User Atomic Matrix Multiply: Example and Test</big></big></b></center>
<br>
<b><big><a name="See Also" id="See Also">See Also</a></big></b>

<br>
<a href="atomic_two_eigen_mat_mul.cpp.htm" target="_top"><span style='white-space: nowrap'>atomic_two_eigen_mat_mul.cpp</span></a>




<br>
<br>
<b><big><a name="Class Definition" id="Class Definition">Class Definition</a></big></b>
<br>
This example uses the file <a href="atomic_three_mat_mul.hpp.htm" target="_top"><span style='white-space: nowrap'>atomic_three_mat_mul.hpp</span></a>

which defines matrix multiply as a <a href="atomic_three.htm" target="_top"><span style='white-space: nowrap'>atomic_three</span></a>
 operation.



<br>
<br>
<b><big><a name="Use Atomic Function" id="Use Atomic Function">Use Atomic Function</a></big></b>

<pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/cppad.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/example/atomic_three/mat_mul.hpp&gt;</font>

<font color="#009900">bool</font> <b><font color="#000000">mat_mul</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>   <font color="#009900">bool</font> ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
    <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>AD<font color="#990000">;</font>
    <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">;</font>
    <font color="#008080">size_t</font> i<font color="#990000">,</font> j<font color="#990000">;</font></tt></pre>
<br>
<big><a name="Use Atomic Function.Constructor" id="Use Atomic Function.Constructor">Constructor</a></big>

<pre style='display:inline'><tt>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// object that multiplies  2 x 2  matrices</font></i>
    <font color="#008080">atomic_mat_mul</font> afun<font color="#990000">;</font>
</tt></pre>
<br>
<big><a name="Use Atomic Function.Recording" id="Use Atomic Function.Recording">Recording</a></big>

<pre><tt>    <i><font color="#9A1900">// start recording with four independent varables</font></i>
    <font color="#008080">size_t</font> n <font color="#990000">=</font> <font color="#993399">4</font><font color="#990000">;</font>
    <font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">x</font></b><font color="#990000">(</font>n<font color="#990000">);</font>
    <font color="#008080">vector&lt; AD&lt;double&gt; &gt;</font> <b><font color="#000000">ax</font></b><font color="#990000">(</font>n<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n<font color="#990000">;</font> j<font color="#990000">++)</font>
        ax<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> x<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font>j <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">);</font>
    CppAD<font color="#990000">::</font><b><font color="#000000">Independent</font></b><font color="#990000">(</font>ax<font color="#990000">);</font>

    <i><font color="#9A1900">// ------------------------------------------------------------------</font></i>
    <font color="#008080">size_t</font> nr_left   <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
    <font color="#008080">size_t</font> n_middle  <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
    <font color="#008080">size_t</font> nc_right  <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
    <font color="#008080">vector&lt; AD&lt;double&gt; &gt;</font> <b><font color="#000000">atom_x</font></b><font color="#990000">(</font><font color="#993399">3</font> <font color="#990000">+</font> <font color="#990000">(</font>nr_left <font color="#990000">+</font> nc_right<font color="#990000">)</font> <font color="#990000">*</font> n_middle <font color="#990000">);</font>

    <i><font color="#9A1900">// matrix dimensions</font></i>
    atom_x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;(</font> nr_left <font color="#990000">);</font>
    atom_x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;(</font> n_middle <font color="#990000">);</font>
    atom_x<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">=</font> AD<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;(</font> nc_right <font color="#990000">);</font>

    <i><font color="#9A1900">// left matrix</font></i>
    atom_x<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">=</font> ax<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">];</font>  <i><font color="#9A1900">// left[0, 0] = x0</font></i>
    atom_x<font color="#990000">[</font><font color="#993399">4</font><font color="#990000">]</font> <font color="#990000">=</font> ax<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">];</font>  <i><font color="#9A1900">// left[0, 1] = x1</font></i>
    atom_x<font color="#990000">[</font><font color="#993399">5</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">5</font><font color="#990000">.;</font>     <i><font color="#9A1900">// left[1, 0] = 5</font></i>
    atom_x<font color="#990000">[</font><font color="#993399">6</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">6</font><font color="#990000">.;</font>     <i><font color="#9A1900">// left[1, 1] = 6</font></i>

    <i><font color="#9A1900">// right matix</font></i>
    atom_x<font color="#990000">[</font><font color="#993399">7</font><font color="#990000">]</font> <font color="#990000">=</font> ax<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">];</font>  <i><font color="#9A1900">// right[0, 0] = x2</font></i>
    atom_x<font color="#990000">[</font><font color="#993399">8</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">7</font><font color="#990000">.;</font>     <i><font color="#9A1900">// right[0, 1] = 7</font></i>
    atom_x<font color="#990000">[</font><font color="#993399">9</font><font color="#990000">]</font> <font color="#990000">=</font> ax<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">];</font>  <i><font color="#9A1900">// right[1, 0] = x3</font></i>
    atom_x<font color="#990000">[</font><font color="#993399">10</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">8</font><font color="#990000">.;</font>     <i><font color="#9A1900">// right[1, 1] = 8</font></i>
    <i><font color="#9A1900">// ------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">/*</font></i>
<i><font color="#9A1900">    [ x0 , x1 ] * [ x2 , 7 ] = [ x0*x2 + x1*x3 , x0*7 + x1*8 ]</font></i>
<i><font color="#9A1900">    [ 5  , 6  ]   [ x3 , 8 ]   [  5*x2 +  6*x3 ,  5*7 +  6*8 ]</font></i>
<i><font color="#9A1900">    */</font></i>
    <font color="#008080">vector&lt; AD&lt;double&gt; &gt;</font> <b><font color="#000000">atom_y</font></b><font color="#990000">(</font>nr_left <font color="#990000">*</font> nc_right<font color="#990000">);</font>
    <b><font color="#000000">afun</font></b><font color="#990000">(</font>atom_x<font color="#990000">,</font> atom_y<font color="#990000">);</font>

    ok <font color="#990000">&amp;=</font> <font color="#990000">(</font>atom_y<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]*</font>x<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">+</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]*</font>x<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">])</font> <font color="#990000">&amp;</font> <b><font color="#000000">Variable</font></b><font color="#990000">(</font>atom_y<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]);</font>
    ok <font color="#990000">&amp;=</font> <font color="#990000">(</font>atom_y<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]*</font><font color="#993399">7</font><font color="#990000">.</font>   <font color="#990000">+</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]*</font><font color="#993399">8</font><font color="#990000">.</font>  <font color="#990000">)</font> <font color="#990000">&amp;</font> <b><font color="#000000">Variable</font></b><font color="#990000">(</font>atom_y<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]);</font>
    ok <font color="#990000">&amp;=</font> <font color="#990000">(</font>atom_y<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">==</font>   <font color="#993399">5</font><font color="#990000">.*</font>x<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">+</font>   <font color="#993399">6</font><font color="#990000">.*</font>x<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">])</font> <font color="#990000">&amp;</font> <b><font color="#000000">Variable</font></b><font color="#990000">(</font>atom_y<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]);</font>
    ok <font color="#990000">&amp;=</font> <font color="#990000">(</font>atom_y<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">==</font>   <font color="#993399">5</font><font color="#990000">.*</font><font color="#993399">7</font><font color="#990000">.</font>   <font color="#990000">+</font>   <font color="#993399">6</font><font color="#990000">.*</font><font color="#993399">8</font><font color="#990000">.</font>  <font color="#990000">)</font> <font color="#990000">&amp;</font> <b><font color="#000000">Parameter</font></b><font color="#990000">(</font>atom_y<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]);</font>

    <i><font color="#9A1900">// ------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// define the function g : x -&gt; atom_y</font></i>
    <i><font color="#9A1900">// g(x) = [ x0*x2 + x1*x3 , x0*7 + x1*8 , 5*x2  + 6*x3  , 5*7 + 6*8 ]^T</font></i>
    CppAD<font color="#990000">::</font><font color="#008080">ADFun&lt;double&gt;</font> <b><font color="#000000">g</font></b><font color="#990000">(</font>ax<font color="#990000">,</font> atom_y<font color="#990000">);</font></tt></pre>
<br>
<big><a name="Use Atomic Function.forward" id="Use Atomic Function.forward">forward</a></big>

<pre><tt>    <i><font color="#9A1900">// Test zero order forward mode evaluation of g(x)</font></i>
    <font color="#008080">size_t</font> m <font color="#990000">=</font> atom_y<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font>
    <font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">y</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font>  n<font color="#990000">;</font> j<font color="#990000">++)</font>
        x<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font>j <font color="#990000">+</font> <font color="#993399">2</font><font color="#990000">);</font>
    y <font color="#990000">=</font> g<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font> x<font color="#990000">);</font>
    ok <font color="#990000">&amp;=</font> y<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">+</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">];</font>
    ok <font color="#990000">&amp;=</font> y<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">*</font> <font color="#993399">7</font><font color="#990000">.</font>   <font color="#990000">+</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">*</font> <font color="#993399">8</font><font color="#990000">.;</font>
    ok <font color="#990000">&amp;=</font> y<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">5</font><font color="#990000">.</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font>   <font color="#990000">+</font> <font color="#993399">6</font><font color="#990000">.</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">];</font>
    ok <font color="#990000">&amp;=</font> y<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">5</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">7</font><font color="#990000">.</font>     <font color="#990000">+</font> <font color="#993399">6</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">8</font><font color="#990000">.;</font>

    <i><font color="#9A1900">//----------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// Test first order forward mode evaluation of g'(x) * [1, 2, 3, 4]^T</font></i>
    <i><font color="#9A1900">// g'(x) = [ x2, x3, x0, x1 ]</font></i>
    <i><font color="#9A1900">//         [ 7 ,  8,  0, 0  ]</font></i>
    <i><font color="#9A1900">//         [ 0 ,  0,  5, 6  ]</font></i>
    <i><font color="#9A1900">//         [ 0 ,  0,  0, 0  ]</font></i>
    CppAD<font color="#990000">::</font><font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">dx</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">dy</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font>  n<font color="#990000">;</font> j<font color="#990000">++)</font>
        dx<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font>j <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">);</font>
    dy <font color="#990000">=</font> g<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font> dx<font color="#990000">);</font>
    ok <font color="#990000">&amp;=</font> dy<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">1</font><font color="#990000">.</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">+</font> <font color="#993399">2</font><font color="#990000">.</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">+</font> <font color="#993399">3</font><font color="#990000">.</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">+</font> <font color="#993399">4</font><font color="#990000">.</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">];</font>
    ok <font color="#990000">&amp;=</font> dy<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">1</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">7</font><font color="#990000">.</font>   <font color="#990000">+</font> <font color="#993399">2</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">8</font><font color="#990000">.</font>   <font color="#990000">+</font> <font color="#993399">3</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">0</font><font color="#990000">.</font>   <font color="#990000">+</font> <font color="#993399">4</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">0</font><font color="#990000">.;</font>
    ok <font color="#990000">&amp;=</font> dy<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">1</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">0</font><font color="#990000">.</font>   <font color="#990000">+</font> <font color="#993399">2</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">0</font><font color="#990000">.</font>   <font color="#990000">+</font> <font color="#993399">3</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">5</font><font color="#990000">.</font>   <font color="#990000">+</font> <font color="#993399">4</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">6</font><font color="#990000">.;</font>
    ok <font color="#990000">&amp;=</font> dy<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">1</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">0</font><font color="#990000">.</font>   <font color="#990000">+</font> <font color="#993399">2</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">0</font><font color="#990000">.</font>   <font color="#990000">+</font> <font color="#993399">3</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">0</font><font color="#990000">.</font>   <font color="#990000">+</font> <font color="#993399">4</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">0</font><font color="#990000">.;</font>

    <i><font color="#9A1900">//----------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// Test second order forward mode</font></i>
    <i><font color="#9A1900">// g_0^2 (x) = [ 0, 0, 1, 0 ], g_0^2 (x) * [1] = [3]</font></i>
    <i><font color="#9A1900">//             [ 0, 0, 0, 1 ]              [2]   [4]</font></i>
    <i><font color="#9A1900">//             [ 1, 0, 0, 0 ]              [3]   [1]</font></i>
    <i><font color="#9A1900">//             [ 0, 1, 0, 0 ]              [4]   [2]</font></i>
    CppAD<font color="#990000">::</font><font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">ddx</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">ddy</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font>  n<font color="#990000">;</font> j<font color="#990000">++)</font>
        ddx<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">.;</font>
    ddy <font color="#990000">=</font> g<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font> ddx<font color="#990000">);</font>

    <i><font color="#9A1900">// [1, 2, 3, 4] * g_0^2 (x) * [1, 2, 3, 4]^T = 1*3 + 2*4 + 3*1 + 4*2</font></i>
    ok <font color="#990000">&amp;=</font> <font color="#993399">2</font><font color="#990000">.</font> <font color="#990000">*</font> ddy<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">1</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">3</font><font color="#990000">.</font> <font color="#990000">+</font> <font color="#993399">2</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">4</font><font color="#990000">.</font> <font color="#990000">+</font> <font color="#993399">3</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">1</font><font color="#990000">.</font> <font color="#990000">+</font> <font color="#993399">4</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#993399">2</font><font color="#990000">.;</font>

    <i><font color="#9A1900">// for i &gt; 0, [1, 2, 3, 4] * g_i^2 (x) * [1, 2, 3, 4]^T = 0</font></i>
    ok <font color="#990000">&amp;=</font> ddy<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">.;</font>
    ok <font color="#990000">&amp;=</font> ddy<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">.;</font>
    ok <font color="#990000">&amp;=</font> ddy<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">.;</font></tt></pre>
<br>
<big><a name="Use Atomic Function.reverse" id="Use Atomic Function.reverse">reverse</a></big>

<pre><tt>    <i><font color="#9A1900">// Test second order reverse mode</font></i>
    CppAD<font color="#990000">::</font><font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">w</font></b><font color="#990000">(</font>m<font color="#990000">),</font> <b><font color="#000000">dw</font></b><font color="#990000">(</font><font color="#993399">2</font> <font color="#990000">*</font> n<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> i<font color="#990000">++)</font>
        w<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">.;</font>
    w<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">.;</font>
    dw <font color="#990000">=</font> g<font color="#990000">.</font><b><font color="#000000">Reverse</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font> w<font color="#990000">);</font>

    <i><font color="#9A1900">// g_0'(x) = [ x2, x3, x0, x1 ]</font></i>
    ok <font color="#990000">&amp;=</font> dw<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">*</font><font color="#993399">2</font> <font color="#990000">+</font> <font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> x<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">];</font>
    ok <font color="#990000">&amp;=</font> dw<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">*</font><font color="#993399">2</font> <font color="#990000">+</font> <font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> x<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">];</font>
    ok <font color="#990000">&amp;=</font> dw<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">*</font><font color="#993399">2</font> <font color="#990000">+</font> <font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">];</font>
    ok <font color="#990000">&amp;=</font> dw<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">*</font><font color="#993399">2</font> <font color="#990000">+</font> <font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">];</font>

    <i><font color="#9A1900">// g_0'(x)   * [1, 2, 3, 4]  = 1 * x2 + 2 * x3 + 3 * x0 + 4 * x1</font></i>
    <i><font color="#9A1900">// g_0^2 (x) * [1, 2, 3, 4]  = [3, 4, 1, 2]</font></i>
    ok <font color="#990000">&amp;=</font> dw<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">*</font><font color="#993399">2</font> <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">3</font><font color="#990000">.;</font>
    ok <font color="#990000">&amp;=</font> dw<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">*</font><font color="#993399">2</font> <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">4</font><font color="#990000">.;</font>
    ok <font color="#990000">&amp;=</font> dw<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">*</font><font color="#993399">2</font> <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">1</font><font color="#990000">.;</font>
    ok <font color="#990000">&amp;=</font> dw<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">*</font><font color="#993399">2</font> <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">2</font><font color="#990000">.;</font></tt></pre>
<br>
<big><a name="Use Atomic Function.jac_sparsity" id="Use Atomic Function.jac_sparsity">jac_sparsity</a></big>

<pre><tt>    <i><font color="#9A1900">// sparsity pattern for the Jacobian</font></i>
    <i><font color="#9A1900">// g'(x) = [ x2, x3, x0, x1  ]</font></i>
    <i><font color="#9A1900">//         [  7,  8,  0,  0  ]</font></i>
    <i><font color="#9A1900">//         [  0,  0,  5,  6  ]</font></i>
    <i><font color="#9A1900">//         [  0,  0,  0,  0  ]</font></i>
    CppAD<font color="#990000">::</font><font color="#008080">sparse_rc&lt; CPPAD_TESTVECTOR(size_t) &gt;</font> pattern_in<font color="#990000">,</font> pattern_out<font color="#990000">;</font>
    <font color="#009900">bool</font> transpose     <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
    <font color="#009900">bool</font> dependency    <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
    <font color="#009900">bool</font> internal_bool <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
    <i><font color="#9A1900">// test both forward and reverse mode</font></i>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> forward_mode <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> forward_mode <font color="#990000">&lt;=</font> <font color="#993399">1</font><font color="#990000">;</font> <font color="#990000">++</font>forward_mode<font color="#990000">)</font>
    <font color="#FF0000">{</font>   <b><font color="#0000FF">if</font></b><font color="#990000">(</font> <font color="#009900">bool</font><font color="#990000">(</font>forward_mode<font color="#990000">)</font> <font color="#990000">)</font>
        <font color="#FF0000">{</font>   pattern_in<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n<font color="#990000">,</font> n<font color="#990000">,</font> n<font color="#990000">);</font>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n<font color="#990000">;</font> <font color="#990000">++</font>j<font color="#990000">)</font>
                pattern_in<font color="#990000">.</font><b><font color="#000000">set</font></b><font color="#990000">(</font>j<font color="#990000">,</font> j<font color="#990000">,</font> j<font color="#990000">);</font>
            g<font color="#990000">.</font><b><font color="#000000">for_jac_sparsity</font></b><font color="#990000">(</font>
                pattern_in<font color="#990000">,</font> transpose<font color="#990000">,</font> dependency<font color="#990000">,</font> internal_bool<font color="#990000">,</font> pattern_out
            <font color="#990000">);</font>
        <font color="#FF0000">}</font>
        <b><font color="#0000FF">else</font></b>
        <font color="#FF0000">{</font>   pattern_in<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>m<font color="#990000">,</font> m<font color="#990000">,</font> m<font color="#990000">);</font>
            <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
                pattern_in<font color="#990000">.</font><b><font color="#000000">set</font></b><font color="#990000">(</font>i<font color="#990000">,</font> i<font color="#990000">,</font> i<font color="#990000">);</font>
            g<font color="#990000">.</font><b><font color="#000000">rev_jac_sparsity</font></b><font color="#990000">(</font>
                pattern_in<font color="#990000">,</font> transpose<font color="#990000">,</font> dependency<font color="#990000">,</font> internal_bool<font color="#990000">,</font> pattern_out
            <font color="#990000">);</font>
        <font color="#FF0000">}</font>
        <b><font color="#0000FF">const</font></b> <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>size_t<font color="#990000">)&amp;</font> row <font color="#990000">=</font> pattern_out<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">();</font>
        <b><font color="#0000FF">const</font></b> <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>size_t<font color="#990000">)&amp;</font> col <font color="#990000">=</font> pattern_out<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">();</font>
        <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>size_t<font color="#990000">)</font> row_major  <font color="#990000">=</font> pattern_out<font color="#990000">.</font><b><font color="#000000">row_major</font></b><font color="#990000">();</font>
        <font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
        <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n<font color="#990000">;</font> <font color="#990000">++</font>j<font color="#990000">)</font>
        <font color="#FF0000">{</font>   ok <font color="#990000">&amp;=</font> row<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">;</font> <i><font color="#9A1900">// (0, j)</font></i>
            ok <font color="#990000">&amp;=</font> col<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> j<font color="#990000">;</font>
            <font color="#990000">++</font>k<font color="#990000">;</font>
        <font color="#FF0000">}</font>
        ok <font color="#990000">&amp;=</font> row<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">1</font><font color="#990000">;</font> <i><font color="#9A1900">// (1, 0)</font></i>
        ok <font color="#990000">&amp;=</font> col<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">;</font> <i><font color="#9A1900">//</font></i>
        <font color="#990000">++</font>k<font color="#990000">;</font>
        ok <font color="#990000">&amp;=</font> row<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">1</font><font color="#990000">;</font> <i><font color="#9A1900">// (1, 1)</font></i>
        ok <font color="#990000">&amp;=</font> col<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">1</font><font color="#990000">;</font> <i><font color="#9A1900">//</font></i>
        <font color="#990000">++</font>k<font color="#990000">;</font>
        ok <font color="#990000">&amp;=</font> row<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">2</font><font color="#990000">;</font> <i><font color="#9A1900">// (2, 2)</font></i>
        ok <font color="#990000">&amp;=</font> col<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">2</font><font color="#990000">;</font> <i><font color="#9A1900">//</font></i>
        <font color="#990000">++</font>k<font color="#990000">;</font>
        ok <font color="#990000">&amp;=</font> row<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">2</font><font color="#990000">;</font> <i><font color="#9A1900">// (2, 3)</font></i>
        ok <font color="#990000">&amp;=</font> col<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">3</font><font color="#990000">;</font> <i><font color="#9A1900">//</font></i>
        <font color="#990000">++</font>k<font color="#990000">;</font>
        ok <font color="#990000">&amp;=</font> pattern_out<font color="#990000">.</font><b><font color="#000000">nnz</font></b><font color="#990000">()</font> <font color="#990000">==</font> k<font color="#990000">;</font>
    <font color="#FF0000">}</font></tt></pre>
<br>
<big><a name="Use Atomic Function.hes_sparsity" id="Use Atomic Function.hes_sparsity">hes_sparsity</a></big>

<pre><tt>    <i><font color="#9A1900">/* Hessian sparsity pattern</font></i>
<i><font color="#9A1900">    g_0^2 (x) = [ 0, 0, 1, 0 ] and for i &gt; 0, g_i^2 = 0</font></i>
<i><font color="#9A1900">                [ 0, 0, 0, 1 ]</font></i>
<i><font color="#9A1900">                [ 1, 0, 0, 0 ]</font></i>
<i><font color="#9A1900">                [ 0, 1, 0, 0 ]</font></i>
<i><font color="#9A1900">    */</font></i>
    <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font><font color="#009900">bool</font><font color="#990000">)</font> <b><font color="#000000">select_x</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">select_y</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n<font color="#990000">;</font> <font color="#990000">++</font>j<font color="#990000">)</font>
        select_x<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font>i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> <font color="#990000">++</font>i<font color="#990000">)</font>
        select_y<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> forward_mode <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> forward_mode <font color="#990000">&lt;=</font> <font color="#993399">1</font><font color="#990000">;</font> <font color="#990000">++</font>forward_mode<font color="#990000">)</font>
    <font color="#FF0000">{</font>   <b><font color="#0000FF">if</font></b><font color="#990000">(</font> <font color="#009900">bool</font><font color="#990000">(</font>forward_mode<font color="#990000">)</font> <font color="#990000">)</font>
        <font color="#FF0000">{</font>   g<font color="#990000">.</font><b><font color="#000000">for_hes_sparsity</font></b><font color="#990000">(</font>
                select_y<font color="#990000">,</font> select_x<font color="#990000">,</font> internal_bool<font color="#990000">,</font> pattern_out
            <font color="#990000">);</font>
        <font color="#FF0000">}</font>
        <b><font color="#0000FF">else</font></b>
        <font color="#FF0000">{</font>   <i><font color="#9A1900">// results for for_jac_sparsity are stored in g</font></i>
            g<font color="#990000">.</font><b><font color="#000000">rev_hes_sparsity</font></b><font color="#990000">(</font>
                select_y<font color="#990000">,</font> transpose<font color="#990000">,</font> internal_bool<font color="#990000">,</font> pattern_out
            <font color="#990000">);</font>
        <font color="#FF0000">}</font>
        <b><font color="#0000FF">const</font></b> <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>size_t<font color="#990000">)&amp;</font> row <font color="#990000">=</font> pattern_out<font color="#990000">.</font><b><font color="#000000">row</font></b><font color="#990000">();</font>
        <b><font color="#0000FF">const</font></b> <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>size_t<font color="#990000">)&amp;</font> col <font color="#990000">=</font> pattern_out<font color="#990000">.</font><b><font color="#000000">col</font></b><font color="#990000">();</font>
        <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>size_t<font color="#990000">)</font> row_major  <font color="#990000">=</font> pattern_out<font color="#990000">.</font><b><font color="#000000">row_major</font></b><font color="#990000">();</font>
        <font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
        ok <font color="#990000">&amp;=</font> row<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">;</font> <i><font color="#9A1900">// (0, 2)</font></i>
        ok <font color="#990000">&amp;=</font> col<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">2</font><font color="#990000">;</font>
        <font color="#990000">++</font>k<font color="#990000">;</font>
        ok <font color="#990000">&amp;=</font> row<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">1</font><font color="#990000">;</font> <i><font color="#9A1900">// (1, 3)</font></i>
        ok <font color="#990000">&amp;=</font> col<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">3</font><font color="#990000">;</font>
        <font color="#990000">++</font>k<font color="#990000">;</font>
        ok <font color="#990000">&amp;=</font> row<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">2</font><font color="#990000">;</font> <i><font color="#9A1900">// (2, 0)</font></i>
        ok <font color="#990000">&amp;=</font> col<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">;</font>
        <font color="#990000">++</font>k<font color="#990000">;</font>
        ok <font color="#990000">&amp;=</font> row<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">3</font><font color="#990000">;</font> <i><font color="#9A1900">// (3, 1)</font></i>
        ok <font color="#990000">&amp;=</font> col<font color="#990000">[</font> row_major<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">1</font><font color="#990000">;</font>
        <font color="#990000">++</font>k<font color="#990000">;</font>
        ok <font color="#990000">&amp;=</font> pattern_out<font color="#990000">.</font><b><font color="#000000">nnz</font></b><font color="#990000">()</font> <font color="#990000">==</font> k<font color="#990000">;</font>
    <font color="#FF0000">}</font>

    <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: example/atomic_three/mat_mul.cpp

</body>
</html>
