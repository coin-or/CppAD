<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Atomic Eigen Matrix Multiply: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Atomic Eigen Matrix Multiply: Example and Test">
<meta name="keywords" id="keywords" content=" atomic eigen matrix multiply: example test description class definition use function constructor ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_atomic_two_eigen_mat_mul.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://coin-or.github.io/CppAD" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="atomic_two_example.htm" target="_top">Prev</a>
</td><td><a href="atomic_two_eigen_mat_mul.hpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>CppAD</option>
<option>Appendix</option>
<option>deprecated</option>
<option>atomic_two_example</option>
<option>atomic_two_eigen_mat_mul.cpp</option>
</select>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_appendix_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_deprecated_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_two_example_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_atomic_two_eigen_mat_mul.cpp_htm.js'></script>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Description</option>
<option>Class Definition</option>
<option>Use Atomic Function</option>
<option>---..Constructor</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\W}[1]{ \; #1 \; }
\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\D}[2]{ \frac{\partial #1}{\partial #2} }
\newcommand{\DD}[3]{ \frac{\partial^2 #1}{\partial #2 \partial #3} }
\newcommand{\Dpow}[2]{ \frac{\partial^{#1}}{\partial  {#2}^{#1}} }
\newcommand{\dpow}[2]{ \frac{ {\rm d}^{#1}}{{\rm d}\, {#2}^{#1}} }@)@



<b>This is old CppAD documentation:</b> Here is a link to its
<a href="http://coin-or.github.io/CppAD" target="_top"><span style='white-space: nowrap'>current&nbsp;documentation</span></a>
.

<center><b><big><big>Atomic Eigen Matrix Multiply: Example and Test</big></big></b></center>
<br>
<b><big><a name="Description" id="Description">Description</a></big></b>
<br>
The <a href="adfun.htm" target="_top"><span style='white-space: nowrap'>ADFun</span></a>
 function object 
<code><i><font color="black"><span style='white-space: nowrap'>f</span></font></i></code>
 for this example is
<small>@[@

f(x) =
\left( \begin{array}{cc}
    0   & 0 \\
    1   & 2 \\
    x_0 & x_1
\end{array} \right)
\left( \begin{array}{c}
    x_0 \\
    x_1
\end{array} \right)
=
\left( \begin{array}{c}
    0 \\
    x_0 + 2 x_1 \\
    x_0 x_0 + x_1 x_1 )
\end{array} \right)

@]@</small>



<br>
<br>
<b><big><a name="Class Definition" id="Class Definition">Class Definition</a></big></b>
<br>
This example uses the file <a href="atomic_two_eigen_mat_mul.hpp.htm" target="_top"><span style='white-space: nowrap'>atomic_two_eigen_mat_mul.hpp</span></a>

which defines matrix multiply as a <a href="atomic_two.htm" target="_top"><span style='white-space: nowrap'>atomic_two</span></a>
 operation.



<br>
<br>
<b><big><a name="Use Atomic Function" id="Use Atomic Function">Use Atomic Function</a></big></b>

<pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/cppad.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cppad/example/atomic_two/eigen_mat_mul.hpp&gt;</font>

<font color="#009900">bool</font> <b><font color="#000000">eigen_mat_mul</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>   <i><font color="#9A1900">//</font></i>
    <b><font color="#0000FF">typedef</font></b> <font color="#009900">double</font>                                   scalar<font color="#990000">;</font>
    <b><font color="#0000FF">typedef</font></b> CppAD<font color="#990000">::</font><font color="#008080">AD&lt;scalar&gt;</font>                        ad_scalar<font color="#990000">;</font>
    <b><font color="#0000FF">typedef</font></b> atomic_eigen_mat_mul<font color="#990000">&lt;</font>scalar<font color="#990000">&gt;::</font><font color="#008080">ad_matrix</font>  ad_matrix<font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i>
    <font color="#009900">bool</font> ok    <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
    <font color="#008080">scalar</font> eps <font color="#990000">=</font> <font color="#993399">10</font><font color="#990000">.</font> <font color="#990000">*</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font>scalar<font color="#990000">&gt;::</font><b><font color="#000000">epsilon</font></b><font color="#990000">();</font>
    <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>NearEqual<font color="#990000">;</font>
    <i><font color="#9A1900">//</font></i></tt></pre>
<br>
<big><a name="Use Atomic Function.Constructor" id="Use Atomic Function.Constructor">Constructor</a></big>

<pre><tt>    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// object that multiplies arbitrary matrices</font></i>
    <font color="#008080">atomic_eigen_mat_mul&lt;scalar&gt;</font> mat_mul<font color="#990000">;</font>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// declare independent variable vector x</font></i>
    <font color="#008080">size_t</font> n <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
    <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>ad_scalar<font color="#990000">)</font> <b><font color="#000000">ad_x</font></b><font color="#990000">(</font>n<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n<font color="#990000">;</font> j<font color="#990000">++)</font>
        ad_x<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">ad_scalar</font></b><font color="#990000">(</font>j<font color="#990000">);</font>
    CppAD<font color="#990000">::</font><b><font color="#000000">Independent</font></b><font color="#990000">(</font>ad_x<font color="#990000">);</font>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">//        [ 0     0    ]</font></i>
    <i><font color="#9A1900">// left = [ 1     2    ]</font></i>
    <i><font color="#9A1900">//        [ x[0]  x[1] ]</font></i>
    <font color="#008080">size_t</font> nr_left  <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font>
    <font color="#008080">size_t</font> n_middle   <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
    <font color="#008080">ad_matrix</font> <b><font color="#000000">ad_left</font></b><font color="#990000">(</font>nr_left<font color="#990000">,</font> n_middle<font color="#990000">);</font>
    <b><font color="#000000">ad_left</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">=</font> <b><font color="#000000">ad_scalar</font></b><font color="#990000">(</font><font color="#993399">0.0</font><font color="#990000">);</font>
    <b><font color="#000000">ad_left</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font> <font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">=</font> <b><font color="#000000">ad_scalar</font></b><font color="#990000">(</font><font color="#993399">0.0</font><font color="#990000">);</font>
    <b><font color="#000000">ad_left</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">=</font> <b><font color="#000000">ad_scalar</font></b><font color="#990000">(</font><font color="#993399">1.0</font><font color="#990000">);</font>
    <b><font color="#000000">ad_left</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font> <font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">=</font> <b><font color="#000000">ad_scalar</font></b><font color="#990000">(</font><font color="#993399">2.0</font><font color="#990000">);</font>
    <b><font color="#000000">ad_left</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">=</font> ad_x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">];</font>
    <b><font color="#000000">ad_left</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font> <font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">=</font> ad_x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">];</font>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// right = [ x[0] , x[1] ]^T</font></i>
    <font color="#008080">size_t</font> nc_right <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
    <font color="#008080">ad_matrix</font> <b><font color="#000000">ad_right</font></b><font color="#990000">(</font>n_middle<font color="#990000">,</font> nc_right<font color="#990000">);</font>
    <b><font color="#000000">ad_right</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">=</font> ad_x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">];</font>
    <b><font color="#000000">ad_right</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">=</font> ad_x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">];</font>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// use atomic operation to multiply left * right</font></i>
    <font color="#008080">ad_matrix</font> ad_result <font color="#990000">=</font> mat_mul<font color="#990000">.</font><b><font color="#000000">op</font></b><font color="#990000">(</font>ad_left<font color="#990000">,</font> ad_right<font color="#990000">);</font>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// check that first component of result is a parameter</font></i>
    <i><font color="#9A1900">// and the other components are varaibles.</font></i>
    ok <font color="#990000">&amp;=</font> <b><font color="#000000">Parameter</font></b><font color="#990000">(</font> <b><font color="#000000">ad_result</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">);</font>
    ok <font color="#990000">&amp;=</font> <b><font color="#000000">Variable</font></b><font color="#990000">(</font>  <b><font color="#000000">ad_result</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">);</font>
    ok <font color="#990000">&amp;=</font> <b><font color="#000000">Variable</font></b><font color="#990000">(</font>  <b><font color="#000000">ad_result</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font> <font color="#993399">0</font><font color="#990000">)</font> <font color="#990000">);</font>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// declare the dependent variable vector y</font></i>
    <font color="#008080">size_t</font> m <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font>
    <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>ad_scalar<font color="#990000">)</font> <b><font color="#000000">ad_y</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> i<font color="#990000">++)</font>
        ad_y<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">ad_result</font></b><font color="#990000">(</font><font color="#009900">long</font><font color="#990000">(</font>i<font color="#990000">),</font> <font color="#993399">0</font><font color="#990000">);</font>
    CppAD<font color="#990000">::</font><font color="#008080">ADFun&lt;scalar&gt;</font> <b><font color="#000000">f</font></b><font color="#990000">(</font>ad_x<font color="#990000">,</font> ad_y<font color="#990000">);</font>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// check zero order forward mode</font></i>
    <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>scalar<font color="#990000">)</font> <b><font color="#000000">x</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">y</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n<font color="#990000">;</font> i<font color="#990000">++)</font>
        x<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#000000">scalar</font></b><font color="#990000">(</font>i <font color="#990000">+</font> <font color="#993399">2</font><font color="#990000">);</font>
    y   <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">,</font> x<font color="#990000">);</font>
    ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">],</font> <font color="#993399">0.0</font><font color="#990000">,</font>                       eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">],</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">+</font> <font color="#993399">2.0</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">],</font>         eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    ok <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">],</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">+</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">],</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// check first order forward mode</font></i>
    <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>scalar<font color="#990000">)</font> <b><font color="#000000">x1</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">y1</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
    x1<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
    x1<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
    y1    <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font> x1<font color="#990000">);</font>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y1<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">],</font> <font color="#993399">0.0</font><font color="#990000">,</font>        eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y1<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">],</font> <font color="#993399">1.0</font><font color="#990000">,</font>        eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y1<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">],</font> <font color="#993399">2.0</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">],</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    x1<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
    x1<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
    y1    <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font> x1<font color="#990000">);</font>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y1<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">],</font> <font color="#993399">0.0</font><font color="#990000">,</font>        eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y1<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">],</font> <font color="#993399">2.0</font><font color="#990000">,</font>        eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y1<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">],</font> <font color="#993399">2.0</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">],</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// check second order forward mode</font></i>
    <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>scalar<font color="#990000">)</font> <b><font color="#000000">x2</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">y2</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
    x2<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
    x2<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
    y2    <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">Forward</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font> x2<font color="#990000">);</font>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y2<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">],</font> <font color="#993399">0.0</font><font color="#990000">,</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y2<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">],</font> <font color="#993399">0.0</font><font color="#990000">,</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>y2<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">],</font> <font color="#993399">1.0</font><font color="#990000">,</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font> <i><font color="#9A1900">// 1/2 * f_1''(x)</font></i>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// check first order reverse mode</font></i>
    <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>scalar<font color="#990000">)</font> <b><font color="#000000">w</font></b><font color="#990000">(</font>m<font color="#990000">),</font> <b><font color="#000000">d1w</font></b><font color="#990000">(</font>n<font color="#990000">);</font>
    w<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font>  <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
    w<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font>  <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
    w<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font>  <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
    d1w   <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">Reverse</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font> w<font color="#990000">);</font>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>d1w<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">],</font> <font color="#993399">1.0</font><font color="#990000">,</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>d1w<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">],</font> <font color="#993399">2.0</font><font color="#990000">,</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    w<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font>  <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
    w<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font>  <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
    w<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font>  <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
    d1w   <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">Reverse</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">,</font> w<font color="#990000">);</font>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>d1w<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">],</font> <font color="#993399">2.0</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">],</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>d1w<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">],</font> <font color="#993399">2.0</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">],</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// check second order reverse mode</font></i>
    <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font>scalar<font color="#990000">)</font> <b><font color="#000000">d2w</font></b><font color="#990000">(</font><font color="#993399">2</font> <font color="#990000">*</font> n<font color="#990000">);</font>
    d2w   <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">Reverse</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">,</font> w<font color="#990000">);</font>
    <i><font color="#9A1900">// partial f_2 w.r.t. x_0</font></i>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>d2w<font color="#990000">[</font><font color="#993399">0</font> <font color="#990000">*</font> <font color="#993399">2</font> <font color="#990000">+</font> <font color="#993399">0</font><font color="#990000">],</font> <font color="#993399">2.0</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">],</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    <i><font color="#9A1900">// partial f_2 w.r.t  x_1</font></i>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>d2w<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">*</font> <font color="#993399">2</font> <font color="#990000">+</font> <font color="#993399">0</font><font color="#990000">],</font> <font color="#993399">2.0</font> <font color="#990000">*</font> x<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">],</font> eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    <i><font color="#9A1900">// partial f_2 w.r.t x_1, x_0</font></i>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>d2w<font color="#990000">[</font><font color="#993399">0</font> <font color="#990000">*</font> <font color="#993399">2</font> <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">],</font> <font color="#993399">0.0</font><font color="#990000">,</font>        eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    <i><font color="#9A1900">// partial f_2 w.r.t x_1, x_1</font></i>
    ok   <font color="#990000">&amp;=</font> <b><font color="#000000">NearEqual</font></b><font color="#990000">(</font>d2w<font color="#990000">[</font><font color="#993399">1</font> <font color="#990000">*</font> <font color="#993399">2</font> <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">],</font> <font color="#993399">2.0</font><font color="#990000">,</font>        eps<font color="#990000">,</font> eps<font color="#990000">);</font>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// check forward Jacobian sparsity</font></i>
    <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font> std<font color="#990000">::</font>set<font color="#990000">&lt;</font>size_t<font color="#990000">&gt;</font> <font color="#990000">)</font> <b><font color="#000000">r</font></b><font color="#990000">(</font>n<font color="#990000">),</font> <b><font color="#000000">s</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
    std<font color="#990000">::</font><font color="#008080">set&lt;size_t&gt;</font> check_set<font color="#990000">;</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n<font color="#990000">;</font> j<font color="#990000">++)</font>
        r<font color="#990000">[</font>j<font color="#990000">].</font><b><font color="#000000">insert</font></b><font color="#990000">(</font>j<font color="#990000">);</font>
    s      <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">ForSparseJac</font></b><font color="#990000">(</font>n<font color="#990000">,</font> r<font color="#990000">);</font>
    check_set<font color="#990000">.</font><b><font color="#000000">clear</font></b><font color="#990000">();</font>
    ok    <font color="#990000">&amp;=</font> s<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> check_set<font color="#990000">;</font>
    check_set<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>
    check_set<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
    ok    <font color="#990000">&amp;=</font> s<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> check_set<font color="#990000">;</font>
    ok    <font color="#990000">&amp;=</font> s<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">==</font> check_set<font color="#990000">;</font>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// check reverse Jacobian sparsity</font></i>
    r<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>m<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> m<font color="#990000">;</font> i<font color="#990000">++)</font>
        r<font color="#990000">[</font>i<font color="#990000">].</font><b><font color="#000000">insert</font></b><font color="#990000">(</font>i<font color="#990000">);</font>
    s  <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">RevSparseJac</font></b><font color="#990000">(</font>m<font color="#990000">,</font> r<font color="#990000">);</font>
    check_set<font color="#990000">.</font><b><font color="#000000">clear</font></b><font color="#990000">();</font>
    ok    <font color="#990000">&amp;=</font> s<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> check_set<font color="#990000">;</font>
    check_set<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>
    check_set<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
    ok    <font color="#990000">&amp;=</font> s<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> check_set<font color="#990000">;</font>
    ok    <font color="#990000">&amp;=</font> s<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">==</font> check_set<font color="#990000">;</font>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// check forward Hessian sparsity for f_2 (x)</font></i>
    <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font> std<font color="#990000">::</font>set<font color="#990000">&lt;</font>size_t<font color="#990000">&gt;</font> <font color="#990000">)</font> <b><font color="#000000">r2</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">),</font> <b><font color="#000000">s2</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">),</font> <b><font color="#000000">h</font></b><font color="#990000">(</font>n<font color="#990000">);</font>
    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n<font color="#990000">;</font> j<font color="#990000">++)</font>
        r2<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font><b><font color="#000000">insert</font></b><font color="#990000">(</font>j<font color="#990000">);</font>
    s2<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font><b><font color="#000000">clear</font></b><font color="#990000">();</font>
    s2<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">);</font>
    h <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">ForSparseHes</font></b><font color="#990000">(</font>r2<font color="#990000">,</font> s2<font color="#990000">);</font>
    check_set<font color="#990000">.</font><b><font color="#000000">clear</font></b><font color="#990000">();</font>
    check_set<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>
    ok <font color="#990000">&amp;=</font> h<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> check_set<font color="#990000">;</font>
    check_set<font color="#990000">.</font><b><font color="#000000">clear</font></b><font color="#990000">();</font>
    check_set<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
    ok <font color="#990000">&amp;=</font> h<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> check_set<font color="#990000">;</font>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <i><font color="#9A1900">// check reverse Hessian sparsity for f_2 (x)</font></i>
    <b><font color="#000000">CPPAD_TESTVECTOR</font></b><font color="#990000">(</font> std<font color="#990000">::</font>set<font color="#990000">&lt;</font>size_t<font color="#990000">&gt;</font> <font color="#990000">)</font> <b><font color="#000000">s3</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
    s3<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font><b><font color="#000000">clear</font></b><font color="#990000">();</font>
    s3<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">);</font>
    h <font color="#990000">=</font> f<font color="#990000">.</font><b><font color="#000000">RevSparseHes</font></b><font color="#990000">(</font>n<font color="#990000">,</font> s3<font color="#990000">);</font>
    check_set<font color="#990000">.</font><b><font color="#000000">clear</font></b><font color="#990000">();</font>
    check_set<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>
    ok <font color="#990000">&amp;=</font> h<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> check_set<font color="#990000">;</font>
    check_set<font color="#990000">.</font><b><font color="#000000">clear</font></b><font color="#990000">();</font>
    check_set<font color="#990000">.</font><b><font color="#000000">insert</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
    ok <font color="#990000">&amp;=</font> h<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> check_set<font color="#990000">;</font>
    <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
    <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: example/atomic_two/eigen_mat_mul.cpp

</body>
</html>
