// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-or-later
// SPDX-FileCopyrightText: Bradley M. Bell <bradbell@seanet.com>
// SPDX-FileContributor: 2003-25 Bradley M. Bell
// --------------------------------------------------------------------------
{xrst_begin opt_op_info dev}

Optimization Operator Information Class Requirements
####################################################

Syntax
******
| |tab| *Op_info* *op_info*
| |tab| *con_name* = *op_info* . *con_name* ( )
| |tab| *op_info* . ``get_`` (
| |tab| |tab| *i_op* ,
| |tab| |tab| *op_enum*,
| |tab| |tab| *arg_index*,
| |tab| |tab| *n_arg*,
| |tab| |tab| *n_before*,
| |tab| |tab| *n_after*,
| |tab| |tab| *is_con_op*
| |tab| )

Op_info
*******
This template parameter must be a class that satisfies
the requirements below.

Types
*****
Each of the types listed below are defined in an *Op_info* class.

value_t
=======
is the type of the values that these operators compute with.

op_enum_t
=========
is the enum type that identifies the different operators.

vec_addr_t
==========
is a vector type with ``addr_t`` elements.
It only needs to support the indexing operation.

vec_value_t
===========
is a vector type with ``value_t`` elements.
It only needs to support the indexing operation.


Constant Functions
******************
Given a *op_info* object,
the results of these functions are always the same.

.. csv-table::

   *con_name* , type,          Meaning
   n_op       , addr_t  ,      number of operators in the corresponding tape
   arg_all    , vec_addr_t ,   vector of arguments for all operators
   con_all    , vec_value_t ,  vector containing all the constants

The returns for the functions above are actually
``const`` references to the type in the table above.


get
***

i_op
====
is an ``addr_t`` index that identifies this particular use of the operator,
*i_op* < *op_info* . ``n_op`` () .
This argument is the only input to ``get`` ,
all the other arguments are outputs.

op_enum
=======
is an ``op_enum_t&`` that is set to the enum value for this operator.

arg_index
=========
is an ``addr_t&`` that is set to the index of the first
argument for this operator in the arg_all vector.

n_arg
=====
is an ``addr_t&`` that is set to the number of arguments for this operator.

n_before
========
is an ``addr_t&`` that is set to the number of arguments
before the first variable for this operator.

n_after
=======
is an ``addr_t&`` that is set to the number of arguments
after the last variable for this operator.

is_con_op
=========
is a ``bool&`` that is set to true (false) if this is (is not)
a constant operator
A constant operator must have n_arg = 1, n_before = 1, and n_after = 0 .
Furthermore, the value of the constant is::

   con_all[ arg_all[ arg_index ] ]

The value of *is_con_op* must only depend on the value of *op_enum* ;
i.e., it two operators have the same *op_enum*, they have the same
*is_con_op* .


{xrst_end opt_op_info}
