/* --------------------------------------------------------------------------
CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-22 Bradley M. Bell

  CppAD is distributed under the terms of the
               Eclipse Public License Version 2.0.

  This Source Code may also be made available under the following
  Secondary License when the conditions for such availability set forth
  in the Eclipse Public License, Version 2.0 are satisfied:
        GNU General Public License, Version 2.0 or later.
-------------------------------------------------------------------------- */
$begin eigen$$
$dollar @$$
$spell
    testvector
    dir
    namespace
    Eigen
    Cpp
    includedirs
    includedir
    cmake
    det
    cppad
    config
$$

$nospell
$bold This is cppad-20221105 documentation$$. Here is a link to its
$href%https://cppad.readthedocs.io/en/latest/user_guide.html%current documentation%$$.
$$
$section Including Eigen Examples, Tests, and sparse2eigen$$

$head Eigen Home Page$$
$href%http://eigen.tuxfamily.org%$$

$head Examples and Tests$$
CppAD can include the following examples and tests that
use the linear algebra package Eigen:
$comment check list with: grep 'eigen.*\.cpp' omh/example_list.omh'$$
$table
$rref cppad_eigen.hpp$$
$rref eigen_array.cpp$$
$rref eigen_det.cpp$$
$rref sparse2eigen.cpp$$
$rref atomic_two_eigen_cholesky.hpp$$
$rref atomic_two_eigen_mat_inv.hpp$$
$rref atomic_two_eigen_mat_mul.hpp$$
$tend

$head sparse2eigen$$
The $cref sparse2eigen$$ utility will only be available if
$cref/include_eigen/cmake/include_eigen/$$
is specified on the cmake command line.

$head include_eigen$$
If Eigen is installed on your system, you can
specify $code include_eigen=true$$ on the
$cref cmake$$ command line.
The value of $icode PKG_CONFIG_PATH$$ must be such that the command
$codei%
    pkg-config eigen3 --path --print-errors
%$$
finds the location of the file $code eigen3.pc$$.

$head eigen_prefix$$
With Eigen it is possible to use $codei%-D eigen_prefix=%eigen_prefix%$$
on the cmake command line.
In this case, the sub-directory $code Eigen$$ must exist in a directory
$codei%
    %eigen_prefix%/%includedir%
%$$
where $icode include_dir$$ is one of the directories in the
$cref/cmake_install_includedirs/cmake/cmake_install_includedirs/$$ list
of directories.

$head Examples$$
If you specify $icode/include_eigen/cmake/include_eigen/$$
on the cmake command line,
you will be able to run the Eigen examples list above
by executing the following commands starting in the
$cref/distribution directory/download/Distribution Directory/$$:
$codei%
    cd build/example
    make check_example
%$$
If you do this,
you will see an indication that the examples
$code eigen_array$$ and $code eigen_det$$
have passed their correctness check.

$head Test Vector$$
If you have specified $icode eigen_prefix$$ you can choose
$codei%
    -D cppad_testvector=eigen
%$$
on the $cref/cmake command/cmake/CMake Command/$$ line.
This we set the CppAD $cref testvector$$ to use Eigen vectors.

$head get_eigen$$
If you are using Unix, you can download and install
a copy of Eigen using $cref get_eigen.sh$$.
The corresponding install prefix is
$code build/prefix$$.


$end
