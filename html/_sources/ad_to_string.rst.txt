lines 9-47 of file: include/cppad/core/ad_to_string.hpp

{xrst_begin ad_to_string}

Convert An AD or Base Type to String
####################################

Syntax
******
*s* = ``to_string`` ( *value* ) .

See Also
********
:ref:`to_string-name` , :ref:`base_to_string-name`

value
*****
The argument *value* has prototype

| |tab| ``const AD<`` *Base* >& *value*
| |tab| ``const`` *Base* & *value*

where *Base* is a type that supports the
:ref:`base_to_string-name` type requirement.

s
*
The return value has prototype

   ``std::string`` *s*

and contains a representation of the specified *value* .
If *value* is an AD type,
the result has the same precision as for the *Base* type.

Example
*******
The file :ref:`to_string.cpp-name`
includes an example and test of ``to_string`` with AD types.

{xrst_end ad_to_string}
