lines 8-61 of file: include/cppad/core/chkpoint_two/dynamic.hpp

{xrst_begin chkpoint_two_dynamic}
{xrst_spell
   chk
}

Dynamic Parameters in Checkpoint Functions
##########################################

Syntax
******
*chk_fun* . ``new_dynamic`` ( *dynamic* )

Prototype
*********
{xrst_literal
   // BEGIN_PROTOTYPE
   // END_PROTOTYPE
}

chk_fun
*******
This object must have been created using the
:ref:`chkpoint_two<chkpoint_two_ctor@chk_fun>` constructor.

Base
====
This is the :ref:`chkpoint_two_ctor@Base` type
in the *chk_fun* constructor.

fun
===
This is the function :ref:`chkpoint_two_ctor@fun`
in the *chk_fun* constructor.

BaseVector
**********
This must be a :ref:`SimpleVector-name` with elements of type *Base* .

dynamic
*******
This is a vector with new values for the dynamic parameters
in the function *fun* .
Is size must be equal to
:ref:`fun.size_dyn_ind()<fun_property@size_dyn_par>` .
This only affects the copy of *fun* used by *chk_fun* .

Multi-Threading
***************
If one is using :ref:`in_parallel<ta_in_parallel-name>` ,
there is a separate copy of *fun* for each thread.
In this case, only the dynamic parameters in the copy for the current
:ref:`thread number<ta_thread_num-name>` are changed.

{xrst_end chkpoint_two_dynamic}
